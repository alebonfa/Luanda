*       *********************************************************
*       *                                                         
*       * 21/04/2013           INT_CONS.SPR              22:26:06 
*       *                                                         
*       *********************************************************
*       *                                                         
*       * Author's Name                                           
*       *                                                         
*       * Copyright (c) 2013 Company Name                         
*       * Address                                                 
*       * City,     Zip                                           
*       *                                                         
*       * Description:                                            
*       * This program was automatically generated by GENSCRN.    
*       *                                                         
*       *********************************************************


*       *********************************************************
*       *                                                         
*       *         INT_CONS/Windows Setup Code - SECTION 1         
*       *                                                         
*       *********************************************************
*

#REGION 1
*--
*-- REMOVE GENERATED CODE !!!
*--
*--
*-- Generated Code Options
*--
*-- Environment         off
*-- Open Files          off
*-- Close Files         off
*-- Define Windows      ON
*-- Release Windows     ON
*-- READ CYCLE          ON
*-- READ MODAL          off
*-- READ NOLOCK         off
*-- SET READBORDER      ON
*--
*--


#REGION 0
REGIONAL m.currarea, m.talkstat, m.compstat

IF SET("TALK") = "ON"
	SET TALK OFF
	m.talkstat = "ON"
ELSE
	m.talkstat = "OFF"
ENDIF
m.compstat = SET("COMPATIBLE")
SET COMPATIBLE FOXPLUS

m.rborder = SET("READBORDER")
SET READBORDER ON

*       *********************************************************
*       *                                                         
*       *               Windows Window definitions                
*       *                                                         
*       *********************************************************
*

IF NOT WEXIST("_2vo0yo9yb") ;
	OR UPPER(WTITLE("_2VO0YO9YB")) == "_2VO0YO9YB.PJX" ;
	OR UPPER(WTITLE("_2VO0YO9YB")) == "_2VO0YO9YB.SCX" ;
	OR UPPER(WTITLE("_2VO0YO9YB")) == "_2VO0YO9YB.MNX" ;
	OR UPPER(WTITLE("_2VO0YO9YB")) == "_2VO0YO9YB.PRG" ;
	OR UPPER(WTITLE("_2VO0YO9YB")) == "_2VO0YO9YB.FRX" ;
	OR UPPER(WTITLE("_2VO0YO9YB")) == "_2VO0YO9YB.QPR"
	DEFINE WINDOW _2vo0yo9yb ;
		AT  0.000, 0.000  ;
		SIZE 36.000,126.000 ;
		TITLE "Consulta de Clientes por Interesse" ;
		FONT "MS Sans Serif", 8 ;
		FLOAT ;
		NOCLOSE ;
		MINIMIZE ;
		SYSTEM ;
		COLOR RGB(,,,192,192,192)
	MOVE WINDOW _2vo0yo9yb CENTER
ENDIF


*       *********************************************************
*       *                                                         
*       *         INT_CONS/Windows Setup Code - SECTION 2         
*       *                                                         
*       *********************************************************
*

#REGION 1
* #IF .F. && generated code
* PRIVATE m.currarea, m.talkstat, m.compstat
* IF SET("TALK") = "ON"
*  SET TALK OFF
*  m.talkstat = "ON"
* ELSE
*  m.talkstat = "OFF"
* ENDIF
* m.compstat = SET("COMPATIBLE")
* SET COMPATIBLE OFF
* m.rborder = SET("READBORDER")
* SET READBORDER ON
* IF !WEXIST("_2vo0yo9yb")
*  DEFINE WINDOW _2vo0yo9yb AT   0.000 ,   0.000  SIZE  36.000 ,  ;
*   126.000  FONT "MS Sans Serif", 8 FLOAT NOCLOSE TITLE  ;
*   "Consulta de Clientes por Interesse" MINIMIZE SYSTEM COLOR  ;
*   RGB(,,,192,192,192)
*  MOVE WINDOW _2vo0yo9yb CENTER
* ENDIF
cli_dentro = .T.
stas = 1
DIMENSION l_clicur[ 1]
clicurs = 1
DIMENSION list_sta[ 1]
DIMENSION reg_sta[ 1]
inclui = .F.
cli_ent_al = "ALTERAÇÃO DE ALUNO"
lnaoaluno = .F.
tip_pes = 1
wnasc = {}
wcgc = ""
winsc = ""
wcpf = ""
wrg = ""
wnume = ""
winsc = ""
wnome = ""
wcadastro = DATE()
wend = ""
wcomp = ""
wnum = ""
wbairro = ""
wcidade = ""
wuf = ""
wcep = ""
wfone1 = ""
wfone2 = ""
wfone3 = ""
wcontato = ""
wcodigo = 0
wobs = ""
wstatus = 0
wzona = ""
wemail = ""
wcodaval = 0
wdesconto = 0
waval = ""
wmudsta = ""
went = ""
wmat = ""
wra = 0
westcivil = "Solteiro"
worgrg = ""
wemancipad = .T.
wsituacao = "Formado"
wnacional = "Brasileira"
wnatural = ""
wnatuf = ""
wpai = ""
wmae = ""
wsexo = 1
DIMENSION list_cur[ 1]
DIMENSION list_are[ 1]
DIMENSION list_int[ 1]
STORE 1 TO curs, ares
STORE {} TO di, df
lestado = .F.
nclientes = 0
CREATE CURSOR Temp_cur (sel L, id N (10))
INDEX ON id TAG id
SELECT cursos
SCAN
 SELECT temp_cur
 APPEND BLANK
 REPLACE temp_cur.id WITH cursos.id
ENDSCAN
CREATE CURSOR Temp_are (sel L, codigo C (2), uf C (2))
INDEX ON codigo TAG codigo
SELECT area
SCAN FOR area.curso
 SELECT temp_are
 APPEND BLANK
 REPLACE temp_are.codigo WITH area.codigo
 REPLACE temp_are.uf WITH area.uf
ENDSCAN
* IF WVISIBLE("_2vo0yo9yb")
*  ACTIVATE WINDOW SAME _2vo0yo9yb
* ELSE
*  ACTIVATE WINDOW NOSHOW _2vo0yo9yb
* ENDIF
* #ENDIF  && generated code
*--

*       *********************************************************
*       *                                                         
*       *             INT_CONS/Windows Screen Layout              
*       *                                                         
*       *********************************************************
*

#REGION 1
IF WVISIBLE("_2vo0yo9yb")
	ACTIVATE WINDOW _2vo0yo9yb SAME
ELSE
	ACTIVATE WINDOW _2vo0yo9yb NOSHOW
ENDIF
@ 0.385,2.400 SAY "CLIENTES - CONSULTA POR INTERESSE" ;
	FONT "MS Sans Serif", 14 ;
	STYLE "BT"
@ 3.769,40.800 SAY "Cursos" ;
	FONT "MS Sans Serif", 8 ;
	STYLE "BT"
@ 3.769,76.800 SAY "Locais" ;
	FONT "MS Sans Serif", 8 ;
	STYLE "BT"
@ 6.538,4.800 SAY "Período" ;
	FONT "MS Sans Serif", 8 ;
	STYLE "BT"
@ 8.385,4.800 SAY "Data Inicial" ;
	FONT "MS Sans Serif", 8 ;
	STYLE "T" ;
	COLOR RGB(0,0,128,,,,)
@ 10.231,4.800 SAY "Data Final" ;
	FONT "MS Sans Serif", 8 ;
	STYLE "T" ;
	COLOR RGB(0,0,128,,,,)
@ 3.769,2.400 SAY "Consulta" ;
	FONT "MS Sans Serif", 8 ;
	STYLE "BT"
@ 5.538,2.400 TO 15.461,36.200 ;
	PEN 1, 8
@ 5.615,2.600 TO 15.538,36.400 ;
	PEN 1, 8 ;
	COLOR RGB(255,255,255,,,,)
@ 8.385,19.600 GET di ;
	SIZE 1.000,13.600 ;
	DEFAULT " " ;
	FONT "MS Sans Serif", 8 ;
	VALID _2VO0YO9Z4() ;
	COLOR ,RGB(,,,255,255,255)
@ 10.231,19.600 GET df ;
	SIZE 1.000,13.600 ;
	DEFAULT " " ;
	FONT "MS Sans Serif", 8 ;
	VALID _2VO0YO9Z5() ;
	COLOR ,RGB(,,,255,255,255)
@ 12.077,4.800 GET lestado ;
	PICTURE "@*C Estado" ;
	SIZE 1.308,11.400 ;
	DEFAULT 0 ;
	FONT "MS Sans Serif", 8 ;
	STYLE "T" ;
	VALID _2VO0YO9Z7() ;
	COLOR ,,,,,,,,RGB(0,0,128,,,,),RGB(0,0,128,,,,)
@ 12.000,19.200 GET ufs ;
	PICTURE "@^" ;
	FROM list_uf ;
	SIZE 1.538,14.600 ;
	DEFAULT 1 ;
	FONT "MS Sans Serif", 8 ;
	VALID _2VO0YO9Z9()
@ 5.615,41.000 GET curs ;
 	PICTURE "@&N" ;
	FROM List_cur ;
	SIZE 9.143,22.143 ;
	DEFAULT 1 ;
	FONT "Courier New", 8 ;
	VALID _2VO0YO9ZA() ;
	COLOR RGB(,,,255,255,255),RGB(,,,255,255,255)
@ 5.615,77.000 GET ares ;
 	PICTURE "@&N" ;
	FROM List_are ;
	SIZE 9.143,32.429 ;
	DEFAULT 1 ;
	FONT "Courier New", 8 ;
	VALID _2VO0YO9ZC() ;
	COLOR RGB(,,,255,255,255),RGB(,,,255,255,255)
@ 16.692,2.600 GET Ints ;
 	PICTURE "@&N" ;
	FROM List_int ;
	SIZE 12.571,85.571 ;
	DEFAULT 1 ;
	FONT "Courier New", 8 ;
	VALID _2VO0YO9ZE() ;
	COLOR RGB(,,,255,255,255),RGB(,,,255,255,255)
@ 2.692,0.000 TO 2.692,126.000 ;
	PEN 2, 8 ;
	STYLE "1"
@ 33.231,2.400 GET bt_int ;
	PICTURE "@*HN Dados...;CRM...;Interesses...;Exportar;Sair >>" ;
	SIZE 1.769,24.000,0.000 ;
	DEFAULT 1 ;
	FONT "MS Sans Serif", 8 ;
	VALID _2VO0YO9ZU()
@ 32.308,0.000 TO 32.308,125.800 ;
	PEN 1, 8 ;
	STYLE "1"
@ 30.538,76.800 SAY "Quantidade de Alunos" ;
	FONT "MS Sans Serif", 8 ;
	STYLE "BT"
@ 30.538,103.600 SAY nclientes ;
	SIZE 1.000,11.333 ;
	FONT "MS Sans Serif", 8 ;
	STYLE "B" ;
	PICTURE "999,999"
@ 13.923,4.800 GET lnaoaluno ;
	PICTURE "@*C Somente Não Alunos" ;
	SIZE 1.308,24.800 ;
	DEFAULT 0 ;
	FONT "MS Sans Serif", 8 ;
	STYLE "T" ;
	VALID _2VO0YO9ZX() ;
	COLOR ,,,,,,,,RGB(0,0,128,,,,),RGB(0,0,128,,,,)

IF NOT WVISIBLE("_2vo0yo9yb")
	ACTIVATE WINDOW _2vo0yo9yb
ENDIF

READ CYCLE MODAL ;
	WHEN _2VO0YO9ZZ() ;
	SHOW _2VO0YOA00()

RELEASE WINDOW _2vo0yo9yb

#REGION 0

SET READBORDER &rborder

IF m.talkstat = "ON"
	SET TALK ON
ENDIF
IF m.compstat = "ON"
	SET COMPATIBLE ON
ENDIF


*       *********************************************************
*       *                                                         
*       *              INT_CONS/Windows Cleanup Code              
*       *                                                         
*       *********************************************************
*

#REGION 1
* #IF .F. && generated code
* RELEASE WINDOW _2vo0yo9yb
* SET READBORDER &rborder
* IF m.talkstat = "ON"
*  SET TALK ON
* ENDIF
* IF m.compstat = "ON"
*  SET COMPATIBLE ON
* ENDIF
* #ENDIF  && generated code
*--

*--


*       *********************************************************
*       *                                                         
*       *  INT_CONS/Windows Supporting Procedures and Functions   
*       *                                                         
*       *********************************************************
*

#REGION 1
PROCEDURE clicur_l
l_clicur[ 1] = "Nenhum curso registrado..."
SELECT subarea.sigla + " " + area.sigla + " " +  ;
       clicurso.situacao, clicurso.primario FROM Clicurso, Area,  ;
       Subarea WHERE clicurso.codarea == area.codigo AND  ;
       clicurso.codsub == subarea.codigo AND clicurso.codcli ==  ;
       auxcli ORDER BY subarea.sigla, area.sigla INTO ARRAY  ;
       l_clicur
IF ALEN(l_clicur) > 1
 nrec = ALEN(l_clicur) / 2
 FOR i = 1 TO nrec
  SELECT clicurso
  SEEK l_clicur(i,2)
  SELECT modulos
  SEEK clicurso.codsub + clicurso.codarea
  IF FOUND()
   l_clicur[ i, 1] = LEFT(ALLTRIM(l_clicur(i,1)), 15) + " " +  ;
           STR(modulos.ano_i, 4) + "   " +  ;
           SUBSTR(ALLTRIM(l_clicur(i,1)), 17, 10)
  ELSE
   l_clicur[ i, 1] = LEFT(ALLTRIM(l_clicur(i,1)), 15) + " " +  ;
           SPACE(4) + "   " + SUBSTR(ALLTRIM(l_clicur(i,1)), 17,  ;
           10)
  ENDIF
 ENDFOR
ENDIF
RETURN
*--

*--
PROCEDURE sta_list
SELECT status.descricao, status.codigo FROM Status ORDER BY  ;
       status.descricao INTO ARRAY list_sta
SELECT status.codigo FROM Status ORDER BY status.descricao INTO  ;
       ARRAY reg_sta
RETURN
*--

*--
PROCEDURE cur_list
SELECT "  " + cursos.sigla, cursos.id FROM Cursos ORDER BY  ;
       cursos.sigla INTO ARRAY list_cur
nrec = ALEN(list_cur) / 2
FOR i = 1 TO nrec
 SELECT temp_cur
 SEEK list_cur(i,2)
 IF temp_cur.sel
  list_cur[ i, 1] = STUFF(list_cur(i,1), 1, 1, "*")
 ENDIF
ENDFOR
RETURN
*--

*--
PROCEDURE are_list
SELECT "  " + area.descricao, area.codigo FROM Area WHERE  ;
       area.curso ORDER BY area.descricao INTO ARRAY list_are
nrec = ALEN(list_are) / 2
FOR i = 1 TO nrec
 SELECT temp_are
 SEEK list_are(i,2)
 IF temp_are.sel
  list_are[ i, 1] = STUFF(list_are(i,1), 1, 1, "*")
 ENDIF
ENDFOR
RETURN
*--

*--
PROCEDURE int_list
	auxfrom = ""
	auxwhere = ""
	IF !ISBLANK(di) .OR. !ISBLANK(df)
		DO CASE
		CASE !ISBLANK(di) .AND. !ISBLANK(df)
		ENDCASE
	ENDIF
	wcur = 0
	SELECT temp_cur
	CALCULATE FOR temp_cur.sel CNT() TO wcur
	ware = 0
	SELECT temp_are
	CALCULATE FOR temp_are.sel CNT() TO ware
	IF wcur > 0
		auxfrom = "FROM Cliente, Int_suba "
		auxwhere = "WHERE Int_suba.Cliente_id == Cliente.Codigo "
		auxwhere = auxwhere + "AND Int_suba.Subarea_id IN (SELECT Temp_cur.Id FROM Temp_cur WHERE Temp_cur.Sel = .T.) "
		IF !ISBLANK(di) .OR. !ISBLANK(df)
			DO CASE
			CASE !ISBLANK(di) .AND. !ISBLANK(df)
				auxwhere = auxwhere + "AND Int_suba.Data >= Di AND Int_suba.Data <= Df "
			CASE !ISBLANK(di) .AND. ISBLANK(df)
				auxwhere = auxwhere + "AND Int_suba.Data >= Di "
			CASE ISBLANK(di) .AND. !ISBLANK(df)
				auxwhere = auxwhere + "AND Int_suba.Data <= Df "
			ENDCASE
		ENDIF
		IF ware > 0
			SELECT Cliente.Codigo ;
				&Auxfrom ;
				&Auxwhere ;
				GROUP BY Cliente.Codigo;
				INTO CURSOR Aux_cur
		ENDIF
	ENDIF
	IF ware > 0
		auxfrom = "FROM Cliente, Int_area "
		auxwhere = "WHERE Int_area.Cliente_id == Cliente.Codigo "
		auxwhere = auxwhere + "AND Int_area.Area_id IN (SELECT Temp_are.Codigo FROM Temp_are WHERE Temp_are.Sel = .T.) "
 		IF !ISBLANK(di) .OR. !ISBLANK(df)
			DO CASE
			CASE !ISBLANK(di) .AND. !ISBLANK(df)
				auxwhere = auxwhere + "AND Int_area.Data >= Di AND Int_area.Data <= Df "
			CASE !ISBLANK(di) .AND. ISBLANK(df)
				auxwhere = auxwhere + "AND Int_area.Data >= Di "
			CASE ISBLANK(di) .AND. !ISBLANK(df)
				auxwhere = auxwhere + "AND Int_area.Data <= Df "
			ENDCASE
		ENDIF
	ENDIF
	IF wcur > 0 .OR. ware > 0
		IF wcur > 0 .AND. ware > 0
			IF lnaoaluno
				lnaoaluno = .F.
			ENDIF
			auxwhere = auxwhere + "AND Cliente.Codigo IN (SELECT Aux_cur.Codigo FROM Aux_cur) "
		ENDIF
		IF lnaoaluno
			auxwhere = auxwhere + "AND Cliente.Codigo NOT IN (SELECT Clicurso.Codcli " +  ;
             'FROM Clicurso WHERE ALLTRIM(Clicurso.Situacao) $ "ATIVO-BOLSISTA") '
		ENDIF
		DIMENSION list_int[ 1]
		list_int[ 1] = "Não existem alunos interessados nessa consulta..."
		SELECT Cliente.Nome + ' ' +  STR(Cliente.Codigo, 6),  Cliente.Codigo;
			&Auxfrom ;
			&Auxwhere ;
			GROUP BY Cliente.Codigo  ORDER BY Cliente.Nome;
			INTO ARRAY List_int
		nclientes = ALEN(list_int) / 2
	ELSE
		nclientes = 0
		DIMENSION list_int[ 1]
		list_int[ 1] = "Selecione um dos filtros acima..."
	ENDIF
RETURN
*--

*--
PROCEDURE int_exp
auxfrom = ""
auxwhere = ""
IF !ISBLANK(di) .OR. !ISBLANK(df)
 DO CASE
  CASE !ISBLANK(di) .AND. !ISBLANK(df)
 ENDCASE
ENDIF
wcur = 0
SELECT temp_cur
CALCULATE FOR temp_cur.sel CNT() TO wcur
ware = 0
SELECT temp_are
CALCULATE FOR temp_are.sel CNT() TO ware
IF wcur > 0
 auxfrom = "FROM Cliente, Int_suba "
 auxwhere = "WHERE Int_suba.Cliente_id == Cliente.Codigo "
 auxwhere = auxwhere +  ;
            "AND Int_suba.Subarea_id IN (SELECT Temp_cur.Id FROM Temp_cur 											 		   		WHERE Temp_cur.Sel = .T.) "
 IF !ISBLANK(di) .OR. !ISBLANK(df)
  DO CASE
   CASE !ISBLANK(di) .AND. !ISBLANK(df)
    auxwhere = auxwhere +  ;
               "AND Int_suba.Data >= Di AND Int_suba.Data <= Df "
   CASE !ISBLANK(di) .AND. ISBLANK(df)
    auxwhere = auxwhere + "AND Int_suba.Data >= Di "
   CASE ISBLANK(di) .AND. !ISBLANK(df)
    auxwhere = auxwhere + "AND Int_suba.Data <= Df "
  ENDCASE
 ENDIF
 IF ware > 0
  SELECT Cliente.Codigo  &Auxfrom  &Auxwhere  GROUP BY Cliente.Codigo;
 INTO CURSOR Aux_cur
 ENDIF
ENDIF
IF ware > 0
 auxfrom = "FROM Cliente, Int_area "
 auxwhere = "WHERE Int_area.Cliente_id == Cliente.Codigo "
 auxwhere = auxwhere +  ;
            "AND Int_area.Area_id IN (SELECT Temp_are.Codigo FROM Temp_are 											 		   	 WHERE Temp_are.Sel = .T.) "
 IF !ISBLANK(di) .OR. !ISBLANK(df)
  DO CASE
   CASE !ISBLANK(di) .AND. !ISBLANK(df)
    auxwhere = auxwhere +  ;
               "AND Int_area.Data >= Di AND Int_area.Data <= Df "
   CASE !ISBLANK(di) .AND. ISBLANK(df)
    auxwhere = auxwhere + "AND Int_area.Data >= Di "
   CASE ISBLANK(di) .AND. !ISBLANK(df)
    auxwhere = auxwhere + "AND Int_area.Data <= Df "
  ENDCASE
 ENDIF
ENDIF
IF wcur > 0 .OR. ware > 0
 IF wcur > 0 .AND. ware > 0
  IF lnaoaluno
   lnaoaluno = .F.
  ENDIF
  auxwhere = auxwhere +  ;
             "AND Cliente.Codigo IN (SELECT Aux_cur.Codigo FROM Aux_cur) "
 ENDIF
 IF lnaoaluno
  auxwhere = auxwhere +  ;
             "AND Cliente.Codigo NOT IN (SELECT Clicurso.Codcli " +  ;
             'FROM Clicurso WHERE ALLTRIM(Clicurso.Situacao) $ "ATIVO-BOLSISTA") '
 ENDIF
 SELECT Cliente.Codigo,  Cliente.Nome,  Cliente.Fone1,  Cliente.Fone2,;
 Cliente.Email  &Auxfrom  &Auxwhere  GROUP BY Cliente.Codigo;
 ORDER BY Cliente.Nome  INTO CURSOR Int_cli
 IF FILE("C:\INT_CLI.XLS")
  DELETE FILE C:\INT_CLI.XLS
 ENDIF
 SELECT int_cli
 COPY TO C:\INT_CLI TYPE XLS
 DO winalert WITH "AVISO", "ARQUIVO GRAVADO EM C:\INT_CLI.XLS"
ENDIF
RETURN
*--

*--
PROCEDURE consulta
SELECT cliente
tip_pes = cliente.pessoa
IF cliente.pessoa = 1
 wcpf = cliente.cgc
 wrg = cliente.insc
ELSE
 wcgc = cliente.cgc
 winsc = cliente.insc
ENDIF
wcodigo = cliente.codigo
wnome = ALLTRIM(cliente.nome)
wcadastro = cliente.cadastro
wend = ALLTRIM(cliente.end)
wbairro = ALLTRIM(cliente.bairro)
wcidade = ALLTRIM(cliente.cidade)
wuf = ALLTRIM(cliente.uf)
wcep = ALLTRIM(cliente.cep)
wcomp = ALLTRIM(cliente.comp)
wnume = ALLTRIM(cliente.numero)
wfone1 = cliente.fone1
wfone2 = cliente.fone2
wcontato = cliente.contato
wemail = cliente.email
wcodaval = cliente.aval_id
wdesconto = cliente.desconto
went = cliente.entidade
wmat = cliente.matricula
wobs = cliente.obs
wra = cliente.ra
westcivil = cliente.estcivil
worgrg = cliente.orgrg
wemancipad = cliente.emancipado
wsituacao = cliente.situacao
wnacional = cliente.nacional
wnatural = cliente.natural
wnatuf = cliente.natuf
wpai = cliente.pai
wmae = cliente.mae
wnasc = cliente.nasc
wsexo = cliente.sexo
IF cliente.aval_id > 0
 SELECT avalista
 SEEK cliente.aval_id
 IF FOUND()
  waval = avalista.nome
 ENDIF
 SELECT cliente
ENDIF
IF !ISBLANK(cliente.msta_data)
 wmudsta = DTOC(cliente.msta_data) + " - " +  ;
           ALLTRIM(cliente.msta_user)
ELSE
 wmudsta = ""
ENDIF
stas = ASCAN(reg_sta, cliente.status)
inclui = .F.
_CUROBJ = OBJNUM(wend)
RETURN
*--

*--
PROCEDURE zera_var
tip_pes = 1
wcgc = ""
wcpf = ""
wrg = ""
wcgcmostra = ""
wcodigo = ""
winsc = ""
wnome = ""
wnume = ""
wcadastro = DATE()
wend = ""
wbairro = ""
wcidade = ""
wuf = ""
wcep = ""
wcomp = ""
wfone1 = ""
wfone2 = ""
wcontato = ""
wemail = ""
wcodaval = 0
wdesconto = 0.00
waval = ""
wobs = ""
went = ""
wmat = ""
wmudsta = ""
stas = 1
wra = 0
westcivil = "Solteiro"
worgrg = ""
wemancipad = .T.
wsituacao = "Formado"
wnatural = ""
wnatuf = ""
wpai = ""
wmae = ""
wnasc = {}
wsexo = 1
RETURN
*--


*       *********************************************************
*       *                                                         
*       * _2VO0YO9Z4           di VALID                           
*       *                                                         
*       * Function Origin:                                        
*       *                                                         
*       * From Platform:       Windows                            
*       * From Screen:         INT_CONS,     Record Number:   11  
*       * Variable:            di                                 
*       * Called By:           VALID Clause                       
*       * Object Type:         Field                              
*       * Snippet Number:      1                                  
*       *                                                         
*       *********************************************************
*
FUNCTION _2VO0YO9Z4     &&  di VALID
#REGION 1
DO int_list
SHOW GETS
*--

*       *********************************************************
*       *                                                         
*       * _2VO0YO9Z5           df VALID                           
*       *                                                         
*       * Function Origin:                                        
*       *                                                         
*       * From Platform:       Windows                            
*       * From Screen:         INT_CONS,     Record Number:   12  
*       * Variable:            df                                 
*       * Called By:           VALID Clause                       
*       * Object Type:         Field                              
*       * Snippet Number:      2                                  
*       *                                                         
*       *********************************************************
*
FUNCTION _2VO0YO9Z5     &&  df VALID
#REGION 1
DO int_list
SHOW GETS
*--

*       *********************************************************
*       *                                                         
*       * _2VO0YO9Z7           lestado VALID                      
*       *                                                         
*       * Function Origin:                                        
*       *                                                         
*       * From Platform:       Windows                            
*       * From Screen:         INT_CONS,     Record Number:   13  
*       * Variable:            lestado                            
*       * Called By:           VALID Clause                       
*       * Object Type:         Check Box                          
*       * Snippet Number:      3                                  
*       *                                                         
*       *********************************************************
*
FUNCTION _2VO0YO9Z7     &&  lestado VALID
#REGION 1
IF lestado
 SELECT temp_are
 REPLACE temp_are.sel WITH .F. ALL
 REPLACE temp_are.sel WITH .T. FOR ALLTRIM(temp_are.uf) =  ;
         ALLTRIM(list_uf(ufs))
 DO are_list
 DO int_list
 SHOW GETS
ENDIF
*--

*       *********************************************************
*       *                                                         
*       * _2VO0YO9Z9           ufs VALID                          
*       *                                                         
*       * Function Origin:                                        
*       *                                                         
*       * From Platform:       Windows                            
*       * From Screen:         INT_CONS,     Record Number:   14  
*       * Variable:            ufs                                
*       * Called By:           VALID Clause                       
*       * Object Type:         Popup                              
*       * Snippet Number:      4                                  
*       *                                                         
*       *********************************************************
*
FUNCTION _2VO0YO9Z9     &&  ufs VALID
#REGION 1
IF lestado
 SELECT temp_are
 REPLACE temp_are.sel WITH .F. ALL
 REPLACE temp_are.sel WITH .T. FOR ALLTRIM(temp_are.uf) =  ;
         ALLTRIM(list_uf(ufs))
 DO are_list
 DO int_list
 SHOW GETS
ENDIF
*--

*       *********************************************************
*       *                                                         
*       * _2VO0YO9ZA           curs VALID                         
*       *                                                         
*       * Function Origin:                                        
*       *                                                         
*       * From Platform:       Windows                            
*       * From Screen:         INT_CONS,     Record Number:   15  
*       * Variable:            curs                               
*       * Called By:           VALID Clause                       
*       * Object Type:         List                               
*       * Snippet Number:      5                                  
*       *                                                         
*       *********************************************************
*
FUNCTION _2VO0YO9ZA     &&  curs VALID
#REGION 1
SELECT temp_cur
SEEK list_cur(curs,2)
IF temp_cur.sel
 REPLACE temp_cur.sel WITH .F.
ELSE
 REPLACE temp_cur.sel WITH .T.
ENDIF
DO cur_list
DO int_list
SHOW GETS
*--

*       *********************************************************
*       *                                                         
*       * _2VO0YO9ZC           ares VALID                         
*       *                                                         
*       * Function Origin:                                        
*       *                                                         
*       * From Platform:       Windows                            
*       * From Screen:         INT_CONS,     Record Number:   16  
*       * Variable:            ares                               
*       * Called By:           VALID Clause                       
*       * Object Type:         List                               
*       * Snippet Number:      6                                  
*       *                                                         
*       *********************************************************
*
FUNCTION _2VO0YO9ZC     &&  ares VALID
#REGION 1
SELECT temp_are
SEEK list_are(ares,2)
IF temp_are.sel
 REPLACE temp_are.sel WITH .F.
ELSE
 REPLACE temp_are.sel WITH .T.
ENDIF
DO are_list
DO int_list
SHOW GETS
*--

*       *********************************************************
*       *                                                         
*       * _2VO0YO9ZE           Ints VALID                         
*       *                                                         
*       * Function Origin:                                        
*       *                                                         
*       * From Platform:       Windows                            
*       * From Screen:         INT_CONS,     Record Number:   17  
*       * Variable:            Ints                               
*       * Called By:           VALID Clause                       
*       * Object Type:         List                               
*       * Snippet Number:      7                                  
*       *                                                         
*       *********************************************************
*
FUNCTION _2VO0YO9ZE     &&  Ints VALID
#REGION 1
access = veracess(wcoduser,2,"CON")
SELECT cliente
SEEK (list_int(ints,2))
IF access
 DO Cad_crm.SPR
ENDIF
*--

*       *********************************************************
*       *                                                         
*       * _2VO0YO9ZU           bt_int VALID                       
*       *                                                         
*       * Function Origin:                                        
*       *                                                         
*       * From Platform:       Windows                            
*       * From Screen:         INT_CONS,     Record Number:   19  
*       * Variable:            bt_int                             
*       * Called By:           VALID Clause                       
*       * Object Type:         Push Button                        
*       * Snippet Number:      8                                  
*       *                                                         
*       *********************************************************
*
FUNCTION _2VO0YO9ZU     &&  bt_int VALID
#REGION 1
IF ALEN(list_int) > 1
 SELECT cliente
 SEEK (list_int(ints,2))
ENDIF
DO CASE
 CASE bt_int = 1
  access = veracess(wcoduser,1,"ALT")
  IF access
   DO consulta
   DO Cad_cli2.SPR
  ENDIF
 CASE bt_int = 2
  access = veracess(wcoduser,2,"CON")
  IF access
   DO Cad_crm.SPR
  ENDIF
 CASE bt_int = 3
  DO Cli_int.SPR
  DO cur_list
  DO are_list
 CASE bt_int = 4
  DO int_exp
 CASE bt_int = 5
  CLEAR READ
ENDCASE
SHOW GETS
*--

*       *********************************************************
*       *                                                         
*       * _2VO0YO9ZX           lnaoaluno VALID                    
*       *                                                         
*       * Function Origin:                                        
*       *                                                         
*       * From Platform:       Windows                            
*       * From Screen:         INT_CONS,     Record Number:   23  
*       * Variable:            lnaoaluno                          
*       * Called By:           VALID Clause                       
*       * Object Type:         Check Box                          
*       * Snippet Number:      9                                  
*       *                                                         
*       *********************************************************
*
FUNCTION _2VO0YO9ZX     &&  lnaoaluno VALID
#REGION 1
DO int_list
SHOW GETS
*--

*       *********************************************************
*       *                                                         
*       * _2VO0YO9ZZ           Read Level When                    
*       *                                                         
*       * Function Origin:                                        
*       *                                                         
*       *                                                         
*       * From Platform:       Windows                            
*       * From Screen:         INT_CONS                           
*       * Called By:           READ Statement                     
*       * Snippet Number:      10                                 
*       *                                                         
*       *********************************************************
*
FUNCTION _2VO0YO9ZZ     && Read Level When
*
* When Code from screen: INT_CONS
*
#REGION 1
DO cur_list
DO are_list
DO sta_list
SHOW GETS
*--

*       *********************************************************
*       *                                                         
*       * _2VO0YOA00           Read Level Show                    
*       *                                                         
*       * Function Origin:                                        
*       *                                                         
*       *                                                         
*       * From Platform:       Windows                            
*       * From Screen:         INT_CONS                           
*       * Called By:           READ Statement                     
*       * Snippet Number:      11                                 
*       *                                                         
*       *********************************************************
*
FUNCTION _2VO0YOA00     && Read Level Show
PRIVATE currwind
STORE WOUTPUT() TO currwind
*
* Show Code from screen: INT_CONS
*
#REGION 1
* PRIVATE currwind
* STORE WOUTPUT() TO currwind
* IF SYS(2016) = "_2VO0YO9YB" .OR. SYS(2016) = "*"
*  ACTIVATE WINDOW SAME _2vo0yo9yb
*  @  30.538 , 103.600  SAY nclientes FONT "MS Sans Serif", 8  ;
*   STYLE "B" SIZE 1.000 , 11.333 , 0.000  PICTURE "999,999"
* ENDIF
* IF !EMPTY(currwind)
*  ACTIVATE WINDOW SAME (currwind)
* ENDIF
*--
IF SYS(2016) = "_2VO0YO9YB" OR SYS(2016) = "*"
	ACTIVATE WINDOW _2vo0yo9yb SAME
	@ 30.538,103.600 SAY nclientes ;
		SIZE 1.000,11.333, 0.000 ;
		FONT "MS Sans Serif", 8 ;
		STYLE "B" ;
		PICTURE "999,999"
ENDIF
IF NOT EMPTY(currwind)
	ACTIVATE WINDOW (currwind) SAME
ENDIF