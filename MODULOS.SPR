*       *********************************************************
*       *                                                         
*       * 21/04/2013            MODULOS.SPR              22:27:50 
*       *                                                         
*       *********************************************************
*       *                                                         
*       * Author's Name                                           
*       *                                                         
*       * Copyright (c) 2013 Company Name                         
*       * Address                                                 
*       * City,     Zip                                           
*       *                                                         
*       * Description:                                            
*       * This program was automatically generated by GENSCRN.    
*       *                                                         
*       *********************************************************


*       *********************************************************
*       *                                                         
*       *         MODULOS/Windows Setup Code - SECTION 1          
*       *                                                         
*       *********************************************************
*

#REGION 1
*--
*-- REMOVE GENERATED CODE !!!
*--
*--
*-- Generated Code Options
*--
*-- Environment         off
*-- Open Files          off
*-- Close Files         off
*-- Define Windows      ON
*-- Release Windows     ON
*-- READ CYCLE          ON
*-- READ MODAL          off
*-- READ NOLOCK         off
*-- SET READBORDER      ON
*--
*--


#REGION 0
REGIONAL m.currarea, m.talkstat, m.compstat

IF SET("TALK") = "ON"
	SET TALK OFF
	m.talkstat = "ON"
ELSE
	m.talkstat = "OFF"
ENDIF
m.compstat = SET("COMPATIBLE")
SET COMPATIBLE FOXPLUS

m.rborder = SET("READBORDER")
SET READBORDER ON

*       *********************************************************
*       *                                                         
*       *               Windows Window definitions                
*       *                                                         
*       *********************************************************
*

IF NOT WEXIST("_2vo0yozgv") ;
	OR UPPER(WTITLE("_2VO0YOZGV")) == "_2VO0YOZGV.PJX" ;
	OR UPPER(WTITLE("_2VO0YOZGV")) == "_2VO0YOZGV.SCX" ;
	OR UPPER(WTITLE("_2VO0YOZGV")) == "_2VO0YOZGV.MNX" ;
	OR UPPER(WTITLE("_2VO0YOZGV")) == "_2VO0YOZGV.PRG" ;
	OR UPPER(WTITLE("_2VO0YOZGV")) == "_2VO0YOZGV.FRX" ;
	OR UPPER(WTITLE("_2VO0YOZGV")) == "_2VO0YOZGV.QPR"
	DEFINE WINDOW _2vo0yozgv ;
		AT  0.000, 0.000  ;
		SIZE 34.923,139.600 ;
		TITLE "CONTROLE DE MÓDULOS" ;
		FONT "MS Sans Serif", 8 ;
		FLOAT ;
		NOCLOSE ;
		MINIMIZE ;
		SYSTEM ;
		COLOR RGB(,,,192,192,192)
	MOVE WINDOW _2vo0yozgv CENTER
ENDIF


*       *********************************************************
*       *                                                         
*       *         MODULOS/Windows Setup Code - SECTION 2          
*       *                                                         
*       *********************************************************
*

#REGION 1
* #IF .F. && generated code
* PRIVATE m.currarea, m.talkstat, m.compstat
* IF SET("TALK") = "ON"
*  SET TALK OFF
*  m.talkstat = "ON"
* ELSE
*  m.talkstat = "OFF"
* ENDIF
* m.compstat = SET("COMPATIBLE")
* SET COMPATIBLE OFF
* m.rborder = SET("READBORDER")
* SET READBORDER ON
* IF !WEXIST("_2vo0yozgv")
*  DEFINE WINDOW _2vo0yozgv AT   0.000 ,   0.000  SIZE  34.846 ,  ;
*   133.600  FONT "MS Sans Serif", 8 FLOAT NOCLOSE TITLE  ;
*   "CONTROLE DE MÓDULOS" MINIMIZE SYSTEM COLOR RGB(,,,192,192, ;
*   192)
*  MOVE WINDOW _2vo0yozgv CENTER
* ENDIF
lbranco = .F.
laluno = .F.
wcurso = ALLTRIM(LEFT(lst_curs(curs,1), 10)) + " - " +  ;
         ALLTRIM(SUBSTR(lst_curs(curs,1), 13, 20))
STORE {} TO wdi, wdf
wnumero = 0
wqde_notas = 1
lopcional = .F.
DIMENSION list_mod[ 1]
mods = 1
incluim = .T.
STORE "" TO wlla_dp1, wlla_dp2, wlla_dp3, wlla_dp4, wlla_dp5,  ;
      wlla_dp6, wlla_dp7, wlla_dp8, wlla_dp9
wla_subc = SUBSTR(lst_curs(curs,2), 1, 4)
wla_arec = SUBSTR(lst_curs(curs,2), 5, 4)
wla_modulo = 0
DIMENSION list_alu[ 1]
list_alu[ 1] = "Nenhum aluno cadastrado neste curso..."
SELECT UPPER(cliente.nome) + "   " + UPPER(clicurso.situacao),  ;
       cliente.codigo FROM Cliente, Clicurso WHERE  ;
       cliente.codigo == clicurso.codcli AND clicurso.codarea ==  ;
       wla_arec AND clicurso.codsub == wla_subc ORDER BY  ;
       cliente.nome INTO ARRAY list_alu
vis_impr = .F.
* IF WVISIBLE("_2vo0yozgv")
*  ACTIVATE WINDOW SAME _2vo0yozgv
* ELSE
*  ACTIVATE WINDOW NOSHOW _2vo0yozgv
* ENDIF
* #ENDIF  && generated code
*--

*       *********************************************************
*       *                                                         
*       *              MODULOS/Windows Screen Layout              
*       *                                                         
*       *********************************************************
*

#REGION 1
IF WVISIBLE("_2vo0yozgv")
	ACTIVATE WINDOW _2vo0yozgv SAME
ELSE
	ACTIVATE WINDOW _2vo0yozgv NOSHOW
ENDIF
@ 6.538,4.800 SAY "Número" ;
	FONT "MS Sans Serif", 8 ;
	STYLE "T"
@ 4.692,79.200 SAY "Qde. Notas" ;
	FONT "MS Sans Serif", 8 ;
	STYLE "T"
@ 6.538,28.800 SAY "Início" ;
	FONT "MS Sans Serif", 8 ;
	STYLE "T"
@ 6.538,52.800 SAY "Final" ;
	FONT "MS Sans Serif", 8 ;
	STYLE "T"
@ 4.692,4.800 SAY "Curso" ;
	FONT "MS Sans Serif", 8 ;
	STYLE "BT"
@ 3.692,2.400 TO 11.077,137.600 ;
	PEN 1, 8
@ 3.769,2.600 TO 11.154,137.800 ;
	PEN 1, 8 ;
	COLOR RGB(255,255,255,,,,)
@ 0.923,41.200 SAY "CADASTRO DE MÓDULOS" ;
	FONT "MS Sans Serif", 14 ;
	STYLE "BT"
@ 31.385,0.000 TO 31.385,139.200 ;
	PEN 1, 8 ;
	STYLE "1"
@ 8.231,2.600 TO 8.231,137.400 ;
	PEN 1, 8 ;
	STYLE "1"
@ 8.308,2.800 TO 8.308,137.400 ;
	PEN 1, 8 ;
	STYLE "1" ;
	COLOR RGB(255,255,255,255,255,255)
@ 4.692,17.200 SAY wcurso ;
	SIZE 1.000,47.333 ;
	FONT "MS Sans Serif", 8 ;
	STYLE "B" ;
	COLOR RGB(,,,192,192,192)
@ 4.692,93.600 GET wqde_notas ;
	PICTURE "@*RHN 1;2;3" ;
	SIZE 1.308,5.667,0.000 ;
	DEFAULT 1 ;
	FONT "MS Sans Serif", 8 ;
	STYLE "BT"
@ 4.692,116.800 GET lopcional ;
	PICTURE "@*C Módulo Opcional" ;
	SIZE 1.308,20.800 ;
	DEFAULT 0 ;
	FONT "MS Sans Serif", 8 ;
	STYLE "T" ;
	COLOR ,,,,,,,,RGB(0,0,128,,,,),RGB(0,0,128,,,,)
@ 6.538,17.200 GET wnumero ;
	SIZE 1.000,7.333 ;
	DEFAULT " " ;
	FONT "MS Sans Serif", 8 ;
	STYLE "B" ;
	PICTURE "@K" ;
	VALID _3rm1c60mz() ;
	COLOR ,RGB(,,,255,255,255)
@ 6.538,36.400 GET wdi ;
	SIZE 1.000,13.600 ;
	DEFAULT " " ;
	FONT "MS Sans Serif", 8 ;
	VALID _2VO0YOZHM() ;
	COLOR ,RGB(,,,255,255,255)
@ 6.538,60.400 GET wdf ;
	SIZE 1.000,13.600 ;
	DEFAULT " " ;
	FONT "MS Sans Serif", 8 ;
	COLOR ,RGB(,,,255,255,255)
@ 3.231,121.600 GET men_mod ;
	PICTURE "@*HN Adiciona" ;
	SIZE 1.154,14.400,0.800 ;
	DEFAULT 1 ;
	FONT "MS Sans Serif", 8 ;
	VALID _3rm1c60o8()
@ 12.154,2.600 GET mods ;
 	PICTURE "@&N" ;
	FROM List_mod ;
	SIZE 17.143,92.286 ;
	DEFAULT 1 ;
	FONT "Courier New", 8 ;
	VALID _2VO0YOZHQ() ;
	COLOR RGB(,,,255,255,255),RGB(,,,255,255,255)
@ 32.308,2.800 GET men_lanc ;
	PICTURE "@*HN Carga Horária;Lançamentos;Ativ Compl;TCC;Exclusão;Impressões...;Reposição...;Exporta...;Sair >>" ;
	SIZE 1.769,15.000,0.000 ;
	DEFAULT 1 ;
	FONT "MS Sans Serif", 8 ;
	VALID _2VO0YOZHR()
@ 9.000,4.800 GET laluno ;
	PICTURE "@*C Aluno" ;
	SIZE 1.308,10.200 ;
	DEFAULT 0 ;
	FONT "MS Sans Serif", 8 ;
	STYLE "T"
@ 8.923,16.800 GET alus ;
	PICTURE "@^" ;
	FROM list_alu ;
	SIZE 1.500,73.857 ;
	DEFAULT 1 ;
	FONT "Courier New", 8 ;
	VALID _2VO0YOZHW() ;
	COLOR ,,,,,,,,RGB(0,0,128,255,255,255),RGB(0,0,128,255,255,255)
@ 9.077,121.600 GET bt_avulso ;
	PICTURE "@*HN Avulsos..." ;
	SIZE 1.154,14.400,0.800 ;
	DEFAULT 1 ;
	FONT "MS Sans Serif", 8 ;
	VALID _2VO0YOZID()
@ 12.077,132.800 GET btTrocaModulo ;
	PICTURE "@*VN <<;<;>;>>" ;
	SIZE 4.615,4.500,0.000 ;
	DEFAULT 1 ;
	FONT "MS Sans Serif", 8 ;
	STYLE "B" ;
	VALID _3rm1c60qs()

IF NOT WVISIBLE("_2vo0yozgv")
	ACTIVATE WINDOW _2vo0yozgv
ENDIF

READ CYCLE MODAL ;
	WHEN _3rm1c60s0() ;
	SHOW _2VO0YOZIG()

RELEASE WINDOW _2vo0yozgv

#REGION 0

SET READBORDER &rborder

IF m.talkstat = "ON"
	SET TALK ON
ENDIF
IF m.compstat = "ON"
	SET COMPATIBLE ON
ENDIF



*       *********************************************************
*       *                                                         
*       *  MODULOS/Windows Supporting Procedures and Functions    
*       *                                                         
*       *********************************************************
*

#REGION 1
PROCEDURE mud_modulo
	IF wnumero > 0 .AND. !ISBLANK(wdi) .AND. !ISBLANK(wdf)
		IF incluim
			SELECT mod_cab
			SEEK LEFT(lst_curs(curs,2), 4) + STR(wnumero, 2)
			IF !FOUND()
				CALCULATE MAX(primario) TO ult_pri
				APPEND BLANK
				REPLACE mod_cab.primario WITH ult_pri + 1
				REPLACE mod_cab.curso_id WITH modulos.primario
				REPLACE mod_cab.area WITH SUBSTR(lst_curs(curs,2), 5, 4)
				REPLACE mod_cab.subarea WITH SUBSTR(lst_curs(curs,2), 1, 4)
				REPLACE mod_cab.numero WITH wnumero
			ELSE
				DO winalert WITH "AVISO", "MÓDULO JÁ CADASTRADO. ALTERAÇÕES PROCESSADAS."
			ENDIF
		ENDIF
		REPLACE mod_cab.dat_ini WITH wdi
		REPLACE mod_cab.dat_fim WITH wdf
		REPLACE mod_cab.qde_notas WITH wqde_notas
		REPLACE mod_cab.opcional WITH lopcional
	ELSE
		DO winalert WITH "AVISO", "MÓDULO NÃO CADASTRADO! FALTAM DADOS!"
	ENDIF
	DO zera_var
	DO mod_list
RETURN
*--

*--
PROCEDURE zera_var
STORE {} TO wdi, wdf
wnumero = 0
wqde_notas = 1
lopcional = .F.
incluim = .T.
SHOW GET men_mod, 1 PROMPT "Adiciona"
RETURN
*--

*--
PROCEDURE mod_list
DIMENSION list_mod[ 1]
list_mod[ 1] = "NÃO EXISTEM MÓDULOS CADASTRADOS NESTE CURSO..."
SELECT STR(mod_cab.numero, 2) + " [" + DTOC(mod_cab.dat_ini) +  ;
       " A " + DTOC(mod_cab.dat_fim) + "] " +  ;
       IIF(mod_cab.opcional, "OPC", SPACE(3)) + " " +  ;
       STR(mod_cab.qde_notas, 1) + " " + IIF(mod_cab.qde_notas =  ;
       1, "NOTA   ", "NOTA(S)"), mod_cab.subarea + mod_cab.area +  ;
       STR(mod_cab.numero, 2) FROM Mod_cab WHERE mod_cab.subarea +  ;
       mod_cab.area == lst_curs(curs,2) ORDER BY mod_cab.numero  ;
       INTO ARRAY list_mod
FOR i = 1 TO ALEN(list_mod) / 2
 SELECT mod_cab
 SEEK list_mod(i,2)
 SELECT mod_rep
 LOCATE FOR mod_rep.mod_orig == mod_cab.primario .AND.  ;
        mod_rep.cliente_id == list_alu(alus,2)
 IF FOUND()
  SELECT mod_cab
  LOCATE FOR mod_cab.primario == mod_rep.mod_repost
  SELECT area
  SEEK mod_cab.area
  SELECT subarea
  SEEK mod_cab.subarea
  list_mod[ i, 1] = RTRIM(list_mod(i,1)) + " REPOSTO EM " +  ;
          ALLTRIM(subarea.sigla) + "-" + ALLTRIM(area.sigla) +  ;
          " [" + DTOC(mod_cab.dat_ini) + "-" +  ;
          DTOC(mod_cab.dat_fim) + "]"
 ENDIF
ENDFOR
SELECT mod_cab
mods = 1
RETURN
*--

*--
PROCEDURE cons_modul
	SELECT mod_cab
	WAIT WIND lst_curs(curs,2) + STR(wnumero, 2)
	SEEK lst_curs(curs,2) + STR(wnumero, 2)
	IF FOUND()
		incluim = .F.
		SHOW GET men_mod, 1 PROMPT "Altera"
		wqde_notas = mod_cab.qde_notas
		lopcional = mod_cab.opcional
		wdi = mod_cab.dat_ini
		wdf = mod_cab.dat_fim
	ELSE
		incluim = .T.
		SHOW GET men_mod, 1 PROMPT "Adiciona"
	ENDIF
RETURN
*--

*--
PROCEDURE cons2_modu
SELECT mod_cab
SEEK list_mod(mods,2)
wnumero = mod_cab.numero
wqde_notas = mod_cab.qde_notas
lopcional = mod_cab.opcional
wdi = mod_cab.dat_ini
wdf = mod_cab.dat_fim
incluim = .F.
SHOW GET men_mod, 1 PROMPT "Altera"
RETURN
*--

*--
FUNCTION get_period
PARAMETER nperiodo
ret = ""
DO CASE
 CASE nperiodo = 1
  ret = "M"
 CASE nperiodo = 2
  ret = "T"
 CASE nperiodo = 3
  ret = "N"
ENDCASE
RETURN ret
*--

*--
PROCEDURE exc_modulo
conf = winconf("ATENÇÃO", ;
       "Tem certeza que deseja excluir este módulo?")
IF conf
 WAIT WINDOW NOWAIT  ;
      "Excluindo lançamentos FREQUENCIAS E NOTAS..."
 SELECT academic
 DELETE FOR academic.codmod == mod_cab.primario
 WAIT WINDOW NOWAIT "Excluindo ATIVIDADES COMPLEMENTARES..."
 SELECT ativcomp
 DELETE FOR ativcomp.codmod == mod_cab.primario
 WAIT WINDOW NOWAIT "Excluindo ATIVIDADES COMPLEMENTARES..."
 SELECT mod_disc
 DELETE FOR mod_disc.modulo == mod_cab.primario
 SELECT mod_cab
 DELETE
 DO winalert WITH "AVISO", "EXCLUSÃO CONCLUÍDA!"
 DO mod_list
ENDIF
RETURN
*--


*       *********************************************************
*       *                                                         
*       * _3RM1C60MZ           wnumero VALID                      
*       *                                                         
*       * Function Origin:                                        
*       *                                                         
*       * From Platform:       Windows                            
*       * From Screen:         MODULOS,     Record Number:   16   
*       * Variable:            wnumero                            
*       * Called By:           VALID Clause                       
*       * Object Type:         Field                              
*       * Snippet Number:      1                                  
*       *                                                         
*       *********************************************************
*
FUNCTION _3rm1c60mz     &&  wnumero VALID
#REGION 1
DO Cons_modul
SHOW GETS

*       *********************************************************
*       *                                                         
*       * _2VO0YOZHM           wdi VALID                          
*       *                                                         
*       * Function Origin:                                        
*       *                                                         
*       * From Platform:       Windows                            
*       * From Screen:         MODULOS,     Record Number:   17   
*       * Variable:            wdi                                
*       * Called By:           VALID Clause                       
*       * Object Type:         Field                              
*       * Snippet Number:      2                                  
*       *                                                         
*       *********************************************************
*
FUNCTION _2VO0YOZHM     &&  wdi VALID
#REGION 1
wdf = wdi + 2
SHOW GETS
*--

*       *********************************************************
*       *                                                         
*       * _3RM1C60O8           men_mod VALID                      
*       *                                                         
*       * Function Origin:                                        
*       *                                                         
*       * From Platform:       Windows                            
*       * From Screen:         MODULOS,     Record Number:   19   
*       * Variable:            men_mod                            
*       * Called By:           VALID Clause                       
*       * Object Type:         Push Button                        
*       * Snippet Number:      3                                  
*       *                                                         
*       *********************************************************
*
FUNCTION _3rm1c60o8     &&  men_mod VALID
#REGION 1
IF incluim
	ACCESS = veracess(wcoduser,28,"INC")
ELSE
	ACCESS = veracess(wcoduser,28,"ALT")
ENDIF
IF ACCESS
	DO mud_modulo
	SHOW GETS
ENDIF


*       *********************************************************
*       *                                                         
*       * _2VO0YOZHQ           mods VALID                         
*       *                                                         
*       * Function Origin:                                        
*       *                                                         
*       * From Platform:       Windows                            
*       * From Screen:         MODULOS,     Record Number:   20   
*       * Variable:            mods                               
*       * Called By:           VALID Clause                       
*       * Object Type:         List                               
*       * Snippet Number:      4                                  
*       *                                                         
*       *********************************************************
*
FUNCTION _2VO0YOZHQ     &&  mods VALID
#REGION 1
DO cons2_modu
SHOW GETS
*--

*       *********************************************************
*       *                                                         
*       * _2VO0YOZHR           men_lanc VALID                     
*       *                                                         
*       * Function Origin:                                        
*       *                                                         
*       * From Platform:       Windows                            
*       * From Screen:         MODULOS,     Record Number:   21   
*       * Variable:            men_lanc                           
*       * Called By:           VALID Clause                       
*       * Object Type:         Push Button                        
*       * Snippet Number:      5                                  
*       *                                                         
*       *********************************************************
*
FUNCTION _2VO0YOZHR     &&  men_lanc VALID
#REGION 1
SELECT mod_cab
SEEK list_mod(mods,2)
DO CASE
 CASE men_lanc = 1
  access = veracess(wcoduser,29,"CON")
  IF access
   DO Cad_mod.SPR
  ENDIF
 CASE men_lanc = 2
  access = veracess(wcoduser,30,"CON")
  IF access
   DO Lancacad.SPR
  ENDIF
 CASE men_lanc = 3
  access = veracess(wcoduser,31,"CON")
  IF access
   wla_modulo = mod_cab.primario
   SELECT academic
   SEEK STR(wla_modulo, 10) + STR(list_alu(alus,2), 6)
   SELECT la
   SEEK academic.primario
   IF FOUND()
    DO Lanc_ac.SPR
   ELSE
    DO winalert WITH "ATENÇÃO", "Lançamento não encontrado!"
   ENDIF
   SHOW GETS
  ENDIF
 CASE men_lanc = 5
  access = veracess(wcoduser,28,"EXC")
  IF access
   DO exc_modulo
  ENDIF
 CASE men_lanc = 6
  access = veracess(wcoduser,28,"IMP")
  IF access
   DO Imp_mod.SPR
  ENDIF
 CASE men_lanc = 7
  ldireto = .T.
  global_id = 0
  aux_id = mod_cab.primario
  SELECT mod_rep
  LOCATE FOR mod_rep.mod_orig == aux_id .AND. mod_rep.cliente_id ==  ;
         list_alu(alus,2)
  IF !FOUND()
   DO Busc_mod.SPR
   IF global_id > 0
    GOTO BOTTOM
    ult_id = mod_rep.id
    APPEND BLANK
    REPLACE mod_rep.id WITH ult_id + 1
    REPLACE mod_rep.cliente_id WITH list_alu(alus,2)
    REPLACE mod_rep.mod_orig WITH aux_id
    REPLACE mod_rep.mod_repost WITH global_id
   ENDIF
  ELSE
   conf = winconf("ATENÇÃO","Retirar Reposição?")
   IF conf
    SELECT mod_rep
    DELETE
   ENDIF
  ENDIF
  global_id = 0
  DO mod_list
  mods = 1
  ldireto = .F.
 CASE men_lanc = 8
  conf = winconf("Atenção","Exportar todos os módulos?")
  IF conf
   nrec = ALEN(list_mod) / 2
   FOR k = 1 TO nrec
    SELECT mod_cab
    SEEK list_mod(k,2)
    DO exp_pres
   ENDFOR
  ELSE
   DO exp_pres
  ENDIF
 CASE men_lanc = 9
  CLEAR READ
ENDCASE
SHOW GETS
*--

*       *********************************************************
*       *                                                         
*       * _2VO0YOZHW           alus VALID                         
*       *                                                         
*       * Function Origin:                                        
*       *                                                         
*       * From Platform:       Windows                            
*       * From Screen:         MODULOS,     Record Number:   23   
*       * Variable:            alus                               
*       * Called By:           VALID Clause                       
*       * Object Type:         Popup                              
*       * Snippet Number:      6                                  
*       *                                                         
*       *********************************************************
*
FUNCTION _2VO0YOZHW     &&  alus VALID
#REGION 1
DO mod_list
SHOW GETS
*--

*       *********************************************************
*       *                                                         
*       * _2VO0YOZID           bt_avulso VALID                    
*       *                                                         
*       * Function Origin:                                        
*       *                                                         
*       * From Platform:       Windows                            
*       * From Screen:         MODULOS,     Record Number:   24   
*       * Variable:            bt_avulso                          
*       * Called By:           VALID Clause                       
*       * Object Type:         Push Button                        
*       * Snippet Number:      7                                  
*       *                                                         
*       *********************************************************
*
FUNCTION _2VO0YOZID     &&  bt_avulso VALID
#REGION 1
SELECT mod_cab
SEEK list_mod(mods,2)
DO Avulsent.SPR
*--

*       *********************************************************
*       *                                                         
*       * _3RM1C60QS           btTrocaModulo VALID                
*       *                                                         
*       * Function Origin:                                        
*       *                                                         
*       * From Platform:       Windows                            
*       * From Screen:         MODULOS,     Record Number:   25   
*       * Variable:            btTrocaModulo                      
*       * Called By:           VALID Clause                       
*       * Object Type:         Push Button                        
*       * Snippet Number:      8                                  
*       *                                                         
*       *********************************************************
*
FUNCTION _3rm1c60qs     &&  btTrocaModulo VALID
#REGION 1
ACCESS = veracess(wcoduser,28,"ALT")
IF ACCESS
	auxmods = mods
	IF ALEN(list_mod) > 2
		DO CASE
		CASE bttrocamodulo = 1
			IF mods > 1
				FOR mods = auxmods TO 2 STEP -1
					DO trocaabaixo
				NEXT mods
				auxmods = 1
			ENDIF

		CASE bttrocamodulo = 2
			IF mods > 1
				DO trocaabaixo
			ENDIF
			auxmods = auxmods - 1

		CASE bttrocamodulo = 3
			IF mods < ALEN(list_mod)/2
				DO trocaacima
			ENDIF
			auxmods = auxmods + 1

		CASE bttrocamodulo = 4
			IF mods < ALEN(list_mod)/2
				FOR mods = auxmods TO (ALEN(list_mod)/2)-1
					DO trocaacima
				NEXT mods
				auxmods = ALEN(list_mod)/2
			ENDIF

		ENDCASE
	ENDIF
	DO mod_list
	mods = auxmods
	SHOW GETS
ENDIF


PROCEDURE trocaabaixo
	SELECT mod_cab
	SEEK list_mod[Mods,2]
	prireg = RECNO()
	SEEK list_mod[Mods-1,2]
	REPLACE mod_cab.numero WITH mod_cab.numero + 1
	GOTO prireg
	REPLACE mod_cab.numero WITH mod_cab.numero - 1
	RETURN

PROCEDURE trocaacima
	SELECT mod_cab
	SEEK list_mod[Mods,2]
	prireg = RECNO()
	SEEK list_mod[Mods+1,2]
	REPLACE mod_cab.numero WITH mod_cab.numero - 1
	GOTO prireg
	REPLACE mod_cab.numero WITH mod_cab.numero + 1
	RETURN


*       *********************************************************
*       *                                                         
*       * _3RM1C60S0           Read Level When                    
*       *                                                         
*       * Function Origin:                                        
*       *                                                         
*       *                                                         
*       * From Platform:       Windows                            
*       * From Screen:         MODULOS                            
*       * Called By:           READ Statement                     
*       * Snippet Number:      9                                  
*       *                                                         
*       *********************************************************
*
FUNCTION _3rm1c60s0     && Read Level When
*
* When Code from screen: MODULOS
*
#REGION 1
DO mod_list
SHOW GETS


*       *********************************************************
*       *                                                         
*       * _2VO0YOZIG           Read Level Show                    
*       *                                                         
*       * Function Origin:                                        
*       *                                                         
*       *                                                         
*       * From Platform:       Windows                            
*       * From Screen:         MODULOS                            
*       * Called By:           READ Statement                     
*       * Snippet Number:      10                                 
*       *                                                         
*       *********************************************************
*
FUNCTION _2VO0YOZIG     && Read Level Show
PRIVATE currwind
STORE WOUTPUT() TO currwind
*
* Show Code from screen: MODULOS
*
#REGION 1
* PRIVATE currwind
* STORE WOUTPUT() TO currwind
* IF SYS(2016) = "_2VO0YOZGV" .OR. SYS(2016) = "*"
*  ACTIVATE WINDOW SAME _2vo0yozgv
*  @   4.692 ,  17.200  SAY wcurso FONT "MS Sans Serif", 8 STYLE  ;
*   "B" SIZE 1.000 , 47.333 , 0.000  COLOR RGB(,,,192,192,192)
* ENDIF
* IF !EMPTY(currwind)
*  ACTIVATE WINDOW SAME (currwind)
* ENDIF
*--
IF SYS(2016) = "_2VO0YOZGV" OR SYS(2016) = "*"
	ACTIVATE WINDOW _2vo0yozgv SAME
	@ 4.692,17.200 SAY wcurso ;
		SIZE 1.000,47.333, 0.000 ;
		FONT "MS Sans Serif", 8 ;
		STYLE "B" ;
		COLOR RGB(,,,192,192,192)
ENDIF
IF NOT EMPTY(currwind)
	ACTIVATE WINDOW (currwind) SAME
ENDIF