*       *********************************************************
*       *                                                         
*       * 04/03/2013             ALMOX.SPR               09:29:25 
*       *                                                         
*       *********************************************************
*       *                                                         
*       * Author's Name                                           
*       *                                                         
*       * Copyright (c) 2013 Company Name                         
*       * Address                                                 
*       * City,     Zip                                           
*       *                                                         
*       * Description:                                            
*       * This program was automatically generated by GENSCRN.    
*       *                                                         
*       *********************************************************


*       *********************************************************
*       *                                                         
*       *          ALMOX/Windows Setup Code - SECTION 1           
*       *                                                         
*       *********************************************************
*

#REGION 1
*--
*-- REMOVE GENERATED CODE !!!
*--
*--
*-- Generated Code Options
*--
*-- Environment         off
*-- Open Files          off
*-- Close Files         off
*-- Define Windows      ON
*-- Release Windows     ON
*-- READ CYCLE          ON
*-- READ MODAL          off
*-- READ NOLOCK         off
*-- SET READBORDER      ON
*--
*--


#REGION 0
REGIONAL m.currarea, m.talkstat, m.compstat

IF SET("TALK") = "ON"
	SET TALK OFF
	m.talkstat = "ON"
ELSE
	m.talkstat = "OFF"
ENDIF
m.compstat = SET("COMPATIBLE")
SET COMPATIBLE FOXPLUS

m.rborder = SET("READBORDER")
SET READBORDER ON

*       *********************************************************
*       *                                                         
*       *               Windows Window definitions                
*       *                                                         
*       *********************************************************
*

IF NOT WEXIST("_2vo0ypvqr") ;
	OR UPPER(WTITLE("_2VO0YPVQR")) == "_2VO0YPVQR.PJX" ;
	OR UPPER(WTITLE("_2VO0YPVQR")) == "_2VO0YPVQR.SCX" ;
	OR UPPER(WTITLE("_2VO0YPVQR")) == "_2VO0YPVQR.MNX" ;
	OR UPPER(WTITLE("_2VO0YPVQR")) == "_2VO0YPVQR.PRG" ;
	OR UPPER(WTITLE("_2VO0YPVQR")) == "_2VO0YPVQR.FRX" ;
	OR UPPER(WTITLE("_2VO0YPVQR")) == "_2VO0YPVQR.QPR"
	DEFINE WINDOW _2vo0ypvqr ;
		AT  0.000, 0.000  ;
		SIZE 37.462,130.200 ;
		TITLE "Estoque" ;
		FONT "MS Sans Serif", 8 ;
		FLOAT ;
		NOCLOSE ;
		MINIMIZE ;
		SYSTEM ;
		COLOR RGB(,,,192,192,192)
	MOVE WINDOW _2vo0ypvqr CENTER
ENDIF


*       *********************************************************
*       *                                                         
*       *          ALMOX/Windows Setup Code - SECTION 2           
*       *                                                         
*       *********************************************************
*

#REGION 1
* #IF .F. && generated code
* PRIVATE m.currarea, m.talkstat, m.compstat
* IF SET("TALK") = "ON"
*  SET TALK OFF
*  m.talkstat = "ON"
* ELSE
*  m.talkstat = "OFF"
* ENDIF
* m.compstat = SET("COMPATIBLE")
* SET COMPATIBLE OFF
* m.rborder = SET("READBORDER")
* SET READBORDER ON
* IF !WEXIST("_2vo0ypvqr")
*  DEFINE WINDOW _2vo0ypvqr AT   0.000 ,   0.000  SIZE  37.462 ,  ;
*   130.200  FONT "MS Sans Serif", 8 FLOAT NOCLOSE TITLE  ;
*   "Estoque" MINIMIZE SYSTEM COLOR RGB(,,,192,192,192)
*  MOVE WINDOW _2vo0ypvqr CENTER
* ENDIF
STORE 0 TO wa_codigo, wa_quant
STORE "" TO wa_prod, wa_fdesc, wa_motivo
STORE DATE() TO wa_data
STORE 1 TO wa_tipbusc, wa_tipmov
STORE .F. TO isediting, llocal
DIMENSION list_loc[ 1]
SELECT local.nome, local.id FROM Local ORDER BY local.nome INTO  ;
       ARRAY list_loc
locs = 1
tip_ord = 1
DIMENSION list_est[ 1]
ests = 1
* IF WVISIBLE("_2vo0ypvqr")
*  ACTIVATE WINDOW SAME _2vo0ypvqr
* ELSE
*  ACTIVATE WINDOW NOSHOW _2vo0ypvqr
* ENDIF
* #ENDIF  && generated code
*--

*       *********************************************************
*       *                                                         
*       *               ALMOX/Windows Screen Layout               
*       *                                                         
*       *********************************************************
*

#REGION 1
IF WVISIBLE("_2vo0ypvqr")
	ACTIVATE WINDOW _2vo0ypvqr SAME
ELSE
	ACTIVATE WINDOW _2vo0ypvqr NOSHOW
ENDIF
@ 0.385,39.600 SAY "CONTROLE DE ESTOQUE" ;
	FONT "MS Sans Serif", 14 ;
	STYLE "BT"
@ 2.769,0.000 TO 2.769,129.800 ;
	PEN 1, 8 ;
	STYLE "1"
@ 11.154,2.400 SAY "Consulta" ;
	FONT "MS Sans Serif", 8 ;
	STYLE "T"
@ 3.769,2.400 SAY "Produto" ;
	FONT "MS Sans Serif", 8 ;
	STYLE "T" ;
	COLOR RGB(0,0,128,,,,)
@ 7.462,88.800 SAY "Qde" ;
	FONT "MS Sans Serif", 8 ;
	STYLE "T" ;
	COLOR RGB(0,0,128,,,,)
@ 10.154,0.000 TO 10.154,129.800 ;
	PEN 1, 8 ;
	STYLE "1"
@ 7.462,63.600 SAY "Data" ;
	FONT "MS Sans Serif", 8 ;
	STYLE "T" ;
	COLOR RGB(0,0,128,,,,)
@ 34.154,0.000 TO 34.154,129.800 ;
	PEN 1, 8 ;
	STYLE "1"
@ 5.615,2.400 SAY "Tipo" ;
	FONT "MS Sans Serif", 8 ;
	STYLE "T" ;
	COLOR RGB(0,0,128,,,,)
@ 5.615,63.600 SAY "Motivo" ;
	FONT "MS Sans Serif", 8 ;
	STYLE "T" ;
	COLOR RGB(0,0,128,,,,)
@ 3.769,13.600 GET wa_codigo ;
	SIZE 1.000,9.600 ;
	DEFAULT " " ;
	FONT "MS Sans Serif", 8 ;
	PICTURE "@K" ;
	VALID _2VO0YPVRF() ;
	COLOR ,RGB(,,,255,255,255)
@ 3.692,24.000 GET bt_busc ;
	PICTURE "@*HN ..." ;
	SIZE 1.154,3.167,0.667 ;
	DEFAULT 1 ;
	FONT "MS Sans Serif", 8 ;
	STYLE "B" ;
	VALID _2VO0YPVRH()
@ 3.769,30.400 GET wa_prod ;
	SIZE 1.000,96.400 ;
	DEFAULT " " ;
	FONT "MS Sans Serif", 8 ;
	PICTURE "@K" ;
	WHEN isediting ;
	COLOR ,RGB(0,0,0,192,192,192)
@ 5.462,13.200 GET wa_tipmov ;
	PICTURE "@*RHN Entrada;Saída" ;
	SIZE 1.308,12.200,0.000 ;
	DEFAULT 1 ;
	FONT "MS Sans Serif", 8 ;
	STYLE "T"
@ 5.615,72.400 GET wa_motivo ;
	SIZE 1.000,54.400 ;
	DEFAULT " " ;
	FONT "MS Sans Serif", 8 ;
	PICTURE "@K! XXXXXXXXXXXXXXXXXXXX" ;
	COLOR ,RGB(0,0,0,255,255,255)
@ 7.231,13.200 GET locs ;
	PICTURE "@^" ;
	FROM list_loc ;
	SIZE 1.538,48.000 ;
	DEFAULT 1 ;
	FONT "MS Sans Serif", 8 ;
	VALID _2VO0YPVRJ()
@ 7.462,72.400 GET wa_data ;
	SIZE 1.000,13.600 ;
	DEFAULT " " ;
	FONT "MS Sans Serif", 8 ;
	PICTURE "@K" ;
	COLOR ,RGB(0,0,0,255,255,255)
@ 7.462,95.200 GET wa_quant ;
	SIZE 1.000,13.600 ;
	DEFAULT " " ;
	FONT "MS Sans Serif", 8 ;
	PICTURE "@K" ;
	COLOR ,RGB(0,0,0,255,255,255)
@ 7.385,114.000 GET bt_adi ;
	PICTURE "@*HN Adicionar" ;
	SIZE 1.154,13.200,0.800 ;
	DEFAULT 1 ;
	FONT "MS Sans Serif", 8 ;
	VALID _2VO0YPVRL()
@ 11.000,13.200 GET wa_tipbusc ;
	PICTURE "@^ Iniciando por...;Contendo..." ;
	SIZE 1.538,26.600 ;
	DEFAULT "Iniciando por..." ;
	FONT "MS Sans Serif", 8 ;
	VALID _2VO0YPVRM()
@ 11.154,43.800 GET wa_fdesc ;
	SIZE 1.000,83.000 ;
	DEFAULT " " ;
	FONT "MS Sans Serif", 8 ;
	PICTURE "@K!" ;
	VALID _2VO0YPVRN() ;
	COLOR ,RGB(,,,255,255,255)
@ 13.923,2.600 GET Ests ;
 	PICTURE "@&N" ;
	FROM List_est ;
	SIZE 17.143,89.000 ;
	DEFAULT 1 ;
	FONT "Courier New", 8 ;
	VALID _2VO0YPVRP() ;
	COLOR RGB(,,,255,255,255),RGB(,,,255,255,255)
@ 35.077,51.200 GET bt_almox ;
	PICTURE "@*HT Sair" ;
	SIZE 1.769,23.167,0.667 ;
	DEFAULT 1 ;
	FONT "MS Sans Serif", 8 ;
	STYLE "B"
@ 7.308,2.400 GET llocal ;
	PICTURE "@*C Local" ;
	SIZE 1.308,10.000 ;
	DEFAULT 0 ;
	FONT "MS Sans Serif", 8 ;
	STYLE "T" ;
	VALID _2VO0YPVRQ() ;
	COLOR ,,,,,,,,RGB(0,0,128,,,,),RGB(0,0,128,,,,)

IF NOT WVISIBLE("_2vo0ypvqr")
	ACTIVATE WINDOW _2vo0ypvqr
ENDIF

READ CYCLE MODAL ;
	WHEN _2VO0YPVRS()

RELEASE WINDOW _2vo0ypvqr

#REGION 0

SET READBORDER &rborder

IF m.talkstat = "ON"
	SET TALK ON
ENDIF
IF m.compstat = "ON"
	SET COMPATIBLE ON
ENDIF


*       *********************************************************
*       *                                                         
*       *               ALMOX/Windows Cleanup Code                
*       *                                                         
*       *********************************************************
*

#REGION 1
* #IF .F. && generated code
* RELEASE WINDOW _2vo0ypvqr
* SET READBORDER &rborder
* IF m.talkstat = "ON"
*  SET TALK ON
* ENDIF
* IF m.compstat = "ON"
*  SET COMPATIBLE ON
* ENDIF
* #ENDIF  && generated code
*--

*--


*       *********************************************************
*       *                                                         
*       *   ALMOX/Windows Supporting Procedures and Functions     
*       *                                                         
*       *********************************************************
*

#REGION 1
PROCEDURE ad_estoque
IF wa_codigo > 0 .AND. wa_quant > 0
 conf = winconf("ATENÇÃO", ;
        "Tem certeza que deseja movimentar o estoque?")
 IF conf
  ult_id = 0
  SELECT mov_prod
  GOTO BOTTOM
  ult_id = mov_prod.id
  APPEND BLANK
  REPLACE mov_prod.id WITH ult_id + 1
  REPLACE mov_prod.local_id WITH list_loc(locs,2)
  REPLACE mov_prod.produto_id WITH wa_codigo
  REPLACE mov_prod.tipo_mov WITH wa_tipmov
  REPLACE mov_prod.motivo WITH wa_motivo
  REPLACE mov_prod.data WITH wa_data
  REPLACE mov_prod.quant WITH wa_quant
  ult_id = 0
  SELECT est_loca
  SEEK STR(list_loc(locs,2), 10) + STR(wa_codigo, 10)
  IF !FOUND()
   SELECT estoque
   GOTO BOTTOM
   ult_id = estoque.id
   APPEND BLANK
   REPLACE estoque.id WITH ult_id + 1
   REPLACE estoque.local_id WITH list_loc(locs,2)
   REPLACE estoque.produto_id WITH wa_codigo
  ELSE
   SELECT estoque
   SEEK est_loca.id
  ENDIF
  SELECT estoque
  IF wa_tipmov = 1
   REPLACE estoque.quant WITH estoque.quant + wa_quant
  ELSE
   REPLACE estoque.quant WITH estoque.quant - wa_quant
  ENDIF
  SELECT est_loca
  USE
  USE &DIRCONT\Estoque AGAIN ORDER TAG Local_id ALIAS Est_loca
  DO est_list
 ENDIF
ELSE
 DO winalert WITH "ATENÇÃO",  ;
    "Selecione o produto e digite a quantidade!"
ENDIF
RETURN
*--

*--
PROCEDURE est_list
auxfilt = ""
IF llocal
 auxfilt = auxfilt + "AND Estoque.Local_id == List_loc[Locs,2] "
ENDIF
IF !ISBLANK(wa_fdesc)
 IF wa_tipbusc = 1
  auxfilt = auxfilt + "AND Produtos.Descricao = ALLT(Wa_fdesc) "
 ELSE
  auxfilt = auxfilt + "AND ALLT(Wa_fdesc) $ Produtos.Descricao "
 ENDIF
ENDIF
DIMENSION list_est[ 1]
list_est[ 1] = "Este LOCAL esta vazio..."
SELECT Produtos.Descricao + ' ' +  STR(Estoque.Quant,8) + ' ' +;
 Local.Nome,  Estoque.Id  FROM Estoque, Produtos, Local  WHERE Estoque.Produto_id;
== Produtos.Id  AND Estoque.Local_id == Local.Id  &Auxfilt;
 ORDER BY Produtos.Descricao  INTO ARRAY List_est
RETURN
*--


*       *********************************************************
*       *                                                         
*       * _2VO0YPVRF           wa_codigo VALID                    
*       *                                                         
*       * Function Origin:                                        
*       *                                                         
*       * From Platform:       Windows                            
*       * From Screen:         ALMOX,     Record Number:   12     
*       * Variable:            wa_codigo                          
*       * Called By:           VALID Clause                       
*       * Object Type:         Field                              
*       * Snippet Number:      1                                  
*       *                                                         
*       *********************************************************
*
FUNCTION _2VO0YPVRF     &&  wa_codigo VALID
#REGION 1
IF wa_codigo > 0
 SELECT produtos
 SEEK wa_codigo
 IF FOUND()
  wa_prod = ALLTRIM(produtos.descricao)
 ELSE
  STORE "" TO wa_prod
  STORE 0 TO wa_codigo
  _CUROBJ = OBJNUM(wa_codigo)
 ENDIF
ELSE
 STORE "" TO wa_prod
ENDIF
SHOW GETS
*--

*       *********************************************************
*       *                                                         
*       * _2VO0YPVRH           bt_busc VALID                      
*       *                                                         
*       * Function Origin:                                        
*       *                                                         
*       * From Platform:       Windows                            
*       * From Screen:         ALMOX,     Record Number:   13     
*       * Variable:            bt_busc                            
*       * Called By:           VALID Clause                       
*       * Object Type:         Push Button                        
*       * Snippet Number:      2                                  
*       *                                                         
*       *********************************************************
*
FUNCTION _2VO0YPVRH     &&  bt_busc VALID
#REGION 1
prd_dentro = .T.
DO Cad_prod.SPR
IF item_sel
 wa_prod = ALLTRIM(produtos.descricao)
 wa_codigo = produtos.id
ELSE
 STORE "" TO wa_prod
 STORE 0 TO wa_codigo
ENDIF
SHOW GETS
*--

*       *********************************************************
*       *                                                         
*       * _2VO0YPVRJ           locs VALID                         
*       *                                                         
*       * Function Origin:                                        
*       *                                                         
*       * From Platform:       Windows                            
*       * From Screen:         ALMOX,     Record Number:   17     
*       * Variable:            locs                               
*       * Called By:           VALID Clause                       
*       * Object Type:         Popup                              
*       * Snippet Number:      3                                  
*       *                                                         
*       *********************************************************
*
FUNCTION _2VO0YPVRJ     &&  locs VALID
#REGION 1
DO est_list
SHOW GETS
*--

*       *********************************************************
*       *                                                         
*       * _2VO0YPVRL           bt_adi VALID                       
*       *                                                         
*       * Function Origin:                                        
*       *                                                         
*       * From Platform:       Windows                            
*       * From Screen:         ALMOX,     Record Number:   20     
*       * Variable:            bt_adi                             
*       * Called By:           VALID Clause                       
*       * Object Type:         Push Button                        
*       * Snippet Number:      4                                  
*       *                                                         
*       *********************************************************
*
FUNCTION _2VO0YPVRL     &&  bt_adi VALID
#REGION 1
DO ad_estoque
SHOW GETS
*--

*       *********************************************************
*       *                                                         
*       * _2VO0YPVRM           wa_tipbusc VALID                   
*       *                                                         
*       * Function Origin:                                        
*       *                                                         
*       * From Platform:       Windows                            
*       * From Screen:         ALMOX,     Record Number:   21     
*       * Variable:            wa_tipbusc                         
*       * Called By:           VALID Clause                       
*       * Object Type:         Popup                              
*       * Snippet Number:      5                                  
*       *                                                         
*       *********************************************************
*
FUNCTION _2VO0YPVRM     &&  wa_tipbusc VALID
#REGION 1
DO est_list
SHOW GETS
*--

*       *********************************************************
*       *                                                         
*       * _2VO0YPVRN           wa_fdesc VALID                     
*       *                                                         
*       * Function Origin:                                        
*       *                                                         
*       * From Platform:       Windows                            
*       * From Screen:         ALMOX,     Record Number:   22     
*       * Variable:            wa_fdesc                           
*       * Called By:           VALID Clause                       
*       * Object Type:         Field                              
*       * Snippet Number:      6                                  
*       *                                                         
*       *********************************************************
*
FUNCTION _2VO0YPVRN     &&  wa_fdesc VALID
#REGION 1
DO est_list
SHOW GETS
*--

*       *********************************************************
*       *                                                         
*       * _2VO0YPVRP           Ests VALID                         
*       *                                                         
*       * Function Origin:                                        
*       *                                                         
*       * From Platform:       Windows                            
*       * From Screen:         ALMOX,     Record Number:   23     
*       * Variable:            Ests                               
*       * Called By:           VALID Clause                       
*       * Object Type:         List                               
*       * Snippet Number:      7                                  
*       *                                                         
*       *********************************************************
*
FUNCTION _2VO0YPVRP     &&  Ests VALID
#REGION 1
SELECT estoque
SEEK list_est(ests,2)
DO Mov_prod.SPR
*--

*       *********************************************************
*       *                                                         
*       * _2VO0YPVRQ           llocal VALID                       
*       *                                                         
*       * Function Origin:                                        
*       *                                                         
*       * From Platform:       Windows                            
*       * From Screen:         ALMOX,     Record Number:   25     
*       * Variable:            llocal                             
*       * Called By:           VALID Clause                       
*       * Object Type:         Check Box                          
*       * Snippet Number:      8                                  
*       *                                                         
*       *********************************************************
*
FUNCTION _2VO0YPVRQ     &&  llocal VALID
#REGION 1
DO est_list
SHOW GETS
*--

*       *********************************************************
*       *                                                         
*       * _2VO0YPVRS           Read Level When                    
*       *                                                         
*       * Function Origin:                                        
*       *                                                         
*       *                                                         
*       * From Platform:       Windows                            
*       * From Screen:         ALMOX                              
*       * Called By:           READ Statement                     
*       * Snippet Number:      9                                  
*       *                                                         
*       *********************************************************
*
FUNCTION _2VO0YPVRS     && Read Level When
*
* When Code from screen: ALMOX
*
#REGION 1
DO est_list
SHOW GETS
*--