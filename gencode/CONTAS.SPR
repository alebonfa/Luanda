*       *********************************************************
*       *                                                         
*       * 22/05/2013            CONTAS.SPR               11:41:14 
*       *                                                         
*       *********************************************************
*       *                                                         
*       * Author's Name                                           
*       *                                                         
*       * Copyright (c) 2013 Company Name                         
*       * Address                                                 
*       * City,     Zip                                           
*       *                                                         
*       * Description:                                            
*       * This program was automatically generated by GENSCRN.    
*       *                                                         
*       *********************************************************


*       *********************************************************
*       *                                                         
*       *          CONTAS/Windows Setup Code - SECTION 1          
*       *                                                         
*       *********************************************************
*

#REGION 1
*--
*-- REMOVE GENERATED CODE !!!
*--
*--
*-- Generated Code Options
*--
*-- Environment         off
*-- Open Files          off
*-- Close Files         off
*-- Define Windows      ON
*-- Release Windows     ON
*-- READ CYCLE          ON
*-- READ MODAL          ON
*-- READ NOLOCK         off
*-- SET READBORDER      ON
*--
*--


#REGION 0
REGIONAL m.currarea, m.talkstat, m.compstat

IF SET("TALK") = "ON"
	SET TALK OFF
	m.talkstat = "ON"
ELSE
	m.talkstat = "OFF"
ENDIF
m.compstat = SET("COMPATIBLE")
SET COMPATIBLE FOXPLUS

m.rborder = SET("READBORDER")
SET READBORDER ON

*       *********************************************************
*       *                                                         
*       *               Windows Window definitions                
*       *                                                         
*       *********************************************************
*

IF NOT WEXIST("_2vo0yohum") ;
	OR UPPER(WTITLE("_2VO0YOHUM")) == "_2VO0YOHUM.PJX" ;
	OR UPPER(WTITLE("_2VO0YOHUM")) == "_2VO0YOHUM.SCX" ;
	OR UPPER(WTITLE("_2VO0YOHUM")) == "_2VO0YOHUM.MNX" ;
	OR UPPER(WTITLE("_2VO0YOHUM")) == "_2VO0YOHUM.PRG" ;
	OR UPPER(WTITLE("_2VO0YOHUM")) == "_2VO0YOHUM.FRX" ;
	OR UPPER(WTITLE("_2VO0YOHUM")) == "_2VO0YOHUM.QPR"
	DEFINE WINDOW _2vo0yohum ;
		AT  0.000, 0.000  ;
		SIZE 51.538,198.000 ;
		TITLE "Avaliação" ;
		FONT "MS Sans Serif", 8 ;
		FLOAT ;
		NOCLOSE ;
		NOMINIMIZE ;
		SYSTEM ;
		COLOR RGB(,,,255,255,255)
	MOVE WINDOW _2vo0yohum CENTER
ENDIF


*       *********************************************************
*       *                                                         
*       *          CONTAS/Windows Setup Code - SECTION 2          
*       *                                                         
*       *********************************************************
*

#REGION 1
* #IF .F. && generated code
* PRIVATE m.currarea, m.talkstat, m.compstat
* IF SET("TALK") = "ON"
*  SET TALK OFF
*  m.talkstat = "ON"
* ELSE
*  m.talkstat = "OFF"
* ENDIF
* m.compstat = SET("COMPATIBLE")
* SET COMPATIBLE OFF
* m.rborder = SET("READBORDER")
* SET READBORDER ON
* IF !WEXIST("_2vo0yohum") .OR. UPPER(WTITLE("_2VO0YOHUM")) ==  ;
*  "_2VO0YOHUM.PJX" .OR. UPPER(WTITLE("_2VO0YOHUM")) ==  ;
*  "_2VO0YOHUM.SCX" .OR. UPPER(WTITLE("_2VO0YOHUM")) ==  ;
*  "_2VO0YOHUM.MNX" .OR. UPPER(WTITLE("_2VO0YOHUM")) ==  ;
*  "_2VO0YOHUM.PRG" .OR. UPPER(WTITLE("_2VO0YOHUM")) ==  ;
*  "_2VO0YOHUM.FRX" .OR. UPPER(WTITLE("_2VO0YOHUM")) ==  ;
*  "_2VO0YOHUM.QPR"
*  DEFINE WINDOW _2vo0yohum AT   0.000 ,   0.000  SIZE  51.538 ,  ;
*   198.000  FONT "MS Sans Serif", 8 FLOAT NOCLOSE TITLE  ;
*   "Avaliação" NOMINIMIZE SYSTEM COLOR RGB(,,,255,255,255)
*  MOVE WINDOW _2vo0yohum CENTER
* ENDIF
ON KEY LABEL f4 DO quitall
ON KEY LABEL f5 DO altall
wnparc = 1
n_clientes = 0
DIMENSION lst_area[ 1]
SELECT descricao + "(" + codigo + ")", codigo FROM area ORDER BY  ;
       descricao INTO ARRAY lst_area
DIMENSION lst_suba[ 1]
SELECT sigla, codigo FROM subarea ORDER BY sigla INTO ARRAY  ;
       lst_suba
c = 0
wloja = 0
wdatanf = {}
wdatemiss = DATE()
wdatalanc = DATE()
wvalor = 0.00
wnota = ""
wnotaf = ""
wcurso = ""
wobs = ""
wcontab = .F.
areas = 1
wtipo = 1
wsit = SPACE(10)
di = {}
df = {}
DIMENSION list_cont[ 1]
DIMENSION list_rec[ 1]
DIMENSION rec_ccu[ 1]
totabe = 0.00
totliq = 0.00
DIMENSION list_for[ 1]
fors = 1
DIMENSION list_tip[ 1]
tips = 1
DIMENSION list_ban[ 1]
bans = 1
DIMENSION list_ccu[ 1]
ccus = 2
vencs = 1
venc1 = 0
venc2 = 0
venc3 = 0
venc4 = 0
venc5 = 0
venc6 = 0
venc7 = 0
venc8 = 0
venc9 = 0
venc10 = 0
inclui = .T.
exc = .F.
aux_npar = 0
perm_pag = .T.
auxfilt = ''
auxord = ''
tipo_dat = 1
wc_ccu = ""
wc_area = ""
wc_suba = ""
wc_form = 0
wc_ban = ""
wemprest = .F.
wcopia = .F.
ws_cop = ""
ws_comp = ""
filtlanc = .F.
llancquit = .F.
lfunc = .F.
lrateio = .F.
filt_area = .F.
filt_suba = .F.
filt_cede = .F.
filt_plan = .F.
filt_valo = .F.
filt_nota = .F.
filt_banc = .F.
filt_form = .F.
filt_cart = .F.
filt_mod = .F.
filt_tipo = .F.
filt_obs = .F.
lcontab = .F.
lvisual = .F.
cvisual = "PROMPT NOCONSOLE"
wmodulo = 0
tip_nome = 1
DIMENSION list_cart[ 1]
carts = 1
wtipo_ced = 1
DIMENSION list_emp[ 1]
SELECT nome, id FROM empresas ORDER BY empresas.nome INTO ARRAY  ;
       list_emp
emps = 1
lempr = .F.
DIMENSION reg_emp[ 1]
SELECT id FROM empresas ORDER BY empresas.nome INTO ARRAY  ;
       reg_emp



*       *********************************************************
*       *                                                         
*       *              CONTAS/Windows Screen Layout               
*       *                                                         
*       *********************************************************
*

#REGION 1
IF WVISIBLE("_2vo0yohum")
	ACTIVATE WINDOW _2vo0yohum SAME
ELSE
	ACTIVATE WINDOW _2vo0yohum NOSHOW
ENDIF
@ 45.923,152.600 SAY "TOTAL" ;
	FONT "Arial", 8 ;
	STYLE "T" ;
	COLOR RGB(128,128,128,,,,)
@ 8.846,140.400 SAY "Vencimento" ;
	FONT "Arial", 8 ;
	STYLE "T" ;
	COLOR RGB(128,128,128,,,,)
@ 24.385,4.800 SAY "Situação" ;
	FONT "Arial", 8 ;
	STYLE "T" ;
	COLOR RGB(128,128,128,,,,)
@ 24.385,40.000 SAY "Nome" ;
	FONT "Arial", 8 ;
	STYLE "T" ;
	COLOR RGB(128,128,128,,,,)
@ 48.000,0.000 TO 48.000,197.600 ;
	PEN 1, 8 ;
	STYLE "1" ;
	COLOR RGB(0,128,128,0,128,128)
@ 6.385,140.400 SAY "Lancamento" ;
	FONT "Arial", 8 ;
	STYLE "T" ;
	COLOR RGB(128,128,128,,,,)
@ 4.385,4.800 SAY "Lançamentos" ;
	FONT "Arial", 8 ;
	STYLE "B" ;
	COLOR RGB(128,128,128,,,,)
@ 24.385,118.800 SAY "Período" ;
	FONT "Arial", 8 ;
	STYLE "T" ;
	COLOR RGB(128,128,128,,,,)
@ 22.538,4.800 SAY "Filtros" ;
	FONT "Arial", 8 ;
	STYLE "B" ;
	COLOR RGB(128,128,128,,,,)
@ 26.077,128.800 SAY "Inicial" ;
	FONT "Arial", 8 ;
	STYLE "T" ;
	COLOR RGB(0,0,0,,,,)
@ 26.077,152.800 SAY "Final" ;
	FONT "Arial", 8 ;
	STYLE "T" ;
	COLOR RGB(0,0,0,,,,)
@ 21.231,0.000 TO 21.231,197.800 ;
	PEN 1, 8 ;
	STYLE "1" ;
	COLOR RGB(0,128,128,0,128,128)
@ 0.000,0.000 TO 3.769,198.000 ;
	PATTERN 1 ;
	PEN 1, 8 ;
	COLOR RGB(0,128,128,0,128,128)
@ 1.077,160.800 SAY "CONTAS A PAGAR" ;
	FONT "Arial", 14 ;
	STYLE "T" ;
	COLOR RGB(255,255,255,,,,)
@ 6.385,171.200 SAY "Emissão" ;
	FONT "Arial", 8 ;
	STYLE "T" ;
	COLOR RGB(128,128,128,,,,)
@ 6.154,18.000 GET fors ;
	PICTURE "@^" ;
	FROM list_for ;
	SIZE 1.500,29.000 ;
	DEFAULT 1 ;
	FONT "Arial", 8 ;
	VALID _2VO0YOHV1() ;
	COLOR ,,,,,,,,RGB(0,0,0,,,,),RGB(0,0,0,,,,)
@ 8.615,18.000 GET bans ;
	PICTURE "@^" ;
	FROM list_ban ;
	SIZE 1.500,29.000 ;
	DEFAULT 1 ;
	FONT "Arial", 8 ;
	COLOR ,,,,,,,,RGB(0,0,0,,,,),RGB(0,0,0,,,,)
@ 11.077,18.000 GET carts ;
	PICTURE "@^" ;
	FROM list_cart ;
	SIZE 1.500,29.000 ;
	DEFAULT 1 ;
	FONT "Arial", 8 ;
	COLOR ,,,,,,,,RGB(0,0,0,,,,),RGB(0,0,0,,,,)
@ 13.538,18.000 GET tips ;
	PICTURE "@^" ;
	FROM list_tip ;
	SIZE 1.500,29.000 ;
	DEFAULT 1 ;
	FONT "Arial", 8 ;
	COLOR ,,,,,,,,RGB(0,0,0,,,,),RGB(0,0,0,,,,)
@ 6.385,68.800 GET wnota ;
	SIZE 1.000,17.200 ;
	DEFAULT " " ;
	FONT "Arial", 8 ;
	PICTURE "@K!T XXXXXXXX" ;
	COLOR ,RGB(0,0,0,255,255,255)
@ 6.385,89.200 GET wnotaf ;
	SIZE 1.000,17.200 ;
	DEFAULT " " ;
	FONT "Arial", 8 ;
	PICTURE "@K!T XXXXXXXX" ;
	COLOR ,RGB(0,0,0,255,255,255)
@ 8.615,68.400 GET areas ;
	PICTURE "@^" ;
	FROM lst_area ;
	SIZE 1.500,62.200 ;
	DEFAULT 1 ;
	FONT "Arial", 8 ;
	COLOR ,,,,,,,,RGB(0,0,0,,,,),RGB(0,0,0,,,,)
@ 11.077,68.400 GET subas ;
	PICTURE "@^" ;
	FROM lst_suba ;
	SIZE 1.500,62.200 ;
	DEFAULT 1 ;
	FONT "Arial", 8 ;
	COLOR ,,,,,,,,RGB(0,0,0,,,,),RGB(0,0,0,,,,)
@ 13.538,68.400 GET ccus ;
	PICTURE "@^" ;
	FROM list_ccu ;
	SIZE 1.500,62.200 ;
	DEFAULT 1 ;
	FONT "Arial", 8 ;
	VALID _2VO0YOHV4() ;
	COLOR ,,,,,,,,RGB(0,0,0,,,,),RGB(0,0,0,,,,)
@ 6.385,154.000 GET wdatemiss ;
	SIZE 1.000,12.800 ;
	DEFAULT {  /  /  } ;
	FONT "Arial", 8 ;
	COLOR ,RGB(0,0,0,255,255,255)
@ 6.385,181.200 GET wdatanf ;
	SIZE 1.000,12.800 ;
	DEFAULT {  /  /  } ;
	FONT "Arial", 8 ;
	COLOR ,RGB(0,0,0,255,255,255)
@ 8.846,154.000 GET wdatalanc ;
	SIZE 1.000,19.600 ;
	DEFAULT {  /  /  } ;
	FONT "Arial", 8 ;
	COLOR ,RGB(0,0,0,255,255,255)
@ 11.308,154.000 GET wnparc ;
	SIZE 1.000,3.600 ;
	DEFAULT 0 ;
	FONT "Arial", 8 ;
	PICTURE "@K 999" ;
	VALID _2VO0YOHV6() ;
	COLOR ,RGB(0,0,0,255,255,255)
@ 11.308,160.000 GET wvalor ;
	SIZE 1.000,13.400 ;
	DEFAULT 0 ;
	FONT "Arial", 8 ;
	PICTURE "@K 99,999,999.99" ;
	COLOR ,RGB(0,0,0,255,255,255)
@ 13.615,154.000 GET wmodulo ;
	SIZE 1.000,7.400 ;
	DEFAULT 0 ;
	FONT "Arial", 8 ;
	PICTURE "@K 99" ;
	VALID _2VO0YOHV7() ;
	COLOR ,RGB(0,0,0,255,255,255)
@ 16.308,18.400 GET wobs ;
	SIZE 1.000,111.600 ;
	DEFAULT {  /  /  } ;
	FONT "Arial", 8 ;
	PICTURE "@K" ;
	COLOR ,RGB(0,0,0,255,255,255)
@ 15.923,153.600 GET wtipo ;
	PICTURE "@^ Normal;Previsão;Pendente" ;
	SIZE 1.500,20.600 ;
	DEFAULT "Normal" ;
	FONT "Arial", 8 ;
	COLOR ,,,,,,,,RGB(0,0,0,,,,),RGB(0,0,0,,,,)
@ 18.462,180.800 GET adi ;
	PICTURE "@*HN Adiciona" ;
	SIZE 1.143,12.200,0.800 ;
	DEFAULT 1 ;
	FONT "Arial", 8 ;
	VALID _2VO0YOHV9() ;
	COLOR ,,,,,,,,RGB(128,128,128,,,,)
@ 6.231,4.800 GET filt_cede ;
	PICTURE "@*C Nome" ;
	SIZE 1.214,10.000 ;
	DEFAULT 0 ;
	FONT "Arial", 8 ;
	STYLE "T" ;
	COLOR ,,,,,,,,RGB(128,128,128,,,,),RGB(128,128,128,,,,)
@ 8.692,4.800 GET filt_banc ;
	PICTURE "@*C Banco" ;
	SIZE 1.214,10.800 ;
	DEFAULT 0 ;
	FONT "Arial", 8 ;
	STYLE "T" ;
	COLOR ,,,,,,,,RGB(128,128,128,,,,),RGB(128,128,128,,,,)
@ 11.154,4.800 GET filt_cart ;
	PICTURE "@*C Cartão" ;
	SIZE 1.214,11.000 ;
	DEFAULT 0 ;
	FONT "Arial", 8 ;
	STYLE "T" ;
	COLOR ,,,,,,,,RGB(128,128,128,,,,),RGB(128,128,128,,,,)
@ 13.615,4.800 GET filt_form ;
	PICTURE "@*C Forma" ;
	SIZE 1.214,10.600 ;
	DEFAULT 0 ;
	FONT "Arial", 8 ;
	STYLE "T" ;
	COLOR ,,,,,,,,RGB(128,128,128,,,,),RGB(128,128,128,,,,)
@ 8.692,56.400 GET filt_area ;
	PICTURE "@*C Área" ;
	SIZE 1.214,9.400 ;
	DEFAULT 0 ;
	FONT "Arial", 8 ;
	STYLE "T" ;
	VALID _2VO0YOHVC() ;
	COLOR ,,,,,,,,RGB(128,128,128,,,,),RGB(128,128,128,,,,)
@ 11.154,56.400 GET filt_suba ;
	PICTURE "@*C Curso" ;
	SIZE 1.214,10.400 ;
	DEFAULT 0 ;
	FONT "Arial", 8 ;
	STYLE "T" ;
	VALID _2VO0YOHVE() ;
	COLOR ,,,,,,,,RGB(128,128,128,,,,),RGB(128,128,128,,,,)
@ 13.615,140.400 GET filt_mod ;
	PICTURE "@*C Módulo" ;
	SIZE 1.214,11.400 ;
	DEFAULT 0 ;
	FONT "Arial", 8 ;
	STYLE "T" ;
	VALID _2VO0YOHVG() ;
	COLOR ,,,,,,,,RGB(128,128,128,,,,),RGB(128,128,128,,,,)
@ 6.231,56.400 GET filt_nota ;
	PICTURE "@*C Nota" ;
	SIZE 1.214,9.000 ;
	DEFAULT 0 ;
	FONT "Arial", 8 ;
	STYLE "T" ;
	COLOR ,,,,,,,,RGB(128,128,128,,,,),RGB(128,128,128,,,,)
@ 13.615,56.400 GET filt_plan ;
	PICTURE "@*C Plano" ;
	SIZE 1.214,9.800 ;
	DEFAULT 0 ;
	FONT "Arial", 8 ;
	STYLE "T" ;
	COLOR ,,,,,,,,RGB(128,128,128,,,,),RGB(128,128,128,,,,)
@ 11.154,140.400 GET filt_valo ;
	PICTURE "@*C Valor" ;
	SIZE 1.214,9.800 ;
	DEFAULT 0 ;
	FONT "Arial", 8 ;
	STYLE "T" ;
	COLOR ,,,,,,,,RGB(128,128,128,,,,),RGB(128,128,128,,,,)
@ 16.154,140.400 GET filt_tipo ;
	PICTURE "@*C Tipo" ;
	SIZE 1.214,8.600 ;
	DEFAULT 0 ;
	FONT "Arial", 8 ;
	STYLE "T" ;
	COLOR ,,,,,,,,RGB(128,128,128,,,,),RGB(128,128,128,,,,)
@ 25.846,4.800 GET wsit ;
	PICTURE "@^ Geral;Abertas;Liquidadas;Vencidas" ;
	SIZE 1.500,29.000 ;
	DEFAULT "Geral" ;
	FONT "Arial", 8 ;
	COLOR ,,,,,,,,RGB(0,0,0,,,,),RGB(0,0,0,,,,)
@ 25.846,40.000 GET tip_nome ;
	PICTURE "@^ Iniciando por...;Contendo..." ;
	SIZE 1.500,20.200 ;
	DEFAULT "Iniciando por..." ;
	FONT "Arial", 8 ;
	COLOR ,,,,,,,,RGB(0,0,0,,,,),RGB(0,0,0,,,,)
@ 26.077,62.000 GET wc_nfor ;
	SIZE 1.000,33.600 ;
	DEFAULT " " ;
	FONT "Arial", 8 ;
	PICTURE "@K!T" ;
	COLOR ,RGB(0,0,0,255,255,255)
@ 24.385,129.200 GET tipo_dat ;
	PICTURE "@*RHN Vencimento;Pagamento;Lancamento;Emissão" ;
	SIZE 1.214,16.400,0.400 ;
	DEFAULT 1 ;
	FONT "Arial", 8 ;
	STYLE "T" ;
	COLOR ,,,,,,,,RGB(0,0,0,,,,),RGB(0,0,0,,,,)
@ 26.077,136.400 GET di ;
	SIZE 1.000,13.600 ;
	DEFAULT {  /  /  } ;
	FONT "Arial", 8 ;
	VALID _2VO0YOHVJ() ;
	COLOR ,RGB(0,0,0,255,255,255)
@ 26.077,159.200 GET df ;
	SIZE 1.000,13.600 ;
	DEFAULT {  /  /  } ;
	FONT "Arial", 8 ;
	COLOR ,RGB(0,0,0,255,255,255)
@ 26.000,180.800 GET fil ;
	PICTURE "@*HN Filtra" ;
	SIZE 1.143,12.200,0.800 ;
	DEFAULT 1 ;
	FONT "Arial", 8 ;
	VALID _2VO0YOHVK() ;
	COLOR ,,,,,,,,RGB(128,128,128,,,,)
@ 28.154,5.000 GET list ;
 	PICTURE "@&N" ;
	FROM List_cont ;
	SIZE 14.857,134.143 ;
	DEFAULT 1 ;
	FONT "Courier New", 8 ;
	VALID _2VO0YOHVM() ;
	COLOR RGB(0,128,128,255,255,255),RGB(0,128,128,255,255,255)
@ 48.923,4.800 GET menu1 ;
	PICTURE "@*HN Listagem;Cópia de Cheque;Rel. Centro Custo;Fornecedores;Exporta Contab;Sair >>" ;
	SIZE 1.500,31.400,0.000 ;
	DEFAULT 1 ;
	FONT "Arial", 8 ;
	VALID _2VO0YOHVN() ;
	COLOR ,,,,,,,,RGB(128,128,128,,,,)
@ 45.615,23.200 GET llancquit ;
	PICTURE "@*C Lançar Quitando" ;
	SIZE 1.214,20.600 ;
	DEFAULT 0 ;
	FONT "Arial", 8 ;
	STYLE "T" ;
	COLOR ,,,,,,,,RGB(128,128,128,,,,),RGB(128,128,128,,,,)
@ 45.615,46.400 GET lrateio ;
	PICTURE "@*C Rateio de Planos de Conta" ;
	SIZE 1.214,29.800 ;
	DEFAULT 0 ;
	FONT "Arial", 8 ;
	STYLE "T" ;
	COLOR ,,,,,,,,RGB(128,128,128,,,,),RGB(128,128,128,,,,)
@ 45.615,4.800 GET lvisual ;
	PICTURE "@*C Visualiza" ;
	SIZE 1.214,13.400 ;
	DEFAULT 0 ;
	FONT "Arial", 8 ;
	STYLE "T" ;
	VALID _2VO0YOHVQ() ;
	COLOR ,,,,,,,,RGB(128,128,128,,,,),RGB(128,128,128,,,,)
@ 45.923,163.600 SAY totabe ;
	SIZE 1.000,25.600 ;
	FONT "Arial", 8 ;
	PICTURE "999,999,999,999.99" ;
	COLOR RGB(255,255,255,0,128,128)
@ 6.154,46.800 GET bt_ced ;
	PICTURE "@*HN FO" ;
	SIZE 1.500,4.600,0.800 ;
	DEFAULT 1 ;
	FONT "Arial", 8 ;
	VALID _2VO0YOHVU() ;
	COLOR ,,,,,,,,RGB(128,128,128,,,,)
@ 16.077,4.800 GET filt_obs ;
	PICTURE "@*C Obs" ;
	SIZE 1.214,8.600 ;
	DEFAULT 0 ;
	FONT "Arial", 8 ;
	STYLE "T" ;
	COLOR ,,,,,,,,RGB(128,128,128,,,,),RGB(128,128,128,,,,)
@ 18.538,140.400 GET wcontab ;
	PICTURE "@*C Contabilidade" ;
	SIZE 1.214,17.400 ;
	DEFAULT 0 ;
	FONT "Arial", 8 ;
	STYLE "T" ;
	COLOR ,,,,,,,,RGB(0,0,0,,,,),RGB(0,0,0,,,,)
@ 18.462,18.000 GET emps ;
	PICTURE "@^" ;
	FROM list_emp ;
	SIZE 1.500,112.600 ;
	DEFAULT 1 ;
	FONT "Arial", 8 ;
	COLOR ,,,,,,,,RGB(0,0,0,,,,),RGB(0,0,0,,,,)
@ 18.538,4.800 GET lempr ;
	PICTURE "@*C Empresa" ;
	SIZE 1.214,13.000 ;
	DEFAULT 0 ;
	FONT "Arial", 8 ;
	STYLE "T" ;
	COLOR ,,,,,,,,RGB(128,128,128,,,,),RGB(128,128,128,,,,)
@ 25.923,100.800 GET lcontab ;
	PICTURE "@*C Contábeis" ;
	SIZE 1.214,14.200 ;
	DEFAULT 0 ;
	FONT "Arial", 8 ;
	STYLE "T" ;
	COLOR ,,,,,,,,RGB(0,0,0,,,,),RGB(0,0,0,,,,)

IF NOT WVISIBLE("_2vo0yohum")
	ACTIVATE WINDOW _2vo0yohum
ENDIF

READ CYCLE MODAL ;
	WHEN _2VO0YOHVW() ;
	SHOW _2VO0YOHVX()

RELEASE WINDOW _2vo0yohum

#REGION 0

SET READBORDER &rborder

IF m.talkstat = "ON"
	SET TALK ON
ENDIF
IF m.compstat = "ON"
	SET COMPATIBLE ON
ENDIF



*       *********************************************************
*       *                                                         
*       *   CONTAS/Windows Supporting Procedures and Functions    
*       *                                                         
*       *********************************************************
*

#REGION 1
PROCEDURE atua_situa
	SELECT contas
	auxfilt = FILTER()
	SET FILTER TO contas.datavencim < DATE();
		.AND. contas.situacao = "A"
	SCAN
		REPLACE contas.situacao WITH "V"
	ENDSCAN
	SET FILTER TO &auxfilt
	RETURN
	*--

	*--
PROCEDURE zera_var
	wnparc = 1
	wvalor = 0.00
	venc1 = 0
	inclui = .T.
	SHOW GET MENU, 1 PROMPT "Adiciona"
	SHOW GET MENU, 3 ENABLE
	SHOW GET MENU, 4 ENABLE
	SHOW GET MENU, 5 ENABLE
	SHOW GET wsit ENABLE
	SHOW GET di ENABLE
	SHOW GET df ENABLE
	RETURN
	*--

	*--
PROCEDURE filtra
	do filtros
	IF C = 1
		DIMENSION list_cont[ 1]
		DIMENSION list_rec[ 1]
		list_cont[ 1] = "NÃO EXISTEM CONTAS A LISTAR NESTAS CONDIÇÕES"
		SELECT contas.situacao+". "+ SUBSTR(ccust2.descricao,1,17)+"  "+ SUBSTR(contas.razaosocia,1,30)+"  "+;
			contas.numnotadoc+"  "+ DTOC(contas.datavencim)+" "+ STR(contas.valpgtorec,10,2)+"   "+;
			contas.curso+" "+ area.sigla, contas.numerolanc, contas.valpgtorec FROM contas,;
			ccust2, area WHERE contas.area == area.codigo AND contas.plano == ccust2.codigo;
			AND &auxfilt ORDER BY &auxord INTO ARRAY list_cont
		nrec = ALEN(list_cont) / 3
		totabe = 0.00
		FOR i = 1 TO nrec
			totabe = totabe + list_cont(i,3)
		ENDFOR
	ELSE
		DIMENSION list_cont[ 1, 3]
		list_cont[ 1, 1] =  ;
			"SELECIONE UM DOS FILTROS QUE SEJA GERADA A LISTA..."
		list_cont[ 1, 2] = 0
		list_cont[ 1, 3] = 0
	ENDIF
	SELECT contas
	RETURN
	*--

PROCEDURE expcontab
	DO filtros
	IF C = 1
		SELECT ' ' AS setor, ;
				contas.razaosocia AS Fornecedor, ;
				contas.numnotadoc AS NF, ;
				DTOC(contas.dataemiss) AS Emissao, ;
				DTOC(contas.datalancam) AS Contrata, ;
				empresas.nome AS Referente, ;
				contas.valpgtorec AS inicial, ;
				1 AS parcela, ;
				0.00 AS multa, ;
				contas.valorjuros AS juros, ;
				contas.valorliqui AS pago, ;
				LEFT(contas.obs,100) AS obs ;
			FROM contas, empresas ;
			WHERE contas.empresa_id == empresas.id ;
				AND &auxfilt ;
			ORDER BY &auxord ;
			INTO CURSOR auxcont
		narq = 'C:\CONTAB'
		out_file = PUTFILE( 'Nome do Arquivo:', narq,  'XLS')
		IF EMPTY(out_file)
			DO winalert WITH  'ATENÇÃO', 'PLANILHA NÃO GRAVADA.'
		ELSE
			SELECT auxcont
			SET SAFETY OFF
			COPY TO &out_file TYPE XLS
			SET SAFETY ON
		ENDIF
	ELSE
		DO WINALERT WITH 'Atenção','Selecione os filtros para a exportação!'
	ENDIF
	SELECT contas
	RETURN
	*--

PROCEDURE filtros
	SELECT contas
	C = 0
	auxfilt = " "
	auxord = "Contas.Datavencim, Contas.Valpgtorec "
	DO CASE
	CASE tipo_dat = 1
		DO CASE
		CASE di <> {} .AND. df = {}
			C = 1
			auxfilt = "Contas.Datavencim >= Di "
		CASE di = {} .AND. df <> {}
			C = 1
			auxfilt = "Contas.Datavencim <= Df "
		CASE di <> {} .AND. df <> {}
			C = 1
			auxfilt = "Contas.Datavencim >= Di AND Contas.Datavencim <= Df "
		ENDCASE
	CASE tipo_dat = 2
		DO CASE
		CASE di <> {} .AND. df = {}
			C = 1
			auxfilt = "Contas.Datapagtos >= Di "
		CASE di = {} .AND. df <> {}
			C = 1
			auxfilt = "Contas.Datapagtos <= Df "
		CASE di <> {} .AND. df <> {}
			C = 1
			auxfilt = "Contas.Datapagtos >= Di AND Contas.Datapagtos <= Df "
		ENDCASE
	CASE tipo_dat = 3
		DO CASE
		CASE di <> {} .AND. df = {}
			C = 1
			auxfilt = "Contas.Datalancam >= Di "
		CASE di = {} .AND. df <> {}
			C = 1
			auxfilt = "Contas.Datalancam <= Df "
		CASE di <> {} .AND. df <> {}
			C = 1
			auxfilt = "Contas.Datalancam >= Di AND Contas.Datalancam <= Df "
		ENDCASE
	CASE tipo_dat = 4
		DO CASE
		CASE di <> {} .AND. df = {}
			C = 1
			auxfilt = "Contas.Dataemiss >= Di "
		CASE di = {} .AND. df <> {}
			C = 1
			auxfilt = "Contas.Dataemiss <= Df "
		CASE di <> {} .AND. df <> {}
			C = 1
			auxfilt = "Contas.Dataemiss >= Di AND Contas.Dataemiss <= Df "
		ENDCASE
	ENDCASE
	DO CASE
	CASE SUBSTR(wsit, 1, 1) = "A"
		IF C = 1
			auxfilt = auxfilt + "AND "
		ENDIF
		C = 1
		auxfilt = auxfilt +  ;
			"(Contas.Situacao <> 'L' AND Contas.Situacao <> 'E')"
	CASE SUBSTR(wsit, 1, 1) = "L"
		IF C = 1
			auxfilt = auxfilt + "AND "
		ENDIF
		C = 1
		auxfilt = auxfilt +  ;
			"(Contas.Situacao = 'L' AND Contas.Situacao <> 'E')"
	CASE SUBSTR(wsit, 1, 1) = "V"
		IF C = 1
			auxfilt = auxfilt + "AND "
		ENDIF
		C = 1
		auxfilt = auxfilt +  ;
			"(Contas.Situacao = 'V' AND Contas.Situacao <> 'E')"
	ENDCASE
	IF filt_cede
		IF C = 1
			auxfilt = auxfilt + "AND "
		ENDIF
		C = 1
		auxfilt = auxfilt +  ;
			"Contas.Razaosocia = ALLTRIM(List_for[Fors,1]) "
	ELSE
		IF !isblank(wc_nfor)
			IF C = 1
				auxfilt = auxfilt + "AND "
			ENDIF
			C = 1
			IF tip_nome = 1
				auxfilt = auxfilt + "Contas.Razaosocia = ALLTRIM(Wc_nfor) "
			ELSE
				auxfilt = auxfilt + "ALLTRIM(Wc_nfor) $ Contas.Razaosocia "
			ENDIF
		ENDIF
	ENDIF
	IF filt_plan
		wc_ccu = list_ccu(ccus,2)
		IF C = 1
			auxfilt = auxfilt + "AND "
		ENDIF
		C = 1
		auxfilt = auxfilt + "Contas.Plano = Wc_ccu "
	ENDIF
	IF filt_area
		wc_area = lst_area(areas,2)
		IF C = 1
			auxfilt = auxfilt + "AND "
		ENDIF
		C = 1
		auxfilt = auxfilt + "Contas.Area = Wc_area "
	ENDIF
	IF filt_suba
		wc_suba = lst_suba(subas,2)
		IF C = 1
			auxfilt = auxfilt + "AND "
		ENDIF
		C = 1
		auxfilt = auxfilt + "Contas.Subarea = Wc_suba "
	ENDIF
	IF filt_cart
		IF C = 1
			auxfilt = auxfilt + "AND "
		ENDIF
		C = 1
		auxfilt = auxfilt + "Contas.Cartao_id = List_cart[carts,2] "
	ENDIF
	IF filt_form
		wc_form = list_tip(tips,2)
		IF C = 1
			auxfilt = auxfilt + "AND "
		ENDIF
		C = 1
		auxfilt = auxfilt + "Contas.Forma = Wc_form "
	ENDIF
	IF filt_banc
		IF C = 1
			auxfilt = auxfilt + "AND "
		ENDIF
		C = 1
		auxfilt = auxfilt + "Codigobanc = List_ban[bans,2] "
	ENDIF
	IF lempr
		IF C = 1
			auxfilt = auxfilt + "AND "
		ENDIF
		C = 1
		auxfilt = auxfilt + "empresa_id = List_emp[emps,2] "
	ENDIF
	IF lcontab
		IF C = 1
			auxfilt = auxfilt + "AND "
		ENDIF
		C = 1
		auxfilt = auxfilt + "contas.contab "
	ENDIF
	IF filt_mod
		IF C = 1
			auxfilt = auxfilt + "AND "
		ENDIF
		C = 1
		auxfilt = auxfilt + "Modulo = Wmodulo "
	ENDIF
	IF filt_tipo
		IF C = 1
			auxfilt = auxfilt + "AND "
		ENDIF
		C = 1
		auxfilt = auxfilt + "Tipo = Wtipo "
	ENDIF
	IF filt_nota
		IF C = 1
			auxfilt = auxfilt + "AND "
		ENDIF
		C = 1
		IF !isblank(wnota) .AND. !isblank(wnotaf)
			auxfilt = auxfilt +  ;
				"Contas.Numnotadoc >= Wnota AND			 Contas.Numnotadoc <= Wnotaf "
			auxord = "Contas.Numnotadoc, Contas.Datavencim, Contas.Valpgtorec "
		ELSE
			auxfilt = auxfilt + "Contas.Numnotadoc = Wnota "
		ENDIF
	ENDIF
	IF filt_valo
		IF C = 1
			auxfilt = auxfilt + "AND "
		ENDIF
		C = 1
		auxfilt = auxfilt + "Contas.Valpgtorec = Wvalor "
	ENDIF
	
	IF filt_obs
		IF C = 1
			auxfilt = auxfilt + "AND "
		ENDIF
		C = 1
		auxfilt = auxfilt + "UPPER(ALLTRIM(wobs)) $ UPPER(Contas.Obs) "
	ENDIF
	SELECT contas
	RETURN
	*--

	*--
PROCEDURE rel_contas
	SELECT contas
	C = 0
	auxfilt = " "
	auxord = "Contas.Datavencim, Contas.Razaosocia, Contas.Valpgtorec "
	impnota = .F.
	DO CASE
	CASE tipo_dat = 1
		DO CASE
		CASE di <> {} .AND. df = {}
			C = 1
			auxfilt = "Contas.Datavencim >= Di "
		CASE di = {} .AND. df <> {}
			C = 1
			auxfilt = "Contas.Datavencim <= Df "
		CASE di <> {} .AND. df <> {}
			C = 1
			auxfilt = "Contas.Datavencim >= Di AND Contas.Datavencim <= Df "
		ENDCASE
	CASE tipo_dat = 2
		DO CASE
		CASE di <> {} .AND. df = {}
			C = 1
			auxfilt = "Contas.Datapagtos >= Di "
		CASE di = {} .AND. df <> {}
			C = 1
			auxfilt = "Contas.Datapagtos <= Df "
		CASE di <> {} .AND. df <> {}
			C = 1
			auxfilt = "Contas.Datapagtos >= Di AND Contas.Datapagtos <= Df "
		ENDCASE
	CASE tipo_dat = 3
		DO CASE
		CASE di <> {} .AND. df = {}
			C = 1
			auxfilt = "Contas.Datalancam >= Di "
		CASE di = {} .AND. df <> {}
			C = 1
			auxfilt = "Contas.Datalancam <= Df "
		CASE di <> {} .AND. df <> {}
			C = 1
			auxfilt = "Contas.Datalancam >= Di AND Contas.Datalancam <= Df "
		ENDCASE
	CASE tipo_dat = 4
		DO CASE
		CASE di <> {} .AND. df = {}
			C = 1
			auxfilt = "Contas.Dataemiss >= Di "
		CASE di = {} .AND. df <> {}
			C = 1
			auxfilt = "Contas.Dataemiss <= Df "
		CASE di <> {} .AND. df <> {}
			C = 1
			auxfilt = "Contas.Dataemiss >= Di AND Contas.Dataemiss <= Df "
		ENDCASE
	ENDCASE
	DO CASE
	CASE SUBSTR(wsit, 1, 1) = "A"
		IF C = 1
			auxfilt = auxfilt + "AND "
		ENDIF
		C = 1
		auxfilt = auxfilt +  ;
			"(Contas.Situacao <> 'L' AND Contas.Situacao <> 'E')"
	CASE SUBSTR(wsit, 1, 1) = "L"
		IF C = 1
			auxfilt = auxfilt + "AND "
		ENDIF
		C = 1
		auxfilt = auxfilt +  ;
			"(Contas.Situacao = 'L' AND Contas.Situacao <> 'E')"
	CASE SUBSTR(wsit, 1, 1) = "V"
		IF C = 1
			auxfilt = auxfilt + "AND "
		ENDIF
		C = 1
		auxfilt = auxfilt +  ;
			"(Contas.Situacao = 'V' AND Contas.Situacao <> 'E')"
	ENDCASE
	IF filt_cede
		IF C = 1
			auxfilt = auxfilt + "AND "
		ENDIF
		C = 1
		auxfilt = auxfilt +  ;
			"Contas.Razaosocia = ALLTRIM(List_for[Fors,1]) "
	ELSE
		IF !isblank(wc_nfor)
			IF C = 1
				auxfilt = auxfilt + "AND "
			ENDIF
			C = 1
			auxfilt = auxfilt + "Contas.Razaosocia = Wc_nfor "
		ENDIF
	ENDIF
	IF filt_plan
		wc_ccu = list_ccu(ccus,2)
		IF C = 1
			auxfilt = auxfilt + "AND "
		ENDIF
		C = 1
		auxfilt = auxfilt + "Contas.Plano = Wc_ccu "
	ENDIF
	IF filt_area
		wc_area = lst_area(areas,2)
		IF C = 1
			auxfilt = auxfilt + "AND "
		ENDIF
		C = 1
		auxfilt = auxfilt + "Contas.Area = Wc_area "
	ENDIF
	IF filt_suba
		wc_suba = lst_suba(subas,2)
		IF C = 1
			auxfilt = auxfilt + "AND "
		ENDIF
		C = 1
		auxfilt = auxfilt + "Contas.Subarea = Wc_suba "
	ENDIF
	IF filt_form
		wc_form = list_tip(tips,2)
		IF C = 1
			auxfilt = auxfilt + "AND "
		ENDIF
		C = 1
		auxfilt = auxfilt + "Contas.Forma = Wc_form "
	ENDIF
	IF filt_banc
		wc_ban = list_ban(bans,2)
		IF C = 1
			auxfilt = auxfilt + "AND "
		ENDIF
		C = 1
		auxfilt = auxfilt + "Contas.Codigobanc = Wc_ban "
	ENDIF
	IF lempr
		IF C = 1
			auxfilt = auxfilt + "AND "
		ENDIF
		C = 1
		auxfilt = auxfilt + "empresa_id = List_emp[emps,2] "
	ENDIF
	IF lcontab
		IF C = 1
			auxfilt = auxfilt + "AND "
		ENDIF
		C = 1
		auxfilt = auxfilt + "contas.contab "
	ENDIF
	IF filt_nota
		IF C = 1
			auxfilt = auxfilt + "AND "
		ENDIF
		C = 1
		IF !isblank(wnota) .AND. !isblank(wnotaf)
			auxfilt = auxfilt +  ;
				"Contas.Numnotadoc >= Wnota AND			 Contas.Numnotadoc <= Wnotaf "
			auxord = "Contas.Numnotadoc, Contas.Datavencim, Contas.Valpgtorec "
			impnota = .T.
		ELSE
			auxfilt = auxfilt + "Contas.Numnotadoc = Wnota "
		ENDIF
	ENDIF
	IF filt_valo
		IF C = 1
			auxfilt = auxfilt + "AND "
		ENDIF
		C = 1
		auxfilt = auxfilt + "Contas.Valpgtorec = Wvalor "
	ENDIF
	IF filt_obs
		IF C = 1
			auxfilt = auxfilt + "AND "
		ENDIF
		C = 1
		auxfilt = auxfilt + "UPPER(ALLTRIM(wobs)) $ UPPER(Contas.Obs) "
	ENDIF
	IF C = 1 .OR. wcopia
		IF wcopia
			SELECT contas.razaosocia, contas.situacao, contas.datavencim, contas.valpgtorec,;
				contas.numnotadoc, contas.valorliqui, contas.curso FROM contas WHERE contas.codigobanc;
				== list_ban[Bans,2] AND contas.copia == ws_cop ORDER BY &auxord INTO CURSOR;
				cont_imp
			ws_comp = ALLTRIM(list_ban(bans,1)) + " - " + ws_comp
			SELECT cont_imp
			REPORT FORM copia_cq.frx TO PRINTER &cvisual
		ELSE
			SELECT contas.razaosocia, contas.situacao, contas.datavencim, contas.valpgtorec,;
				contas.numnotadoc, contas.valorliqui, contas.plano, contas.area, contas.datapagtos,;
				contas.codigobanc, contas.forma,contas.curso, contas.obs, ccust2.descricao;
				AS ccust, area.sigla FROM contas, ccust2, area WHERE contas.plano == ccust2.codigo;
				AND contas.area == area.codigo AND &auxfilt ORDER BY &auxord INTO CURSOR;
				cont_imp
			conf_rel = winconf("ATENÇÃO","Relatório Quebrado por Mês?")
			IF conf_rel
				n_clientes = 0
				IF filt_area .AND. filt_suba
					SELECT clicurso
					CALCULATE FOR clicurso.codarea = wc_area .AND.  ;
						clicurso.codsub = wc_suba .AND.  ;
						ALLTRIM(clicurso.situacao) $  ;
						"ATIVO-BOLSISTA-CONCLUIDO" CNT() TO n_clientes
				ENDIF
				SELECT cont_imp
				crel = winconf("ATENÇÃO","Relatório com Observações?")
				IF crel
					warea = lst_area(areas,1)
					wsub = lst_suba(subas,1)
					REPORT FORM cnt_obs.frx TO PRINTER &cvisual
				ELSE
					REPORT FORM cnt_mes.frx TO PRINTER &cvisual
				ENDIF
			ELSE
				IF impnota
					REPORT FORM cnt_docs.frx TO PRINTER &cvisual
				ELSE
					crel = winconf("ATENÇÃO","Agrupado por Fornecedor?")
					IF crel
						REPORT FORM cont_for.frx TO PRINTER &cvisual
					ELSE
						REPORT FORM contas.frx TO PRINTER &cvisual
					ENDIF
				ENDIF
			ENDIF
		ENDIF
	ELSE
		WAIT WINDOW "DADOS INSUFICIENTES PARA EMISSÃO DO RELATÓRIO"
	ENDIF
	RETURN
	*--

	*--
PROCEDURE ced_list
	DO CASE
	CASE wtipo_ced = 1
		SELECT fornecs.nome, fornecs.codigo, fornecs.plano FROM  ;
			fornecs ORDER BY fornecs.nome INTO ARRAY list_for
	CASE wtipo_ced = 2
		SELECT funcs.nome, funcs.codigo, "0101" FROM funcs WHERE  ;
			funcs.status <> "X" ORDER BY funcs.nome INTO ARRAY  ;
			list_for
	CASE wtipo_ced = 3
		SELECT prof.nome, prof.codigo, "0301" FROM prof ORDER BY  ;
			prof.nome INTO ARRAY list_for
	ENDCASE
	fors = 1
	IF !isblank(list_for(fors,3))
		ccus = ASCAN(rec_ccu, ALLTRIM(list_for(fors,3)))
	ENDIF
	SHOW GETS
	RETURN
	*--

	*--
PROCEDURE for_list
	SELECT STR(tip_paga.codigo, 1) + " - " + tip_paga.descricao,  ;
		tip_paga.codigo FROM tip_paga ORDER BY tip_paga.codigo  ;
		INTO ARRAY list_tip
	SELECT bancos.nome, bancos.codigo FROM bancos ORDER BY  ;
		bancos.nome INTO ARRAY list_ban
	SELECT cartao.descricao, cartao.id FROM cartao ORDER BY  ;
		cartao.descricao INTO ARRAY list_cart
	SELECT ccust2.codigo + " " + ccust2.descricao, ccust2.codigo  ;
		FROM ccust2 ORDER BY ccust2.codigo INTO ARRAY list_ccu
	SELECT ccust2.codigo FROM ccust2 ORDER BY ccust2.codigo INTO  ;
		ARRAY rec_ccu
	RETURN
	*--

	*--
PROCEDURE aj_vcto
	FOR i = 1 TO vencs
		aux_par = "Venc" + ALLTRIM(STR(i, 2))
		SHOW GET &aux_par ENABLE
	ENDFOR
	FOR i = 10 TO vencs + 1 STEP -1
		aux_par = "Venc" + ALLTRIM(STR(i, 2))
		SHOW GET &aux_par DISABLE
		&aux_par = 0
	ENDFOR
	RETURN
	*--

	*--
PROCEDURE adiciona
	CONF = winconf("AVISO", ;
		"TEM CERTEZA QUE DESEJA INCLUIR ESTA CONTA?")
	IF CONF
		auxcond = SPACE(33)
		FOR i = 1 TO vencs
			aux_venc = "Venc" + ALLTRIM(STR(i, 2))
			auxcond = auxcond + STR(&aux_venc,3)
		ENDFOR
		auxdes2 = STUFF(ALLTRIM(STR(vencs, 2)), 1, 0, REPLICATE("0", 2 -  ;
			LEN(ALLTRIM(STR(vencs, 4)))))
		FOR i = 1 TO vencs
			aux_dat = "I_data" + ALLTRIM(STR(i, 2))
			aux_val = "I_val" + ALLTRIM(STR(i, 2))
			SELECT contas
			CALCULATE MAX(numerolanc) TO ultnum
			APPEND BLANK
			REPLACE contas.numerolanc WITH ultnum + 1
			REPLACE contas.situacao WITH "A"
			REPLACE contas.modulo WITH wmodulo
			REPLACE contas.tipo WITH wtipo
			REPLACE contas.cartao_id WITH list_cart(carts,2)
			REPLACE contas.datalancam WITH wdatemiss
			REPLACE contas.dataemiss WITH wdatanf
			REPLACE contas.datavencim WITH &aux_dat
			REPLACE contas.valpgtorec WITH &aux_val
			REPLACE contas.numnotadoc WITH wnota
			REPLACE contas.curso WITH lst_suba(subas,1)
			REPLACE contas.razaosocia WITH list_for(fors,1)
			REPLACE contas.codfor WITH list_for(fors,2)
			REPLACE contas.forma WITH VAL(SUBSTR(list_tip(tips), 1, 1))
			REPLACE contas.plano WITH SUBSTR(list_ccu(ccus), 1, 4)
			REPLACE contas.area WITH lst_area(areas,2)
			REPLACE contas.subarea WITH lst_suba(subas,2)
			REPLACE contas.codigobanc WITH list_ban(bans,2)
			auxdes = STUFF(ALLTRIM(STR(i, 2)), 1, 0, REPLICATE("0", 2 -  ;
				LEN(ALLTRIM(STR(i, 4))))) + auxdes2
			REPLACE contas.numdesmemb WITH auxdes
			REPLACE contas.condipagto WITH auxcond
			REPLACE contas.obs WITH wobs
			REPLACE contas.contab WITH wcontab
			REPLACE contas.empresa_id WITH list_emp(emps,2)
			REPLACE contas.tipo_ced WITH wtipo_ced
		ENDFOR
	ENDIF
	DO zera_var
	_CUROBJ = OBJNUM(fors)
	RETURN
	*--

	*--
PROCEDURE ad_unica
	CONF = winconf("AVISO", ;
		"TEM CERTEZA QUE DESEJA INCLUIR ESTA CONTA?")
	IF CONF
		aux_day = DAY(wdatalanc)
		aux_data = wdatalanc
		FOR i = 1 TO wnparc
			IF i > 1
				mes_ano = CTOD("01" + SUBSTR(DTOC(aux_data), 3, 8)) + 35
				wmes = MONTH(mes_ano)
				DO CASE
				CASE aux_day = 31
					DO CASE
					CASE wmes = 2
						aux_data = CTOD("28" + SUBSTR(DTOC(mes_ano), 3, 8))
					CASE wnes = 4 .OR. wnes = 6 .OR. wnes = 9 .OR. wnes = 11
						aux_data = CTOD("30" + SUBSTR(DTOC(mes_ano), 3, 8))
					OTHERWISE
						aux_data = CTOD("31" + SUBSTR(DTOC(mes_ano), 3, 8))
					ENDCASE
				CASE aux_day = 30
					DO CASE
					CASE wmes = 2
						aux_data = CTOD("28" + SUBSTR(DTOC(mes_ano), 3, 8))
					OTHERWISE
						aux_data = CTOD("30" + SUBSTR(DTOC(mes_ano), 3, 8))
					ENDCASE
				OTHERWISE
					IF aux_day < 10
						aux_data = CTOD("0" + STR(aux_day, 1) +  ;
							SUBSTR(DTOC(mes_ano), 3, 8))
					ELSE
						aux_data = CTOD(STR(aux_day, 2) + SUBSTR(DTOC(mes_ano), 3,  ;
							8))
					ENDIF
				ENDCASE
			ENDIF
			SELECT contas
			CALCULATE MAX(numerolanc) TO ultnum
			APPEND BLANK
			REPLACE contas.numerolanc WITH ultnum + 1
			REPLACE contas.situacao WITH "A"
			REPLACE contas.modulo WITH wmodulo
			REPLACE contas.tipo WITH wtipo
			REPLACE contas.cartao_id WITH list_cart(carts,2)
			REPLACE contas.datalancam WITH wdatemiss
			REPLACE contas.dataemiss WITH wdatanf
			REPLACE contas.datavencim WITH aux_data
			REPLACE contas.valpgtorec WITH wvalor
			REPLACE contas.numnotadoc WITH wnota
			REPLACE contas.curso WITH lst_suba(subas,1)
			REPLACE contas.razaosocia WITH list_for(fors,1)
			REPLACE contas.codfor WITH list_for(fors,2)
			REPLACE contas.forma WITH list_tip(tips,2)
			REPLACE contas.plano WITH list_ccu(ccus,2)
			REPLACE contas.area WITH lst_area(areas,2)
			REPLACE contas.subarea WITH lst_suba(subas,2)
			REPLACE contas.codigobanc WITH list_ban(bans,2)
			REPLACE contas.numdesmemb WITH "0101"
			REPLACE contas.obs WITH wobs
			REPLACE contas.contab WITH wcontab
			REPLACE contas.empresa_id WITH list_emp(emps,2)
			REPLACE contas.tipo_ced WITH wtipo_ced
			IF llancquit
				SELECT contas
				REPLACE contas.situacao WITH "L"
				REPLACE contas.datapagtos WITH wdatalanc
				REPLACE contas.valorliqui WITH contas.valpgtorec
				SELECT extrato
				CALCULATE MAX(numerolanc) TO ult
				APPEND BLANK
				REPLACE extrato.numerolanc WITH ult + 1
				REPLACE extrato.data WITH wdatalanc
				REPLACE extrato.historico WITH ALLTRIM(SUBSTR(list_ccu(ccus, ;
					1), 6, 20)) + " - " + contas.razaosocia
				REPLACE extrato.valor WITH contas.valpgtorec
				REPLACE extrato.debito WITH "-"
				REPLACE extrato.destino WITH contas.codigobanc
				REPLACE extrato.dinheiro WITH "DN"
				SELECT contas
				REPLACE contas.cx_key WITH ult + 1
			ENDIF
			SELECT contas
		ENDFOR
	ENDIF
	DO zera_var
	_CUROBJ = OBJNUM(fors)
	RETURN
	*--

	*--
PROCEDURE rel_ccus
	IF FILE("c:\action\CCUSTO.DBF")
		DELETE FILE C:\action\ccusto.dbf
	ENDIF
	auxfilt = ""
	DO filt_ger
	IF !isblank(auxfilt)
		SELECT area.descricao AS area, ccust2.descricao AS plano, area.codigo AS;
			cod_area, ccust2.codigo AS cod_plan, ccust2.verba, ccust2.liberado, SUM(contas.valpgtorec);
			AS valor, SPACE(20) AS gruplan, contas.curso FROM contas, area, ccust2 WHERE;
			area.codigo = contas.area AND ccust2.codigo = contas.plano AND &auxfilt GROUP;
			BY area.codigo, contas.curso, ccust2.codigo ORDER BY area.codigo, contas.curso,;
			ccust2.codigo INTO TABLE C:\action\ccusto
		SET EXACT ON
		SELECT ccusto
		SCAN
			SELECT ccust2
			SEEK SUBSTR(ccusto.cod_plan, 1, 2)
			SELECT ccusto
			REPLACE ccusto.gruplan WITH ccust2.descricao
		ENDSCAN
		SELECT ccusto
		REPORT FORM ccusto TO PRINTER &cvisual
		SELECT ccusto
		USE
	ELSE
		DO winalert WITH "AVISO",  ;
			"O RELATÓRIO NÃO FOI GERADO. ESCOLHA UM FILTRO."
	ENDIF
	RETURN
	*--

	*--
PROCEDURE cnt_ccus
	IF FILE("c:\action\CCUSTO.DBF")
		DELETE FILE C:\action\ccusto.dbf
	ENDIF
	auxfilt = ""
	DO filt_ger
	IF !isblank(auxfilt)
		SELECT area.descricao AS area, ccust2.descricao AS plano, area.codigo AS;
			cod_area, ccust2.codigo AS cod_plan, ccust2.verba, ccust2.liberado, SUM(contas.valpgtorec);
			AS valor, SPACE(20) AS gruplan, contas.curso FROM contas, area, ccust2 WHERE;
			area.codigo = contas.area AND ccust2.codigo = contas.plano AND &auxfilt GROUP;
			BY ccust2.codigo ORDER BY ccust2.codigo INTO TABLE C:\action\ccusto
		SET EXACT ON
		SELECT ccusto
		SCAN
			SELECT ccust2
			SEEK SUBSTR(ccusto.cod_plan, 1, 2)
			SELECT ccusto
			REPLACE ccusto.gruplan WITH ccust2.descricao
		ENDSCAN
		SELECT ccusto
		REPORT FORM ccust3 TO PRINTER &cvisual
		SELECT ccusto
		USE
	ELSE
		DO winalert WITH "AVISO",  ;
			"O RELATÓRIO NÃO FOI GERADO. ESCOLHA UM FILTRO."
	ENDIF
	RETURN
	*--

	*--
PROCEDURE quitall
	CONF = winconf("ATENCAO", ;
		"TEM CERTEZA QUE DESEJA QUITAR ESTA PARCELA?")
	IF CONF
		FOR i = 1 TO ALEN(list_rec)
			SELECT contas
			GOTO list_rec(i)
			wq_din = 1
			SELECT contas
			REPLACE contas.situacao WITH "L"
			REPLACE contas.datapagtos WITH wdatalanc
			REPLACE contas.valorliqui WITH contas.valpgtorec
			IF contas.codigobanc = "09"
				SELECT extrato
				APPEND BLANK
				REPLACE extrato.numerolanc WITH contas.numerolanc
				REPLACE extrato.data WITH wdatalanc
				REPLACE extrato.historico WITH contas.razaosocia
				REPLACE extrato.valor WITH contas.valpgtorec
				REPLACE extrato.debito WITH "-"
				REPLACE extrato.destino WITH contas.codigobanc
				REPLACE extrato.dinheiro WITH IIF(wq_din = 1, "DN", "CH")
			ENDIF
		ENDFOR
	ENDIF
	DO filtra
	SHOW GETS
	RETURN
	*--

	*--
PROCEDURE altall
	CONF = winconf("ATENCAO", ;
		"TEM CERTEZA QUE DESEJA ALTERAR ESTAS PARCELA?")
	IF CONF
		FOR i = 1 TO ALEN(list_rec)
			SELECT contas
			GOTO list_rec(i)
			SELECT contas
			IF !isblank(wnota)
				REPLACE contas.numnotadoc WITH wnota
			ENDIF
			REPLACE contas.forma WITH VAL(SUBSTR(list_tip(tips), 1, 1))
			REPLACE contas.codigobanc WITH list_ban(bans,2)
		ENDFOR
	ENDIF
	DO filtra
	SHOW GETS
	RETURN
	*--

	*--
PROCEDURE an_ccusto
	IF FILE("c:\action\CCUSTO.DBF")
		DELETE FILE C:\action\ccusto.dbf
	ENDIF
	auxfilt = ""
	DO filt_ger
	IF !isblank(auxfilt)
		SELECT area.descricao AS area, ccust2.descricao AS plano, area.codigo AS;
			cod_area, ccust2.codigo AS cod_plan, contas.valpgtorec AS valor, SPACE(20);
			AS gruplan, contas.curso, contas.obs, contas.razaosocia FROM contas, area,;
			ccust2 WHERE area.codigo = contas.area AND ccust2.codigo = contas.plano AND;
			&auxfilt ORDER BY area.codigo, contas.curso, ccust2.codigo, ccust2.descricao;
			INTO TABLE C:\action\ccusto
		SET EXACT ON
		SELECT ccusto
		SCAN
			SELECT ccust2
			SEEK SUBSTR(ccusto.cod_plan, 1, 2)
			SELECT ccusto
			REPLACE ccusto.gruplan WITH ccust2.descricao
		ENDSCAN
		SELECT ccusto
		REPORT FORM an_ccust TO PRINTER &cvisual
		SELECT ccusto
		USE
	ELSE
		DO winalert WITH "AVISO",  ;
			"O RELATÓRIO NÃO FOI GERADO. ESCOLHA UM FILTRO."
	ENDIF
	RETURN
	*--

	*--
PROCEDURE rel_parc
	IF !isblank(di) .AND. !isblank(df)
		SELECT parc_cab
		LOCATE FOR parc_cab.plano == SUBSTR(list_ccu(ccus,1), 1, 4)
		rot_tit = parc_cab.titulo
		SELECT parc_itm
		tot_parc = 0.00
		SCAN FOR parc_itm.cod_parc == parc_cab.codigo
			auxarea = parc_itm.area
			SELECT area
			SEEK auxarea
			auxsubarea = parc_itm.subarea
			SELECT subarea
			SEEK auxsubarea
			SELECT recebs.razaosocia AS cliente, recebs.datavencim,  ;
				recebs.datapagtos, IIF(recebs.valpgtorec -  ;
				recebs.valdescont > recebs.valorliqui,  ;
				recebs.valorliqui, recebs.valpgtorec -  ;
				recebs.valdescont) AS valpgtorec FROM recebs WHERE  ;
				recebs.datapagtos >= di AND recebs.datapagtos <= df AND  ;
				recebs.valpgtorec > 100.00  AND recebs.area = auxarea  ;
				AND recebs.subarea = auxsubarea AND recebs.situacao =  ;
				"L" ORDER BY recebs.razaosocia, datavencim INTO CURSOR  ;
				cont_imp
			auxval = 0.00
			SELECT cont_imp
			SCAN
				auxval = auxval + cont_imp.valpgtorec
			ENDSCAN
			rot_curso = ALLTRIM(subarea.sigla) + "-" + ALLTRIM(area.sigla)
			auxcomis = parc_itm.comissao
			tot_parc = tot_parc + (auxval * (auxcomis / 100))
			SELECT cont_imp
			nrec = RECCOUNT()
			IF nrec > 0
				REPORT FORMAT parc_imp.frx TO PRINTER NOCONSOLE
			ENDIF
		ENDSCAN
	ENDIF
	RETURN
	*--

	*--
PROCEDURE filt_ger
	auxfilt = ""
	C = 0
	DO CASE
	CASE tipo_dat = 1
		DO CASE
		CASE di <> {} .AND. df = {}
			C = 1
			auxfilt = "Contas.Datavencim >= Di "
		CASE di = {} .AND. df <> {}
			C = 1
			auxfilt = "Contas.Datavencim <= Df "
		CASE di <> {} .AND. df <> {}
			C = 1
			auxfilt = "Contas.Datavencim >= Di AND Contas.Datavencim <= Df "
		ENDCASE
	CASE tipo_dat = 2
		DO CASE
		CASE di <> {} .AND. df = {}
			C = 1
			auxfilt = "Contas.Datapagtos >= Di "
		CASE di = {} .AND. df <> {}
			C = 1
			auxfilt = "Contas.Datapagtos <= Df "
		CASE di <> {} .AND. df <> {}
			C = 1
			auxfilt = "Contas.Datapagtos >= Di AND Contas.Datapagtos <= Df "
		ENDCASE
	CASE tipo_dat = 3
		DO CASE
		CASE di <> {} .AND. df = {}
			C = 1
			auxfilt = "Contas.Datalancam >= Di "
		CASE di = {} .AND. df <> {}
			C = 1
			auxfilt = "Contas.Datalancam <= Df "
		CASE di <> {} .AND. df <> {}
			C = 1
			auxfilt = "Contas.Datalancam >= Di AND Contas.Datalancam <= Df "
		ENDCASE
	CASE tipo_dat = 4
		DO CASE
		CASE di <> {} .AND. df = {}
			C = 1
			auxfilt = "Contas.Dataemiss >= Di "
		CASE di = {} .AND. df <> {}
			C = 1
			auxfilt = "Contas.Dataemiss <= Df "
		CASE di <> {} .AND. df <> {}
			C = 1
			auxfilt = "Contas.Dataemiss >= Di AND Contas.Dataemiss <= Df "
		ENDCASE
	ENDCASE
	DO CASE
	CASE SUBSTR(wsit, 1, 1) = "A"
		IF C = 1
			auxfilt = auxfilt + "AND "
		ENDIF
		C = 1
		auxfilt = auxfilt +  ;
			"(Contas.Situacao <> 'L' AND Contas.Situacao <> 'E')"
	CASE SUBSTR(wsit, 1, 1) = "L"
		IF C = 1
			auxfilt = auxfilt + "AND "
		ENDIF
		C = 1
		auxfilt = auxfilt +  ;
			"(Contas.Situacao = 'L' AND Contas.Situacao <> 'E')"
	CASE SUBSTR(wsit, 1, 1) = "V"
		IF C = 1
			auxfilt = auxfilt + "AND "
		ENDIF
		C = 1
		auxfilt = auxfilt +  ;
			"(Contas.Situacao = 'V' AND Contas.Situacao <> 'E')"
	ENDCASE
	IF filt_cede
		IF C = 1
			auxfilt = auxfilt + "AND "
		ENDIF
		C = 1
		auxfilt = auxfilt +  ;
			"Contas.Razaosocia = ALLTRIM(List_for[Fors,1]) "
	ELSE
		IF !isblank(wc_nfor)
			IF C = 1
				auxfilt = auxfilt + "AND "
			ENDIF
			C = 1
			auxfilt = auxfilt + "Contas.Razaosocia = Wc_nfor "
		ENDIF
	ENDIF
	IF filt_plan
		wc_ccu = list_ccu(ccus,2)
		IF C = 1
			auxfilt = auxfilt + "AND "
		ENDIF
		C = 1
		auxfilt = auxfilt + "Contas.Plano = Wc_ccu "
	ENDIF
	IF filt_area
		wc_area = lst_area(areas,2)
		IF C = 1
			auxfilt = auxfilt + "AND "
		ENDIF
		C = 1
		auxfilt = auxfilt + "Contas.Area = Wc_area "
	ENDIF
	IF filt_suba
		wc_suba = lst_suba(subas,2)
		IF C = 1
			auxfilt = auxfilt + "AND "
		ENDIF
		C = 1
		auxfilt = auxfilt + "Contas.Subarea = Wc_suba "
	ENDIF
	IF filt_form
		wc_form = list_tip(tips,2)
		IF C = 1
			auxfilt = auxfilt + "AND "
		ENDIF
		C = 1
		auxfilt = auxfilt + "Contas.Forma = Wc_form "
	ENDIF
	IF filt_banc
		IF C = 1
			auxfilt = auxfilt + "AND "
		ENDIF
		C = 1
		auxfilt = auxfilt + "Codigobanc = List_ban[bans,2] "
	ENDIF
	IF lempr
		IF C = 1
			auxfilt = auxfilt + "AND "
		ENDIF
		C = 1
		auxfilt = auxfilt + "empresa_id = List_emp[emps,2] "
	ENDIF
	IF lcontab
		IF C = 1
			auxfilt = auxfilt + "AND "
		ENDIF
		C = 1
		auxfilt = auxfilt + "contas.contab "
	ENDIF
	IF filt_nota
		IF C = 1
			auxfilt = auxfilt + "AND "
		ENDIF
		C = 1
		IF !isblank(wnota) .AND. !isblank(wnotaf)
			auxfilt = auxfilt +  ;
				"Contas.Numnotadoc >= Wnota AND			 Contas.Numnotadoc <= Wnotaf "
			auxord = "Contas.Numnotadoc, Contas.Datavencim, Contas.Valpgtorec "
		ELSE
			auxfilt = auxfilt + "Contas.Numnotadoc = Wnota "
		ENDIF
	ENDIF
	IF filt_valo
		IF C = 1
			auxfilt = auxfilt + "AND "
		ENDIF
		C = 1
		auxfilt = auxfilt + "Contas.Valpgtorec = Wvalor "
	ENDIF
	IF filt_obs
		IF C = 1
			auxfilt = auxfilt + "AND "
		ENDIF
		C = 1
		auxfilt = auxfilt + "UPPER(ALLTRIM(wobs)) $ UPPER(Contas.Obs) "
	ENDIF
	RETURN
	*--

	*--
PROCEDURE sem_ccus
	IF FILE("c:\action\CCUSTO.DBF")
		DELETE FILE C:\action\ccusto.dbf
	ENDIF
	IF FILE("c:\action\SEM_CCUS.DBF")
		DELETE FILE C:\action\sem_ccus.dbf
	ENDIF
	auxfilt = ""
	DO filt_ger
	IF !isblank(auxfilt)
		SELECT SUBSTR(DTOC(contas.datavencim),4,7) AS periodo, contas.datavencim,;
			ccust2.descricao AS plano, ccust2.codigo AS cod_plan, SUM(contas.valpgtorec);
			AS valor, SPACE(20) AS gruplan FROM contas, area, ccust2 WHERE area.codigo;
			= contas.area AND ccust2.codigo = contas.plano AND &auxfilt GROUP BY 1, ccust2.codigo;
			ORDER BY ccust2.codigo INTO TABLE C:\action\ccusto
		SET EXACT ON
		SELECT ccusto
		SCAN
			SELECT ccust2
			SEEK SUBSTR(ccusto.cod_plan, 1, 2)
			SELECT ccusto
			REPLACE ccusto.gruplan WITH ccust2.descricao
		ENDSCAN
		SELECT DISTINCT ccusto.periodo FROM ccusto ORDER BY  ;
			ccusto.datavencim INTO CURSOR per_ccus
		SELECT per_ccus
		IF RECCOUNT() > 0
			DIMENSION list_per[ RECCOUNT()]
			C = 0
			SELECT per_ccus
			SCAN
				C = C + 1
				aux_rotm = "Rotm" + STR(C, 1)
				&aux_rotm = per_ccus.periodo
				list_per[ c] = per_ccus.periodo
			ENDSCAN
			IF C < 6
				FOR i = C + 1 TO 6
					aux_rotm = "Rotm" + STR(i, 1)
					&aux_rotm = ''
				ENDFOR
			ENDIF
			CREATE DBF C:\action\sem_ccus (cod_plan C (4), gruplan C (20),  ;
				plano C (20), m1 N (12, 2), m2 N (12, 2), m3 N (12, 2),  ;
				m4 N (12, 2), m5 N (12, 2), m6 N (12, 2))
			SELECT sem_ccus
			INDEX ON cod_plan TAG cod_plan
			SELECT ccusto
			SCAN
				SELECT sem_ccus
				SEEK ccusto.cod_plan
				IF !FOUND()
					APPEND BLANK
					REPLACE sem_ccus.cod_plan WITH ccusto.cod_plan
					REPLACE sem_ccus.gruplan WITH ccusto.gruplan
					REPLACE sem_ccus.plano WITH ccusto.plano
				ENDIF
				num_col = ASCAN(list_per, ccusto.periodo)
				aux_m = "M" + STR(num_col, 1)
				REPLACE &aux_m                WITH ccusto.valor
				SELECT ccusto
			ENDSCAN
			SELECT sem_ccus
			REPORT FORM sem_ccus TO PRINTER &cvisual
			SELECT sem_ccus
			USE
		ENDIF
		SELECT ccusto
		USE
	ELSE
		DO winalert WITH "AVISO",  ;
			"O RELATÓRIO NÃO FOI GERADO. ESCOLHA UM FILTRO."
	ENDIF
	RETURN
	*--


*       *********************************************************
*       *                                                         
*       * _2VO0YOHV1           fors VALID                         
*       *                                                         
*       * Function Origin:                                        
*       *                                                         
*       * From Platform:       Windows                            
*       * From Screen:         CONTAS,     Record Number:   17    
*       * Variable:            fors                               
*       * Called By:           VALID Clause                       
*       * Object Type:         Popup                              
*       * Snippet Number:      1                                  
*       *                                                         
*       *********************************************************
*
FUNCTION _2VO0YOHV1     &&  fors VALID
#REGION 1
IF !ISBLANK(list_for(fors,3))
 ccus = ASCAN(rec_ccu, ALLTRIM(list_for(fors,3)))
ENDIF
SHOW GETS
*--

*       *********************************************************
*       *                                                         
*       * _2VO0YOHV4           ccus VALID                         
*       *                                                         
*       * Function Origin:                                        
*       *                                                         
*       * From Platform:       Windows                            
*       * From Screen:         CONTAS,     Record Number:   25    
*       * Variable:            ccus                               
*       * Called By:           VALID Clause                       
*       * Object Type:         Popup                              
*       * Snippet Number:      2                                  
*       *                                                         
*       *********************************************************
*
FUNCTION _2VO0YOHV4     &&  ccus VALID
#REGION 1
IF SUBSTR(list_ccu(ccus,1), 3, 1) = " "
 ccus = ccus + 1
 SHOW GETS
ENDIF
IF SUBSTR(list_ccu(ccus,1), 1, 2) = "06"
 SHOW GET bt_parc, 1 ENABLE
 SHOW GET ex_parc, 1 ENABLE
ELSE
 SHOW GET bt_parc, 1 DISABLE
 SHOW GET ex_parc, 1 DISABLE
ENDIF
SHOW GETS
*--

*       *********************************************************
*       *                                                         
*       * _2VO0YOHV6           wnparc VALID                       
*       *                                                         
*       * Function Origin:                                        
*       *                                                         
*       * From Platform:       Windows                            
*       * From Screen:         CONTAS,     Record Number:   29    
*       * Variable:            wnparc                             
*       * Called By:           VALID Clause                       
*       * Object Type:         Field                              
*       * Snippet Number:      3                                  
*       *                                                         
*       *********************************************************
*
FUNCTION _2VO0YOHV6     &&  wnparc VALID
#REGION 1
IF wnparc < 1
 wnparc = 1
 SHOW GETS
ENDIF
*--

*       *********************************************************
*       *                                                         
*       * _2VO0YOHV7           wmodulo VALID                      
*       *                                                         
*       * Function Origin:                                        
*       *                                                         
*       * From Platform:       Windows                            
*       * From Screen:         CONTAS,     Record Number:   31    
*       * Variable:            wmodulo                            
*       * Called By:           VALID Clause                       
*       * Object Type:         Field                              
*       * Snippet Number:      4                                  
*       *                                                         
*       *********************************************************
*
FUNCTION _2VO0YOHV7     &&  wmodulo VALID
#REGION 1
IF wmodulo < 0
 wmodulo = 0
 SHOW GETS
ENDIF
*--

*       *********************************************************
*       *                                                         
*       * _2VO0YOHV9           adi VALID                          
*       *                                                         
*       * Function Origin:                                        
*       *                                                         
*       * From Platform:       Windows                            
*       * From Screen:         CONTAS,     Record Number:   34    
*       * Variable:            adi                                
*       * Called By:           VALID Clause                       
*       * Object Type:         Push Button                        
*       * Snippet Number:      5                                  
*       *                                                         
*       *********************************************************
*
FUNCTION _2VO0YOHV9     &&  adi VALID
#REGION 1
access = veracess(wcoduser,17,"INC")
IF access
 IF vencs > 1
  IF wvalor <> 0.00  .AND. vencs <> 0
   DO ad_conta.spr
  ELSE
   DO winconf WITH "ATENÇÃO", "Faltam dados para o Cadastro!"
  ENDIF
 ELSE
  IF lrateio
   DO cont_rat.spr
  ELSE
   DO ad_unica
  ENDIF
 ENDIF
 DO filtra
 SHOW GETS
ENDIF
*--

*       *********************************************************
*       *                                                         
*       * _2VO0YOHVC           filt_area VALID                    
*       *                                                         
*       * Function Origin:                                        
*       *                                                         
*       * From Platform:       Windows                            
*       * From Screen:         CONTAS,     Record Number:   39    
*       * Variable:            filt_area                          
*       * Called By:           VALID Clause                       
*       * Object Type:         Check Box                          
*       * Snippet Number:      6                                  
*       *                                                         
*       *********************************************************
*
FUNCTION _2VO0YOHVC     &&  filt_area VALID
#REGION 1
IF filt_mod
 IF !filt_area
  filt_mod = .F.
 ENDIF
ENDIF
SHOW GETS
*--

*       *********************************************************
*       *                                                         
*       * _2VO0YOHVE           filt_suba VALID                    
*       *                                                         
*       * Function Origin:                                        
*       *                                                         
*       * From Platform:       Windows                            
*       * From Screen:         CONTAS,     Record Number:   40    
*       * Variable:            filt_suba                          
*       * Called By:           VALID Clause                       
*       * Object Type:         Check Box                          
*       * Snippet Number:      7                                  
*       *                                                         
*       *********************************************************
*
FUNCTION _2VO0YOHVE     &&  filt_suba VALID
#REGION 1
IF filt_mod
 IF !filt_suba
  filt_mod = .F.
 ENDIF
ENDIF
SHOW GETS
*--

*       *********************************************************
*       *                                                         
*       * _2VO0YOHVG           filt_mod VALID                     
*       *                                                         
*       * Function Origin:                                        
*       *                                                         
*       * From Platform:       Windows                            
*       * From Screen:         CONTAS,     Record Number:   41    
*       * Variable:            filt_mod                           
*       * Called By:           VALID Clause                       
*       * Object Type:         Check Box                          
*       * Snippet Number:      8                                  
*       *                                                         
*       *********************************************************
*
FUNCTION _2VO0YOHVG     &&  filt_mod VALID
#REGION 1
IF filt_mod
 IF !filt_area .OR. !filt_suba
  filt_mod = .F.
 ENDIF
ENDIF
SHOW GETS
*--

*       *********************************************************
*       *                                                         
*       * _2VO0YOHVJ           di VALID                           
*       *                                                         
*       * Function Origin:                                        
*       *                                                         
*       * From Platform:       Windows                            
*       * From Screen:         CONTAS,     Record Number:   50    
*       * Variable:            di                                 
*       * Called By:           VALID Clause                       
*       * Object Type:         Field                              
*       * Snippet Number:      9                                  
*       *                                                         
*       *********************************************************
*
FUNCTION _2VO0YOHVJ     &&  di VALID
#REGION 1
df = di
SHOW GETS
*--

*       *********************************************************
*       *                                                         
*       * _2VO0YOHVK           fil VALID                          
*       *                                                         
*       * Function Origin:                                        
*       *                                                         
*       * From Platform:       Windows                            
*       * From Screen:         CONTAS,     Record Number:   52    
*       * Variable:            fil                                
*       * Called By:           VALID Clause                       
*       * Object Type:         Push Button                        
*       * Snippet Number:      10                                 
*       *                                                         
*       *********************************************************
*
FUNCTION _2VO0YOHVK     &&  fil VALID
#REGION 1
DO filtra
SHOW GETS
*--

*       *********************************************************
*       *                                                         
*       * _2VO0YOHVM           list VALID                         
*       *                                                         
*       * Function Origin:                                        
*       *                                                         
*       * From Platform:       Windows                            
*       * From Screen:         CONTAS,     Record Number:   53    
*       * Variable:            list                               
*       * Called By:           VALID Clause                       
*       * Object Type:         List                               
*       * Snippet Number:      11                                 
*       *                                                         
*       *********************************************************
*
FUNCTION _2VO0YOHVM     &&  list VALID
#REGION 1
access = veracess(wcoduser,17,"ALT")
IF access
 SELECT contas
 SEEK list_cont(list,2)
 DO Quita_co.SPR
 DO filtra
 SHOW GETS
ENDIF
*--

*       *********************************************************
*       *                                                         
*       * _2VO0YOHVN           menu1 VALID                        
*       *                                                         
*       * Function Origin:                                        
*       *                                                         
*       * From Platform:       Windows                            
*       * From Screen:         CONTAS,     Record Number:   54    
*       * Variable:            menu1                              
*       * Called By:           VALID Clause                       
*       * Object Type:         Push Button                        
*       * Snippet Number:      12                                 
*       *                                                         
*       *********************************************************
*
FUNCTION _2VO0YOHVN     &&  menu1 VALID
#REGION 1
DO CASE
CASE menu1 = 1
	ACCESS = veracess(wcoduser,17,"IMP")
	IF ACCESS
		wcopia = .F.
		DO rel_contas
	ENDIF
CASE menu1 = 2
	ACCESS = veracess(wcoduser,17,"IMP")
	IF ACCESS
		DO imp_cont.spr
	ENDIF
CASE menu1 = 3
	ACCESS = veracess(wcoduser,17,"IMP")
	IF ACCESS
		DO rel_paga.spr
	ENDIF
CASE menu1 = 4
	IF !lfunc
		ACCESS = veracess(wcoduser,11,"CON")
		IF ACCESS
			DO cad_for.spr
			DO ced_list
			DO filtra
		ENDIF
	ELSE
		ACCESS = veracess(wcoduser,7,"CON")
		IF ACCESS
			DO ced_list
			DO filtra
		ENDIF
	ENDIF
CASE menu1 = 5
	ACCESS = veracess(wcoduser,17,"IMP")
	IF ACCESS
		DO expcontab
	ENDIF
CASE menu1 = 6
	ON KEY LABEL f4
	ON KEY LABEL f5
	CLEAR READ
ENDCASE
SHOW GETS
*--


*       *********************************************************
*       *                                                         
*       * _2VO0YOHVQ           lvisual VALID                      
*       *                                                         
*       * Function Origin:                                        
*       *                                                         
*       * From Platform:       Windows                            
*       * From Screen:         CONTAS,     Record Number:   57    
*       * Variable:            lvisual                            
*       * Called By:           VALID Clause                       
*       * Object Type:         Check Box                          
*       * Snippet Number:      13                                 
*       *                                                         
*       *********************************************************
*
FUNCTION _2VO0YOHVQ     &&  lvisual VALID
#REGION 1
IF lvisual
 cvisual = "PREVIEW"
ELSE
 cvisual = "PROMPT NOCONSOLE"
ENDIF
*--

*       *********************************************************
*       *                                                         
*       * _2VO0YOHVU           bt_ced VALID                       
*       *                                                         
*       * Function Origin:                                        
*       *                                                         
*       * From Platform:       Windows                            
*       * From Screen:         CONTAS,     Record Number:   59    
*       * Variable:            bt_ced                             
*       * Called By:           VALID Clause                       
*       * Object Type:         Push Button                        
*       * Snippet Number:      14                                 
*       *                                                         
*       *********************************************************
*
FUNCTION _2VO0YOHVU     &&  bt_ced VALID
#REGION 1
DO CASE
 CASE wtipo_ced = 1
  wtipo_ced = 2
  SHOW GET bt_ced, 1 PROMPT "FU"
 CASE wtipo_ced = 2
  wtipo_ced = 3
  SHOW GET bt_ced, 1 PROMPT "PR"
 CASE wtipo_ced = 3
  wtipo_ced = 1
  SHOW GET bt_ced, 1 PROMPT "FO"
ENDCASE
DO ced_list
SHOW GETS
*--

*       *********************************************************
*       *                                                         
*       * _2VO0YOHVW           Read Level When                    
*       *                                                         
*       * Function Origin:                                        
*       *                                                         
*       *                                                         
*       * From Platform:       Windows                            
*       * From Screen:         CONTAS                             
*       * Called By:           READ Statement                     
*       * Snippet Number:      15                                 
*       *                                                         
*       *********************************************************
*
FUNCTION _2VO0YOHVW     && Read Level When
*
* When Code from screen: CONTAS
*
#REGION 1
SHOW GET bt_parc, 1 DISABLE
SHOW GET ex_parc, 1 DISABLE
wsit = "Geral"
DO for_list
DO filtra
DO aj_vcto
DO atua_situa
DO ced_list
SHOW GETS
*--

*       *********************************************************
*       *                                                         
*       * _2VO0YOHVX           Read Level Show                    
*       *                                                         
*       * Function Origin:                                        
*       *                                                         
*       *                                                         
*       * From Platform:       Windows                            
*       * From Screen:         CONTAS                             
*       * Called By:           READ Statement                     
*       * Snippet Number:      16                                 
*       *                                                         
*       *********************************************************
*
FUNCTION _2VO0YOHVX     && Read Level Show
PRIVATE currwind
STORE WOUTPUT() TO currwind
*
* Show Code from screen: CONTAS
*
#REGION 1
* PRIVATE currwind
* STORE WOUTPUT() TO currwind
* IF SYS(2016) = "_2VO0YOHUM" .OR. SYS(2016) = "*"
*  ACTIVATE WINDOW SAME _2vo0yohum
*  @  45.923 , 163.600  SAY totabe FONT "Arial", 8 SIZE 1.000 ,  ;
*   25.600 , 0.000  PICTURE "999,999,999,999.99" COLOR RGB(255, ;
*   255,255,0,128,128)
* ENDIF
* IF !EMPTY(currwind)
*  ACTIVATE WINDOW SAME (currwind)
* ENDIF
*--
IF SYS(2016) = "_2VO0YOHUM" OR SYS(2016) = "*"
	ACTIVATE WINDOW _2vo0yohum SAME
	@ 45.923,163.600 SAY totabe ;
		SIZE 1.000,25.600, 0.000 ;
		FONT "Arial", 8 ;
		PICTURE "999,999,999,999.99" ;
		COLOR RGB(255,255,255,0,128,128)
ENDIF
IF NOT EMPTY(currwind)
	ACTIVATE WINDOW (currwind) SAME
ENDIF