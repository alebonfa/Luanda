*       *********************************************************
*       *                                                         
*       * 22/05/2013           LOGISTIC.SPR              08:43:42 
*       *                                                         
*       *********************************************************
*       *                                                         
*       * Author's Name                                           
*       *                                                         
*       * Copyright (c) 2013 Company Name                         
*       * Address                                                 
*       * City,     Zip                                           
*       *                                                         
*       * Description:                                            
*       * This program was automatically generated by GENSCRN.    
*       *                                                         
*       *********************************************************


#REGION 0
REGIONAL m.currarea, m.talkstat, m.compstat

IF SET("TALK") = "ON"
	SET TALK OFF
	m.talkstat = "ON"
ELSE
	m.talkstat = "OFF"
ENDIF
m.compstat = SET("COMPATIBLE")
SET COMPATIBLE FOXPLUS

m.rborder = SET("READBORDER")
SET READBORDER ON

*       *********************************************************
*       *                                                         
*       *               Windows Window definitions                
*       *                                                         
*       *********************************************************
*

IF NOT WEXIST("_2w50n7580") ;
	OR UPPER(WTITLE("_2W50N7580")) == "_2W50N7580.PJX" ;
	OR UPPER(WTITLE("_2W50N7580")) == "_2W50N7580.SCX" ;
	OR UPPER(WTITLE("_2W50N7580")) == "_2W50N7580.MNX" ;
	OR UPPER(WTITLE("_2W50N7580")) == "_2W50N7580.PRG" ;
	OR UPPER(WTITLE("_2W50N7580")) == "_2W50N7580.FRX" ;
	OR UPPER(WTITLE("_2W50N7580")) == "_2W50N7580.QPR"
	DEFINE WINDOW _2w50n7580 ;
		AT  0.000, 0.000  ;
		SIZE 51.538,198.000 ;
		TITLE "Logística" ;
		FONT "MS Sans Serif", 8 ;
		FLOAT ;
		NOCLOSE ;
		NOMINIMIZE ;
		SYSTEM ;
		COLOR RGB(,,,255,255,255)
	MOVE WINDOW _2w50n7580 CENTER
ENDIF


*       *********************************************************
*       *                                                         
*       *         LOGISTIC/Windows Setup Code - SECTION 2         
*       *                                                         
*       *********************************************************
*

#REGION 1
DIMENSION list_cart[ 1]
SELECT cartao.descricao, cartao.id FROM Cartao ORDER BY  ;
	cartao.descricao INTO ARRAY lst_cart
DIMENSION rec_cart[ 1]
SELECT cartao.id FROM Cartao ORDER BY cartao.descricao INTO  ;
	ARRAY rec_cart
bforn = 0
DIMENSION list_env[ 1]
DIMENSION reg_env[ 1]
envs = 1
wtipo_env = 2
DIMENSION list_ret[ 1]
DIMENSION reg_ret[ 1]
rets = 1
wtipo_ret = 2
DO env_list
DO ret_list
aux = ""
STORE "" TO wlocal, wlocal_end, wlocal_ref, wlocal_for
STORE 0 TO wlocal_id
STORE 0.00  TO wlocal_alu
STORE DATE() TO wlocal_dat
STORE "" TO wcoord, wc_end, wc_ban, wprof, wp_end, wp_ban
STORE 0.00  TO wc_valor, wc_adiant, wc_aerea, wp_valor,  ;
	wp_adiant, wp_aerea
STORE 0.00  TO wc_hot, wp_hot
STORE "" TO wc_hosp, wp_hosp
STORE 0.00  TO wp1_val, wp1_adia, wp1_aere, wp1_hot
STORE 0.00  TO wp2_val, wp2_adia, wp2_aere, wp2_hot
STORE 0.00  TO wp3_val, wp3_adia, wp3_aere, wp3_hot
STORE "" TO wp1_hosp, wp2_hosp, wp3_hosp
STORE "" TO wc_hotel, wp_hotel
STORE 0 TO wc_hid, wp_hid
STORE .F. TO wc_lcart, wp_lcart
STORE 1 TO wc_cart, wp_cart
STORE {} TO wc_padata, wp_padata
STORE 0 TO wp1_hid, wp2_hid, wp3_hid
STORE .F. TO wp1_lcart, wp2_lcart, wp3_lcart
STORE 1 TO wp1_cart, wp2_cart, wp3_cart
STORE {} TO wp1_padata, wp2_padata, wp3_padata
STORE .F. TO lequip_ds, lequip_nb, lequip_cpu, lequip_rp
STORE "" TO eds_ref, enb_ref, ecpu_ref, erp_ref
STORE "" TO eds_forn, enb_forn, ecpu_forn, erp_forn
STORE 0 TO eds_fid, enb_fid, ecpu_fid, erp_fid
STORE 0.00  TO eds_valor, enb_valor, ecpu_valor, erp_valor
STORE "" TO eds_forma, enb_forma, ecpu_forma, erp_forma
STORE DATE() TO pastae_dat
STORE "" TO pastae_sem, pastae_tra
pastae_sem = dia_semana(pastae_dat)
STORE DATE() TO pastar_dat
STORE "" TO pasta_end, pastar_sem, pastar_tra
pastar_sem = dia_semana(pastar_dat)
STORE .F. TO lpratica
STORE "" TO mat_prat, wobs
DIMENSION lst_prod[ 1]
lst_prod[ 1] = "Nenhum produto relacionado..."
prods = 1
nalu = 0
aux_area = mp.area
aux_suba = mp.subarea
SELECT COUNT(clicurso.primario) AS quant FROM Clicurso WHERE  ;
	clicurso.codarea = aux_area AND clicurso.codsub =  ;
	aux_suba AND ALLTRIM(clicurso.situacao) $  ;
	"CONCLUIDO-ATIVO-BOLSISTA" INTO CURSOR Totalu
SELECT totalu
GOTO TOP
nalu = totalu.quant
SELECT area
SEEK mp.area
SELECT subarea
SEEK mp.subarea
aux_cab = mc.primario
SELECT mod_disc.id_prof FROM Mod_disc WHERE mod_disc.modulo ==  ;
	aux_cab GROUP BY mod_disc.id_prof INTO CURSOR M_profs
prof_atual = 1
prof_quant = 0
SELECT m_profs
COUNT TO prof_quant
nprof = STR(prof_atual, 1) + "/" + STR(prof_quant, 1)
GOTO TOP
SELECT lm
SEEK mc.primario
IF FOUND()
	DO cons_log
	inc_log = .F.
ELSE
	puxar_dado = .F.
	IF mc.numero > 1
		SELECT mod_cab
		LOCATE FOR mod_cab.curso_id == mc.curso_id .AND.  ;
			mod_cab.numero == mc.numero - 1
		IF FOUND()
			SELECT lm
			SEEK mod_cab.primario
			IF FOUND()
				puxar_dado = .T.
			ENDIF
		ENDIF
	ENDIF
	IF puxar_dado
		SELECT fornecod
		SEEK lm.local_id
		wlocal_id = fornecod.codigo
		wlocal = fornecod.nome
		wlocal_end = ALLTRIM(fornecod.end) + " - " +  ;
			ALLTRIM(fornecod.bairro) + " - " +  ;
			ALLTRIM(fornecod.cidade) + " - " +  ;
			ALLTRIM(fornecod.uf)
		wlocal_ref = fornecod.referencia
		wlocal_alu = lm.local_val
		wlocal_for = lm.local_form
		wc_valor = lm.coord_val
		lequip_ds = lm.ds
		eds_ref = lm.ds_ref
		eds_valor = lm.ds_valor
		eds_forma = lm.ds_forma
		lequip_nb = lm.nb
		enb_ref = lm.nb_ref
		enb_valor = lm.nb_valor
		enb_forma = lm.nb_forma
		lequip_cpu = lm.cpu
		ecpu_ref = lm.cpu_ref
		ecpu_valor = lm.cpu_valor
		ecpu_forma = lm.cpu_forma
		lequip_rp = lm.rp
		erp_ref = lm.rp_ref
		erp_valor = lm.rp_valor
		erp_forma = lm.rp_forma
	ELSE
		STORE "" TO wlocal, wlocal_end, wlocal_ref, wlocal_for
		STORE 0 TO wlocal_id
		STORE 0.00  TO wlocal_alu
	ENDIF
	STORE DATE() TO wlocal_dat
	SELECT funcs
	SEEK mp.coord_id
	wcoord = funcs.nome
	wc_end = ALLTRIM(funcs.cidade) + " - " + funcs.uf
	wc_ban = funcs.bancario
	SELECT prof
	SEEK m_profs.id_prof
	wprof = prof.nome
	wp_end = ALLTRIM(prof.cidade) + " - " + prof.uf
	wp_ban = prof.bancario
	wp_valor = prof.honor1
	wp1_val = prof.honor1
	wp_adiant = prof.honor2
	wp1_adia = prof.honor2
	inc_log = .T.
	DO carreg_dis
ENDIF
* IF WVISIBLE("_2w50n7580")
*  ACTIVATE WINDOW SAME _2w50n7580
* ELSE
*  ACTIVATE WINDOW NOSHOW _2w50n7580
* ENDIF
* #ENDIF  && generated code
*--


*       *********************************************************
*       *                                                         
*       *             LOGISTIC/Windows Screen Layout              
*       *                                                         
*       *********************************************************
*

#REGION 1
IF WVISIBLE("_2w50n7580")
	ACTIVATE WINDOW _2w50n7580 SAME
ELSE
	ACTIVATE WINDOW _2w50n7580 NOSHOW
ENDIF
@ 4.692,3.200 SAY "Turma" ;
	FONT "Arial", 8 ;
	STYLE "BT" ;
	COLOR RGB(128,128,128,,,,)
@ 4.692,139.800 SAY "Módulo" ;
	FONT "Arial", 8 ;
	STYLE "T" ;
	COLOR RGB(128,128,128,,,,)
@ 13.923,3.200 SAY "Coordenador" ;
	FONT "Arial", 8 ;
	STYLE "T" ;
	COLOR RGB(128,128,128,,,,)
@ 12.385,60.000 SAY "Onde Mora" ;
	FONT "Arial", 8 ;
	STYLE "T" ;
	COLOR RGB(128,128,128,,,,)
@ 12.385,96.000 SAY "Banco" ;
	FONT "Arial", 8 ;
	STYLE "T" ;
	COLOR RGB(128,128,128,,,,)
@ 12.385,132.000 SAY "Valores" ;
	FONT "Arial", 8 ;
	STYLE "T" ;
	COLOR RGB(128,128,128,,,,)
@ 12.385,151.200 SAY "Passagem Aérea" ;
	FONT "Arial", 8 ;
	STYLE "T" ;
	COLOR RGB(128,128,128,,,,)
@ 21.000,3.200 SAY "Professor" ;
	FONT "Arial", 8 ;
	STYLE "T" ;
	COLOR RGB(128,128,128,,,,)
@ 7.462,3.200 SAY "Local" ;
	FONT "Arial", 8 ;
	STYLE "BT" ;
	COLOR RGB(128,128,128,,,,)
@ 7.462,60.000 SAY "Endereço" ;
	FONT "Arial", 8 ;
	STYLE "T" ;
	COLOR RGB(128,128,128,,,,)
@ 7.462,96.000 SAY "Referência" ;
	FONT "Arial", 8 ;
	STYLE "T" ;
	COLOR RGB(128,128,128,,,,)
@ 7.462,132.000 SAY "Aluguel" ;
	FONT "Arial", 8 ;
	STYLE "T" ;
	COLOR RGB(128,128,128,,,,)
@ 28.692,118.800 SAY "Referência" ;
	FONT "Arial", 8 ;
	STYLE "T" ;
	COLOR RGB(128,128,128,,,,)
@ 28.692,145.200 SAY "Valor" ;
	FONT "Arial", 8 ;
	STYLE "T" ;
	COLOR RGB(128,128,128,,,,)
@ 28.692,172.400 SAY "Forma de Pagto" ;
	FONT "Arial", 8 ;
	STYLE "T" ;
	COLOR RGB(128,128,128,,,,)
@ 39.769,3.200 SAY "Controle das Pastas" ;
	FONT "Arial", 8 ;
	STYLE "BT" ;
	COLOR RGB(128,128,128,,,,)
@ 39.769,67.200 SAY "Data" ;
	FONT "Arial", 8 ;
	STYLE "T" ;
	COLOR RGB(128,128,128,,,,)
@ 44.385,3.200 SAY "Devolução" ;
	FONT "Arial", 8 ;
	STYLE "T" ;
	COLOR RGB(128,128,128,,,,)
@ 39.769,108.000 SAY "Transporte" ;
	FONT "Arial", 8 ;
	STYLE "T" ;
	COLOR RGB(128,128,128,,,,)
@ 48.000,0.000 TO 48.000,197.600 ;
	PEN 1, 8 ;
	STYLE "1" ;
	COLOR RGB(0,128,128,0,128,128)
@ 4.692,178.600 SAY "Alunos" ;
	FONT "Arial", 8 ;
	STYLE "T" ;
	COLOR RGB(128,128,128,,,,)
@ 39.769,148.800 SAY "Endereço" ;
	FONT "Arial", 8 ;
	STYLE "T" ;
	COLOR RGB(128,128,128,,,,)
@ 41.923,3.200 SAY "Envio" ;
	FONT "Arial", 8 ;
	STYLE "T" ;
	COLOR RGB(128,128,128,,,,)
@ 28.692,3.200 SAY "Equipamentos" ;
	FONT "Arial", 8 ;
	STYLE "B" ;
	COLOR RGB(128,128,128,,,,)
@ 28.692,24.000 SAY "Fornecedor" ;
	FONT "Arial", 8 ;
	STYLE "T" ;
	COLOR RGB(128,128,128,,,,)
@ 39.077,0.000 TO 39.077,197.800 ;
	PEN 1, 8 ;
	STYLE "1" ;
	COLOR RGB(0,128,128,0,128,128)
@ 27.385,0.000 TO 27.385,198.000 ;
	PEN 1, 8 ;
	STYLE "1" ;
	COLOR RGB(0,128,128,0,128,128)
@ 11.385,0.000 TO 11.385,198.000 ;
	PEN 1, 8 ;
	STYLE "1" ;
	COLOR RGB(0,128,128,0,128,128)
@ 12.077,3.200 SAY "Recursos Humanos" ;
	FONT "Arial", 8 ;
	STYLE "B" ;
	COLOR RGB(128,128,128,,,,)
@ 0.000,0.000 TO 3.769,198.000 ;
	PATTERN 1 ;
	PEN 1, 8 ;
	COLOR RGB(0,128,128,0,128,128)
@ 1.077,174.400 SAY "LOGÍSTICA" ;
	FONT "Arial", 14 ;
	STYLE "T" ;
	COLOR RGB(255,255,255,,,,)
@ 9.000,3.200 SAY "Descrição" ;
	FONT "Arial", 8 ;
	STYLE "T" ;
	COLOR RGB(128,128,128,,,,)
@ 6.769,0.000 TO 6.769,198.000 ;
	PEN 1, 8 ;
	STYLE "1" ;
	COLOR RGB(0,128,128,0,128,128)
@ 4.615,24.000 TO 5.846,128.400 ;
	PEN 1, 8 ;
	COLOR RGB(0,128,128,,,,)
@ 4.615,149.800 TO 5.846,164.200 ;
	PEN 1, 8 ;
	COLOR RGB(0,128,128,,,,)
@ 4.615,188.200 TO 5.846,195.400 ;
	PEN 1, 8 ;
	COLOR RGB(0,128,128,,,,)
@ 14.154,24.000 TO 17.539,56.200 ;
	PEN 1, 8 ;
	COLOR RGB(0,128,128,,,,)
@ 14.154,60.000 TO 17.539,92.200 ;
	PEN 1, 8 ;
	COLOR RGB(0,128,128,,,,)
@ 14.154,96.000 TO 17.539,128.200 ;
	PEN 1, 8 ;
	COLOR RGB(0,128,128,,,,)
@ 20.923,24.000 TO 24.308,56.200 ;
	PEN 1, 8 ;
	COLOR RGB(0,128,128,,,,)
@ 20.923,60.000 TO 24.308,92.200 ;
	PEN 1, 8 ;
	COLOR RGB(0,128,128,,,,)
@ 20.923,96.000 TO 24.308,128.200 ;
	PEN 1, 8 ;
	COLOR RGB(0,128,128,,,,)
@ 18.462,24.000 TO 19.693,65.000 ;
	PEN 1, 8 ;
	COLOR RGB(0,128,128,,,,)
@ 25.231,24.000 TO 26.462,65.000 ;
	PEN 1, 8 ;
	COLOR RGB(0,0,0,,,,)
@ 30.462,24.000 TO 31.693,105.000 ;
	PEN 1, 8 ;
	COLOR RGB(0,128,128,,,,)
@ 32.615,24.000 TO 33.846,105.000 ;
	PEN 1, 8 ;
	COLOR RGB(0,128,128,,,,)
@ 34.769,24.000 TO 36.000,105.000 ;
	PEN 1, 8 ;
	COLOR RGB(0,128,128,,,,)
@ 36.923,24.000 TO 38.154,105.000 ;
	PEN 1, 8 ;
	COLOR RGB(0,128,128,,,,)
@ 9.231,24.000 TO 10.462,50.600 ;
	PEN 1, 8 ;
	COLOR RGB(0,128,128,,,,)
@ 41.846,83.200 TO 43.077,100.000 ;
	PEN 1, 8 ;
	COLOR RGB(0,128,128,,,,)
@ 44.308,83.200 TO 45.539,100.000 ;
	PEN 1, 8 ;
	COLOR RGB(0,128,128,,,,)
@ 4.692,24.400 SAY subarea.sigla + " " + area.descricao + " (" + ALLTRIM(STR(mc.primario, 10)) + ")" ;
	SIZE 1.000,103.400 ;
	FONT "Arial", 8 ;
	COLOR RGB(0,0,0,255,255,255)
@ 4.692,150.200 SAY mc.numero ;
	SIZE 1.000,13.400 ;
	FONT "Arial", 8 ;
	COLOR RGB(0,0,0,255,255,255)
@ 4.692,188.600 SAY nalu ;
	SIZE 1.000,6.200 ;
	FONT "Arial", 8 ;
	COLOR RGB(0,0,0,255,255,255)
@ 9.308,24.400 SAY wlocal ;
	SIZE 1.000,25.600 ;
	FONT "Arial", 8 ;
	COLOR RGB(0,0,0,255,255,255)
@ 9.231,52.400 GET bt_forn ;
	PICTURE "@*HN ..." ;
	SIZE 1.143,3.800,0.800 ;
	DEFAULT 1 ;
	FONT "Arial", 8 ;
	VALID _2W50N7588()
@ 9.308,60.400 GET wlocal_end ;
	SIZE 1.000,31.200 ;
	DEFAULT " " ;
	FONT "Arial", 8 ;
	WHEN _2W50N758P() ;
	VALID _2W50N758Q() ;
	COLOR ,RGB(,,,255,255,255)
@ 9.308,96.600 GET wlocal_ref ;
	SIZE 1.000,31.200 ;
	DEFAULT " " ;
	FONT "Arial", 8 ;
	WHEN _2W50N758S() ;
	VALID _2W50N758T() ;
	COLOR ,RGB(,,,255,255,255)
@ 9.308,132.400 GET wlocal_alu ;
	SIZE 1.000,13.600 ;
	DEFAULT 0 ;
	FONT "Arial", 8 ;
	PICTURE "@K" ;
	COLOR ,RGB(,,,255,255,255)
@ 9.308,150.000 GET wlocal_dat ;
	SIZE 1.000,13.600 ;
	DEFAULT 0 ;
	FONT "Arial", 8 ;
	COLOR ,RGB(,,,255,255,255)
@ 9.308,167.600 GET wlocal_for ;
	SIZE 1.000,27.200 ;
	DEFAULT 0 ;
	FONT "Arial", 8 ;
	PICTURE "@K" ;
	COLOR ,RGB(,,,255,255,255)
@ 14.231,24.400 SAY wcoord ;
	SIZE 3.000,31.200 ;
	FONT "Arial", 8 ;
	COLOR RGB(0,0,0,255,255,255)
@ 14.231,60.400 SAY wc_end ;
	SIZE 3.000,31.200 ;
	FONT "Arial", 8 ;
	COLOR RGB(0,0,0,255,255,255)
@ 14.231,96.400 GET wc_ban ;
	SIZE 3.000,31.200 ;
	DEFAULT " " ;
	FONT "Arial", 8 ;
	COLOR ,RGB(0,0,0,255,255,255)
@ 14.231,132.400 GET wc_valor ;
	SIZE 1.000,13.600 ;
	DEFAULT " " ;
	FONT "Arial", 8 ;
	COLOR ,RGB(,,,255,255,255)
@ 14.154,163.200 GET wc_cart ;
	PICTURE "@^" ;
	FROM lst_cart ;
	SIZE 1.500,32.200 ;
	DEFAULT 1 ;
	FONT "Arial", 8
@ 14.231,151.200 GET wc_lcart ;
	PICTURE "@*C Cartão" ;
	SIZE 1.214,11.000 ;
	DEFAULT 0 ;
	FONT "Arial", 8 ;
	STYLE "T"
@ 16.385,132.400 GET wc_adiant ;
	SIZE 1.000,13.600 ;
	DEFAULT " " ;
	FONT "Arial", 8 ;
	COLOR ,RGB(,,,255,255,255)
@ 16.385,181.200 GET wc_padata ;
	SIZE 1.000,13.600 ;
	DEFAULT 0 ;
	FONT "Arial", 8 ;
	COLOR ,RGB(,,,255,255,255)
@ 18.538,24.400 SAY wc_hotel ;
	SIZE 1.000,40.000 ;
	FONT "Arial", 8 ;
	COLOR RGB(0,0,0,255,255,255)
@ 18.462,66.000 GET bt_chot ;
	PICTURE "@*HN ..." ;
	SIZE 1.143,3.800,0.800 ;
	DEFAULT 1 ;
	FONT "Arial", 8 ;
	VALID _2W50N758W()
@ 18.538,72.400 GET wc_hosp ;
	SIZE 1.000,40.800 ;
	DEFAULT " " ;
	FONT "Arial", 8 ;
	COLOR ,RGB(,,,255,255,255)
@ 18.538,116.400 GET wc_hot ;
	SIZE 1.000,11.200 ;
	DEFAULT " " ;
	FONT "Arial", 8 ;
	COLOR ,RGB(,,,255,255,255)
@ 18.538,181.200 GET wc_aerea ;
	SIZE 1.000,13.600 ;
	DEFAULT " " ;
	FONT "Arial", 8 ;
	COLOR ,RGB(,,,255,255,255)
@ 21.000,24.400 SAY wprof ;
	SIZE 3.000,31.200 ;
	FONT "Arial", 8 ;
	COLOR RGB(0,0,0,255,255,255)
@ 21.000,60.400 GET wp_ban ;
	SIZE 3.000,31.200 ;
	DEFAULT " " ;
	FONT "Arial", 8 ;
	COLOR ,RGB(0,0,0,255,255,255)
@ 21.000,96.400 SAY wp_end ;
	SIZE 3.000,31.200 ;
	FONT "Arial", 8 ;
	COLOR RGB(0,0,0,255,255,255)
@ 21.000,132.400 GET wp_valor ;
	SIZE 1.000,13.600 ;
	DEFAULT " " ;
	FONT "Arial", 8 ;
	VALID _2W50N758Y() ;
	COLOR ,RGB(,,,255,255,255)
@ 20.923,163.200 GET wp_cart ;
	PICTURE "@^" ;
	FROM lst_cart ;
	SIZE 1.500,32.200 ;
	DEFAULT 1 ;
	FONT "Arial", 8 ;
	VALID _2W50N7592()
@ 21.000,151.200 GET wp_lcart ;
	PICTURE "@*C Cartão" ;
	SIZE 1.214,11.000 ;
	DEFAULT 0 ;
	FONT "Arial", 8 ;
	STYLE "T" ;
	VALID _2W50N7591()
@ 22.462,3.200 GET bt_prevpro ;
	PICTURE "@*HN <<" ;
	SIZE 1.143,4.200,0.800 ;
	DEFAULT 1 ;
	FONT "Arial", 8 ;
	VALID _2W50N75AD()
@ 22.538,9.200 SAY nprof ;
	SIZE 1.000,4.000 ;
	FONT "Arial", 8 ;
	COLOR RGB(,,,255,255,255)
@ 22.462,15.200 GET bt_nextpro ;
	PICTURE "@*HN >>" ;
	SIZE 1.143,4.200,0.800 ;
	DEFAULT 1 ;
	FONT "Arial", 8 ;
	VALID _2W50N75AA()
@ 23.154,132.400 GET wp_adiant ;
	SIZE 1.000,13.600 ;
	DEFAULT " " ;
	FONT "Arial", 8 ;
	VALID _2W50N758Z() ;
	COLOR ,RGB(,,,255,255,255)
@ 23.154,181.200 GET wp_padata ;
	SIZE 1.000,13.600 ;
	DEFAULT 0 ;
	FONT "Arial", 8 ;
	VALID _2W50N759J() ;
	COLOR ,RGB(,,,255,255,255)
@ 25.308,24.400 SAY wp_hotel ;
	SIZE 1.000,40.000 ;
	FONT "Arial", 8 ;
	COLOR RGB(0,128,128,255,255,255)
@ 25.231,66.000 GET bt_phot ;
	PICTURE "@*HN ..." ;
	SIZE 1.143,3.800,0.800 ;
	DEFAULT 1 ;
	FONT "Arial", 8 ;
	VALID _2W50N759M()
@ 25.308,73.200 GET wp_hosp ;
	SIZE 1.000,40.000 ;
	DEFAULT " " ;
	FONT "Arial", 8 ;
	VALID _2W50N759N() ;
	COLOR ,RGB(,,,255,255,255)
@ 25.308,116.400 GET wp_hot ;
	SIZE 1.000,11.200 ;
	DEFAULT " " ;
	FONT "Arial", 8 ;
	VALID _2W50N759P() ;
	COLOR ,RGB(,,,255,255,255)
@ 25.308,181.200 GET wp_aerea ;
	SIZE 1.000,13.600 ;
	DEFAULT " " ;
	FONT "Arial", 8 ;
	VALID _2W50N759K() ;
	COLOR ,RGB(,,,255,255,255)
@ 30.538,24.400 SAY eds_forn ;
	SIZE 1.000,80.000 ;
	FONT "Arial", 8 ;
	COLOR RGB(0,0,0,255,255,255)
@ 30.462,106.400 GET bt_ds ;
	PICTURE "@*HN ..." ;
	SIZE 1.143,3.800,0.800 ;
	DEFAULT 1 ;
	FONT "Arial", 8 ;
	VALID _2W50N759Q()
@ 30.538,119.200 GET eds_ref ;
	SIZE 1.000,22.000 ;
	DEFAULT " " ;
	FONT "Arial", 8 ;
	PICTURE "@K" ;
	COLOR ,RGB(,,,255,255,255)
@ 30.538,145.600 GET eds_valor ;
	SIZE 1.000,22.000 ;
	DEFAULT " " ;
	FONT "Arial", 8 ;
	PICTURE "@K" ;
	COLOR ,RGB(,,,255,255,255)
@ 30.538,172.800 GET eds_forma ;
	SIZE 1.000,22.000 ;
	DEFAULT " " ;
	FONT "Arial", 8 ;
	PICTURE "@K" ;
	COLOR ,RGB(,,,255,255,255)
@ 30.538,3.200 GET lequip_ds ;
	PICTURE "@*C Data Show" ;
	SIZE 1.214,15.400 ;
	DEFAULT 0 ;
	FONT "Arial", 8 ;
	STYLE "T" ;
	COLOR ,,,,,,,,RGB(128,128,128,,,,),RGB(128,128,128,,,,)
@ 32.692,24.400 SAY enb_forn ;
	SIZE 1.000,80.000 ;
	FONT "Arial", 8 ;
	COLOR RGB(0,0,0,255,255,255)
@ 32.615,106.400 GET bt_nb ;
	PICTURE "@*HN ..." ;
	SIZE 1.143,3.800,0.800 ;
	DEFAULT 1 ;
	FONT "Arial", 8 ;
	VALID _2W50N759S()
@ 32.692,119.200 GET enb_ref ;
	SIZE 1.000,22.000 ;
	DEFAULT " " ;
	FONT "Arial", 8 ;
	PICTURE "@K" ;
	COLOR ,RGB(,,,255,255,255)
@ 32.692,145.600 GET enb_valor ;
	SIZE 1.000,22.000 ;
	DEFAULT " " ;
	FONT "Arial", 8 ;
	PICTURE "@K" ;
	COLOR ,RGB(,,,255,255,255)
@ 32.692,172.800 GET enb_forma ;
	SIZE 1.000,22.000 ;
	DEFAULT " " ;
	FONT "Arial", 8 ;
	PICTURE "@K" ;
	COLOR ,RGB(,,,255,255,255)
@ 32.692,3.200 GET lequip_nb ;
	PICTURE "@*C Notebook" ;
	SIZE 1.214,13.600 ;
	DEFAULT 0 ;
	FONT "Arial", 8 ;
	STYLE "T" ;
	COLOR ,,,,,,,,RGB(128,128,128,,,,),RGB(128,128,128,,,,)
@ 34.846,24.400 SAY ecpu_forn ;
	SIZE 1.000,80.000 ;
	FONT "Arial", 8 ;
	COLOR RGB(0,0,0,255,255,255)
@ 34.769,106.400 GET bt_cpu ;
	PICTURE "@*HN ..." ;
	SIZE 1.143,3.800,0.800 ;
	DEFAULT 1 ;
	FONT "Arial", 8 ;
	VALID _2W50N759U()
@ 34.846,119.200 GET ecpu_ref ;
	SIZE 1.000,22.000 ;
	DEFAULT " " ;
	FONT "Arial", 8 ;
	PICTURE "@K" ;
	COLOR ,RGB(,,,255,255,255)
@ 34.846,145.600 GET ecpu_valor ;
	SIZE 1.000,22.000 ;
	DEFAULT " " ;
	FONT "Arial", 8 ;
	PICTURE "@K" ;
	COLOR ,RGB(,,,255,255,255)
@ 34.846,172.800 GET ecpu_forma ;
	SIZE 1.000,22.000 ;
	DEFAULT " " ;
	FONT "Arial", 8 ;
	PICTURE "@K" ;
	COLOR ,RGB(,,,255,255,255)
@ 34.846,3.200 GET lequip_cpu ;
	PICTURE "@*C Computador" ;
	SIZE 1.214,16.200 ;
	DEFAULT 0 ;
	FONT "Arial", 8 ;
	STYLE "T" ;
	COLOR ,,,,,,,,RGB(128,128,128,,,,),RGB(128,128,128,,,,)
@ 37.000,24.400 SAY erp_forn ;
	SIZE 1.000,80.000 ;
	FONT "Arial", 8 ;
	COLOR RGB(0,0,0,255,255,255)
@ 36.923,106.400 GET bt_rp ;
	PICTURE "@*HN ..." ;
	SIZE 1.143,3.800,0.800 ;
	DEFAULT 1 ;
	FONT "Arial", 8 ;
	VALID _2W50N759W()
@ 37.000,119.200 GET erp_ref ;
	SIZE 1.000,22.000 ;
	DEFAULT " " ;
	FONT "Arial", 8 ;
	PICTURE "@K" ;
	COLOR ,RGB(,,,255,255,255)
@ 37.000,145.600 GET erp_valor ;
	SIZE 1.000,22.000 ;
	DEFAULT " " ;
	FONT "Arial", 8 ;
	PICTURE "@K" ;
	COLOR ,RGB(,,,255,255,255)
@ 37.000,172.800 GET erp_forma ;
	SIZE 1.000,22.000 ;
	DEFAULT " " ;
	FONT "Arial", 8 ;
	PICTURE "@K" ;
	COLOR ,RGB(,,,255,255,255)
@ 37.000,3.200 GET lequip_rp ;
	PICTURE "@*C Retro Projetor" ;
	SIZE 1.214,17.800 ;
	DEFAULT 0 ;
	FONT "Arial", 8 ;
	STYLE "T" ;
	COLOR ,,,,,,,,RGB(128,128,128,,,,),RGB(128,128,128,,,,)
@ 40.077,160.400 GET pasta_end ;
	SIZE 5.000,34.400 ;
	DEFAULT " " ;
	FONT "Arial", 8 ;
	PICTURE "@K" ;
	COLOR ,RGB(,,,255,255,255)
@ 41.846,16.800 GET bt_env ;
	PICTURE "@*HN FO" ;
	SIZE 1.500,4.600,0.800 ;
	DEFAULT 1 ;
	FONT "Arial", 8 ;
	VALID _2W50N759Y()
@ 41.846,21.600 GET envs ;
	PICTURE "@^" ;
	FROM list_env ;
	SIZE 1.500,41.000 ;
	DEFAULT 1 ;
	FONT "Arial", 8 ;
	COLOR ,,,,,,,,RGB(0,0,0,,,,),RGB(0,0,0,,,,)
@ 41.923,67.600 GET pastae_dat ;
	SIZE 1.000,13.600 ;
	DEFAULT " " ;
	FONT "Arial", 8 ;
	VALID _2W50N75A0() ;
	COLOR ,RGB(,,,255,255,255)
@ 41.923,83.600 SAY pastae_sem ;
	SIZE 1.000,15.800 ;
	FONT "Arial", 8 ;
	COLOR RGB(0,0,0,255,255,255)
@ 41.923,108.400 GET pastae_tra ;
	SIZE 1.000,32.600 ;
	DEFAULT " " ;
	FONT "Arial", 8 ;
	PICTURE "@K" ;
	COLOR ,RGB(,,,255,255,255)
@ 44.308,16.800 GET bt_ret ;
	PICTURE "@*HN FO" ;
	SIZE 1.500,4.600,0.800 ;
	DEFAULT 1 ;
	FONT "Arial", 8 ;
	VALID _2W50N75A1()
@ 44.308,21.600 GET rets ;
	PICTURE "@^" ;
	FROM list_ret ;
	SIZE 1.500,41.000 ;
	DEFAULT 1 ;
	FONT "Arial", 8 ;
	VALID _2W50N75A3() ;
	COLOR ,,,,,,,,RGB(0,0,0,,,,),RGB(0,0,0,,,,)
@ 44.385,67.600 GET pastar_dat ;
	SIZE 1.000,13.600 ;
	DEFAULT " " ;
	FONT "Arial", 8 ;
	VALID _2W50N75A5() ;
	COLOR ,RGB(,,,255,255,255)
@ 44.385,83.600 SAY pastar_sem ;
	SIZE 1.000,15.800 ;
	FONT "Arial", 8 ;
	COLOR RGB(0,0,0,255,255,255)
@ 44.385,108.400 GET pastar_tra ;
	SIZE 1.000,32.600 ;
	DEFAULT " " ;
	FONT "Arial", 8 ;
	PICTURE "@K" ;
	COLOR ,RGB(,,,255,255,255)
@ 45.846,160.000 GET bt_cli ;
	PICTURE "@*HN Ctrl+C" ;
	SIZE 1.143,35.400,0.800 ;
	DEFAULT 1 ;
	FONT "Arial", 8 ;
	VALID _2W50N75AH()
@ 46.231,3.200 GET vis_impr ;
	PICTURE "@*C Visualiza" ;
	SIZE 1.214,13.400 ;
	DEFAULT 0 ;
	FONT "Arial", 8 ;
	STYLE "T" ;
	COLOR ,,,,,,,,RGB(128,128,128,,,,),RGB(128,128,128,,,,)
@ 48.923,2.400 GET bt_log ;
	PICTURE "@*HN Gravar;Imprimir;Excluir;Contas a Pagar...;Aula Prática;Sair" ;
	SIZE 1.714,32.200,0.000 ;
	DEFAULT 1 ;
	FONT "Arial", 8 ;
	VALID _2W50N75A8()

IF NOT WVISIBLE("_2w50n7580")
	ACTIVATE WINDOW _2w50n7580
ENDIF

READ CYCLE MODAL ;
	WHEN _2W50N75AJ() ;
	SHOW _2W50N75AK()

RELEASE WINDOW _2w50n7580

#REGION 0

SET READBORDER &rborder

IF m.talkstat = "ON"
	SET TALK ON
ENDIF
IF m.compstat = "ON"
	SET COMPATIBLE ON
ENDIF



*       *********************************************************
*       *                                                         
*       *  LOGISTIC/Windows Supporting Procedures and Functions   
*       *                                                         
*       *********************************************************
*

#REGION 1
PROCEDURE grava_log
	IF inc_log
		ult_id = 0
		SELECT logistic
		GOTO BOTTOM
		ult_id = logistic.id
		APPEND BLANK
		REPLACE logistic.id WITH ult_id + 1
		REPLACE logistic.modulo_id WITH mc.primario
	ELSE
		SELECT logistic
		SEEK lm.id
	ENDIF
	SELECT logistic
	REPLACE logistic.local_id WITH wlocal_id
	REPLACE logistic.local_val WITH wlocal_alu
	REPLACE logistic.local_data WITH wlocal_dat
	REPLACE logistic.local_form WITH wlocal_for
	REPLACE logistic.coord_id WITH funcs.codigo
	REPLACE logistic.coord_val WITH wc_valor
	REPLACE logistic.coord_adia WITH wc_adiant
	REPLACE logistic.coord_aere WITH wc_aerea
	REPLACE logistic.coord_hot WITH wc_hot
	REPLACE logistic.coord_hosp WITH wc_hosp
	REPLACE logistic.coord_hid WITH wc_hid
	REPLACE logistic.coord_cc WITH wc_lcart
	REPLACE logistic.coord_ccid WITH lst_cart(wc_cart,2)
	REPLACE logistic.coord_padt WITH wc_padata
	SELECT m_profs
	GOTO TOP
	SELECT logistic
	REPLACE logistic.p1_id WITH m_profs.id_prof
	REPLACE logistic.p1_val WITH wp1_val
	REPLACE logistic.p1_adia WITH wp1_adia
	REPLACE logistic.p1_aere WITH wp1_aere
	REPLACE logistic.p1_hot WITH wp1_hot
	REPLACE logistic.p1_hosp WITH wp1_hosp
	REPLACE logistic.p1_hid WITH wp1_hid
	REPLACE logistic.p1_cc WITH wp1_lcart
	REPLACE logistic.p1_ccid WITH lst_cart(wp1_cart,2)
	REPLACE logistic.p1_padt WITH wp1_padata
	IF prof_quant > 1
		SELECT m_profs
		SKIP
		SELECT logistic
		REPLACE logistic.p2_id WITH m_profs.id_prof
		REPLACE logistic.p2_val WITH wp2_val
		REPLACE logistic.p2_adia WITH wp2_adia
		REPLACE logistic.p2_aere WITH wp2_aere
		REPLACE logistic.p2_hot WITH wp2_hot
		REPLACE logistic.p2_hosp WITH wp2_hosp
		REPLACE logistic.p2_hid WITH wp2_hid
		REPLACE logistic.p2_cc WITH wp2_lcart
		REPLACE logistic.p2_ccid WITH lst_cart(wp2_cart,2)
		REPLACE logistic.p2_padt WITH wp2_padata
	ENDIF
	IF prof_quant > 2
		SELECT m_profs
		SKIP
		SELECT logistic
		REPLACE logistic.p3_id WITH m_profs.id_prof
		REPLACE logistic.p3_val WITH wp3_val
		REPLACE logistic.p3_adia WITH wp3_adia
		REPLACE logistic.p3_aere WITH wp3_aere
		REPLACE logistic.p3_hot WITH wp3_hot
		REPLACE logistic.p3_hosp WITH wp3_hosp
		REPLACE logistic.p3_hid WITH wp3_hid
		REPLACE logistic.p3_cc WITH wp3_lcart
		REPLACE logistic.p3_ccid WITH lst_cart(wp3_cart,2)
		REPLACE logistic.p3_padt WITH wp3_padata
	ENDIF
	REPLACE logistic.ds WITH lequip_ds
	REPLACE logistic.ds_forn WITH eds_fid
	REPLACE logistic.ds_ref WITH eds_ref
	REPLACE logistic.ds_valor WITH eds_valor
	REPLACE logistic.ds_forma WITH eds_forma
	REPLACE logistic.nb WITH lequip_nb
	REPLACE logistic.nb_forn WITH enb_fid
	REPLACE logistic.nb_ref WITH enb_ref
	REPLACE logistic.nb_valor WITH enb_valor
	REPLACE logistic.nb_forma WITH enb_forma
	REPLACE logistic.cpu WITH lequip_cpu
	REPLACE logistic.cpu_forn WITH ecpu_fid
	REPLACE logistic.cpu_ref WITH ecpu_ref
	REPLACE logistic.cpu_valor WITH ecpu_valor
	REPLACE logistic.cpu_forma WITH ecpu_forma
	REPLACE logistic.rp WITH lequip_rp
	REPLACE logistic.rp_forn WITH erp_fid
	REPLACE logistic.rp_ref WITH erp_ref
	REPLACE logistic.rp_valor WITH erp_valor
	REPLACE logistic.rp_forma WITH erp_forma
	REPLACE logistic.pe_data WITH pastae_dat
	REPLACE logistic.pe_transp WITH pastae_tra
	REPLACE logistic.pe_respid WITH list_env(envs,2)
	REPLACE logistic.pe_tipresp WITH wtipo_env
	REPLACE logistic.pr_data WITH pastar_dat
	REPLACE logistic.pr_transp WITH pastar_tra
	REPLACE logistic.pr_respid WITH list_ret(rets,2)
	REPLACE logistic.pr_tipresp WITH wtipo_ret
	REPLACE logistic.p_end WITH pasta_end
	REPLACE logistic.obs WITH wobs
	REPLACE logistic.pratica WITH lpratica

	IF !inc_log
		SELECT log_prd
		DELETE FOR log_prd.log_id == lm.id
	ENDIF
	nrec = ALEN(lst_prod)
	IF nrec > 1
		ult_id = 0
		SELECT log_prd
		GOTO BOTTOM
		ult_id = log_prd.id
		FOR i = 1 TO nrec / 4
			SELECT log_prd
			APPEND BLANK
			REPLACE log_prd.id WITH ult_id + 1
			REPLACE log_prd.log_id WITH logistic.id
			REPLACE log_prd.prod_id WITH lst_prod(i,2)
			REPLACE log_prd.quant WITH lst_prod(i,3)
			REPLACE log_prd.proporc WITH lst_prod(i,4)
			ult_id = ult_id + 1
		ENDFOR
	ENDIF

	DO auto_conta

	SELECT lm
	USE
	SELECT logistic
	USE
	SELECT 0
	USE &dircont\logistic ORDER TAG id
	SELECT 0
	USE &dircont\logistic AGAIN ORDER TAG modulo_id ALIAS lm
	RETURN
	*--

	*--
PROCEDURE cons_log
	SELECT fornecod
	SEEK lm.local_id
	wlocal_id = fornecod.codigo
	IF ISBLANK(fornecod.fantasie)
		wlocal = fornecod.nome
	ELSE
		wlocal = fornecod.fantasie
	ENDIF
	wlocal_end = ALLTRIM(fornecod.end) + " - " +  ;
		ALLTRIM(fornecod.bairro) + " - " +  ;
		ALLTRIM(fornecod.cidade) + " - " +  ;
		ALLTRIM(fornecod.uf)
	wlocal_ref = fornecod.referencia
	SELECT lm
	wlocal_alu = lm.local_val
	wlocal_dat = lm.local_data
	wlocal_for = lm.local_form
	SELECT funcs
	SEEK lm.coord_id
	wcoord = funcs.nome
	wc_end = ALLTRIM(funcs.cidade) + " - " + funcs.uf
	wc_ban = funcs.bancario
	wc_valor = lm.coord_val
	wc_adiant = lm.coord_adia
	wc_aerea = lm.coord_aere
	wc_hot = lm.coord_hot
	wc_hosp = lm.coord_hosp
	wc_hid = lm.coord_hid
	IF wc_hid > 0
		SELECT fornecod
		SEEK wc_hid
		wc_hotel = fornecod.nome
	ENDIF
	wc_lcart = lm.coord_cc
	IF lm.coord_ccid > 0
		wc_cart = ASCAN(rec_cart, lm.coord_ccid)
	ELSE
		wc_cart = 1
	ENDIF
	wc_padata = lm.coord_padt
	SELECT prof
	SEEK lm.p1_id
	wprof = prof.nome
	wp_end = ALLTRIM(prof.cidade) + " - " + prof.uf
	wp_ban = prof.bancario
	wp_valor = lm.p1_val
	wp_adiant = lm.p1_adia
	wp_aerea = lm.p1_aere
	wp_hot = lm.p1_hot
	wp_hosp = lm.p1_hosp
	wp_hid = lm.p1_hid
	IF wp_hid > 0
		SELECT fornecod
		SEEK wp_hid
		wp_hotel = fornecod.nome
	ENDIF
	wp_lcart = lm.p1_cc
	IF lm.p1_ccid > 0
		wp_cart = ASCAN(rec_cart, lm.p1_ccid)
	ELSE
		wp_cart = 1
	ENDIF
	wp_padata = lm.p1_padt
	wp1_val = lm.p1_val
	wp1_adia = lm.p1_adia
	wp1_aere = lm.p1_aere
	wp1_hot = lm.p1_hot
	wp1_hosp = lm.p1_hosp
	wp1_hid = lm.p1_hid
	wp1_lcart = lm.p1_cc
	IF lm.p1_ccid > 0
		wp1_cart = ASCAN(rec_cart, lm.p1_ccid)
	ELSE
		wp1_cart = 1
	ENDIF
	wp1_padata = lm.p1_padt
	wp2_val = lm.p2_val
	wp2_adia = lm.p2_adia
	wp2_aere = lm.p2_aere
	wp2_hot = lm.p2_hot
	wp2_hosp = lm.p2_hosp
	wp2_hid = lm.p2_hid
	wp2_lcart = lm.p2_cc
	IF lm.p2_ccid > 0
		wp2_cart = ASCAN(rec_cart, lm.p2_ccid)
	ELSE
		wp2_cart = 1
	ENDIF
	wp2_padata = lm.p2_padt
	wp3_val = lm.p3_val
	wp3_adia = lm.p3_adia
	wp3_aere = lm.p3_aere
	wp3_hot = lm.p3_hot
	wp3_hosp = lm.p3_hosp
	wp3_hid = lm.p3_hid
	wp3_lcart = lm.p3_cc
	IF lm.p3_ccid > 0
		wp3_cart = ASCAN(rec_cart, lm.p3_ccid)
	ELSE
		wp3_cart = 1
	ENDIF
	wp3_padata = lm.p3_padt
	lequip_ds = lm.ds
	eds_ref = lm.ds_ref
	eds_valor = lm.ds_valor
	eds_forma = lm.ds_forma
	eds_fid = lm.ds_forn
	IF lm.ds_forn > 0
		SELECT fornecod
		SEEK lm.ds_forn
		IF FOUND()
			eds_forn = fornecod.nome
		ENDIF
	ENDIF
	lequip_nb = lm.nb
	enb_ref = lm.nb_ref
	enb_valor = lm.nb_valor
	enb_forma = lm.nb_forma
	enb_fid = lm.nb_forn
	IF lm.nb_forn > 0
		SELECT fornecod
		SEEK lm.nb_forn
		IF FOUND()
			enb_forn = fornecod.nome
		ENDIF
	ENDIF
	lequip_cpu = lm.cpu
	ecpu_ref = lm.cpu_ref
	ecpu_valor = lm.cpu_valor
	ecpu_forma = lm.cpu_forma
	ecpu_fid = lm.cpu_forn
	IF lm.cpu_forn > 0
		SELECT fornecod
		SEEK lm.cpu_forn
		IF FOUND()
			ecpu_forn = fornecod.nome
		ENDIF
	ENDIF
	lequip_rp = lm.rp
	erp_ref = lm.rp_ref
	erp_valor = lm.rp_valor
	erp_forma = lm.rp_forma
	erp_fid = lm.rp_forn
	IF lm.rp_forn > 0
		SELECT fornecod
		SEEK lm.rp_forn
		IF FOUND()
			erp_forn = fornecod.nome
		ENDIF
	ENDIF
	pastae_dat = lm.pe_data
	pastae_sem = dia_semana(pastae_dat)
	pastae_tra = lm.pe_transp
	wtipo_env = lm.pe_tipresp
	DO env_list
	envs = ASCAN(reg_env, lm.pe_respid)
	pastar_dat = lm.pr_data
	pastar_sem = dia_semana(pastar_dat)
	pastar_tra = lm.pr_transp
	wtipo_ret = lm.pr_tipresp
	DO ret_list
	rets = ASCAN(reg_ret, lm.pr_respid)
	pasta_end = lm.p_end
	wobs = lm.obs
	lpratica = lm.pratica
	aux_logid = lm.id
	DIMENSION lst_prod[ 1]
	lst_prod[ 1] = "Nenhum produto relacionado..."
	SELECT LEFT(produtos.descricao, 35) + " " + produtos.unidade +  ;
		" " + STR(log_prd.quant, 6), log_prd.prod_id,  ;
		log_prd.quant, log_prd.proporc FROM log_prd, produtos  ;
		WHERE log_prd.prod_id == produtos.id AND log_prd.log_id ==  ;
		aux_logid INTO ARRAY lst_prod
	RETURN
	*--

	*--
PROCEDURE imp_log
	IF !inc_log
		aux_rec = lm.id
		IF lm.pratica .AND. lst_prod(1) <>  ;
				"Nenhum produto relacionado..."
			SELECT subarea.sigla, area.descricao, mod_cab.numero,  ;
				fornecs.nome, fornecs.end, fornecs.bairro,  ;
				fornecs.cidade, fornecs.uf, fornecs.referencia,  ;
				funcs.nome AS coord_nome, funcs.cidade AS coord_cid,  ;
				funcs.uf AS coord_uf, funcs.bancario AS coord_banc,  ;
				produtos.descricao AS produto, produtos.unidade,  ;
				log_prd.quant, logistic.* FROM logistic, mod_cab, area,  ;
				subarea, fornecs, funcs, produtos, log_prd WHERE  ;
				logistic.modulo_id == mod_cab.primario AND mod_cab.area ==  ;
				area.codigo AND mod_cab.subarea == subarea.codigo AND  ;
				logistic.local_id == fornecs.codigo AND  ;
				logistic.coord_id == funcs.codigo AND log_prd.log_id ==  ;
				logistic.id AND produtos.id == log_prd.prod_id AND  ;
				logistic.id == aux_rec INTO CURSOR imp_log
		ELSE
			SELECT subarea.sigla, area.descricao, mod_cab.numero,  ;
				fornecs.nome, fornecs.end, fornecs.bairro,  ;
				fornecs.cidade, fornecs.uf, fornecs.referencia,  ;
				funcs.nome AS coord_nome, funcs.cidade AS coord_cid,  ;
				funcs.uf AS coord_uf, funcs.bancario AS coord_banc, ""  ;
				AS produto, "" AS unidade, 0 AS quant, logistic.* FROM  ;
				logistic, mod_cab, area, subarea, fornecs, funcs WHERE  ;
				logistic.modulo_id == mod_cab.primario AND mod_cab.area ==  ;
				area.codigo AND mod_cab.subarea == subarea.codigo AND  ;
				logistic.local_id == fornecs.codigo AND  ;
				logistic.coord_id == funcs.codigo AND logistic.id ==  ;
				aux_rec INTO CURSOR imp_log
		ENDIF
		IF imp_log.p1_id > 0
			SELECT prof
			SEEK imp_log.p1_id
			p1_nome = prof.nome
			p1_end = ALLTRIM(prof.cidade) + " - " + prof.uf
			p1_ban = prof.bancario
		ELSE
			STORE "" TO p1_nome, p1_end, p1_ban
		ENDIF
		IF imp_log.p2_id > 0
			SELECT prof
			SEEK imp_log.p2_id
			p2_nome = prof.nome
			p2_end = ALLTRIM(prof.cidade) + " - " + prof.uf
			p2_ban = prof.bancario
		ELSE
			STORE "" TO p2_nome, p2_end, p2_ban
		ENDIF
		IF imp_log.p3_id > 0
			SELECT prof
			SEEK imp_log.p3_id
			p3_nome = prof.nome
			p3_end = ALLTRIM(prof.cidade) + " - " + prof.uf
			p3_ban = prof.bancario
		ELSE
			STORE "" TO p3_nome, p3_end, p3_ban
		ENDIF
		SELECT imp_log
		IF vis_impr
			REPORT FORM logistic.frx TO PRINTER PREVIEW
		ELSE
			REPORT FORM logistic.frx TO PRINTER PROMPT NOCONSOLE
		ENDIF
	ELSE
		DO winalert WITH "ATENÇÃO",  ;
			"ANTES DE IMPRIMIR, É NECESSÁRIO GRAVAR A PLANILHA."
	ENDIF
	RETURN
	*--

	*--
PROCEDURE carreg_dis
	SELECT mod_disc.id_disc, mod_disc.id_prof FROM mod_disc WHERE  ;
		mod_disc.modulo == aux_cab GROUP BY mod_disc.id_disc INTO  ;
		CURSOR m_discs
	SELECT m_discs
	i = 1
	SELECT m_discs
	SCAN
		SELECT discip
		SEEK m_discs.id_disc
		IF discip.pratica
			lpratica = discip.pratica
		ENDIF
		SELECT m_discs
		aux_disc = m_discs.id_disc
		aux_prof = m_discs.id_prof
		SELECT disc_prd.prod_id, disc_prd.quant, disc_prd.proporc FROM  ;
			disc_prd WHERE disc_prd.disc_id == aux_disc AND  ;
			disc_prd.prof_id == aux_prof INTO CURSOR aux_prd
		SELECT aux_prd
		COUNT TO nrec
		IF nrec > 0
			SELECT aux_prd
			SCAN
				MULT = IIF(aux_prd.proporc, nalu, 1)
				SELECT produtos
				SEEK aux_prd.prod_id
				DIMENSION lst_prod[ i, 4]
				lst_prod[ i, 1] = LEFT(produtos.descricao, 35) + " " +  ;
					produtos.unidade + " " + STR(aux_prd.quant * MULT,  ;
					6)
				lst_prod[ i, 2] = aux_prd.prod_id
				lst_prod[ i, 3] = aux_prd.quant * MULT
				lst_prod[ i, 4] = aux_prd.proporc
				i = i + 1
				SELECT aux_prd
			ENDSCAN
		ENDIF
		SELECT m_discs
	ENDSCAN
	RETURN
	*--

	*--
PROCEDURE env_list
	DO CASE
	CASE wtipo_env = 1
		SELECT fornecs.nome, fornecs.codigo FROM fornecs ORDER BY  ;
			fornecs.nome INTO ARRAY list_env
		SELECT fornecs.codigo FROM fornecs ORDER BY fornecs.nome INTO  ;
			ARRAY reg_env
	CASE wtipo_env = 2
		SELECT funcs.nome, funcs.codigo FROM funcs WHERE funcs.status <>  ;
			"X" ORDER BY funcs.nome INTO ARRAY list_env
		SELECT funcs.codigo FROM funcs WHERE funcs.status <> "X" ORDER  ;
			BY funcs.nome INTO ARRAY reg_env
	CASE wtipo_env = 3
		SELECT prof.nome, prof.codigo FROM prof ORDER BY prof.nome  ;
			INTO ARRAY list_env
		SELECT prof.codigo FROM prof ORDER BY prof.nome INTO ARRAY  ;
			reg_env
	ENDCASE
	envs = 1
	RETURN
	*--

	*--
PROCEDURE ret_list
	DO CASE
	CASE wtipo_ret = 1
		SELECT fornecs.nome, fornecs.codigo FROM fornecs ORDER BY  ;
			fornecs.nome INTO ARRAY list_ret
		SELECT fornecs.codigo FROM fornecs ORDER BY fornecs.nome INTO  ;
			ARRAY reg_ret
	CASE wtipo_ret = 2
		SELECT funcs.nome, funcs.codigo FROM funcs WHERE funcs.status <>  ;
			"X" ORDER BY funcs.nome INTO ARRAY list_ret
		SELECT funcs.codigo FROM funcs WHERE funcs.status <> "X" ORDER  ;
			BY funcs.nome INTO ARRAY reg_ret
	CASE wtipo_ret = 3
		SELECT prof.nome, prof.codigo FROM prof ORDER BY prof.nome  ;
			INTO ARRAY list_ret
		SELECT prof.codigo FROM prof ORDER BY prof.nome INTO ARRAY  ;
			reg_ret
	ENDCASE
	rets = 1
	RETURN
	*--

	*--
PROCEDURE busca_end
	DO CASE
	CASE wtipo_ret = 1
		SELECT fornecod
		SEEK list_ret(rets,2)
		pasta_end = ALLTRIM(fornecod.end) + " - " +  ;
			ALLTRIM(fornecod.bairro) + " - " +  ;
			ALLTRIM(fornecod.cidade) + " - " +  ;
			ALLTRIM(fornecod.uf) + " - " +  ;
			ALLTRIM(fornecod.cep)
	CASE wtipo_ret = 2
		SELECT funcs
		SEEK list_ret(rets,2)
		pasta_end = ALLTRIM(funcs.end) + " - " + ALLTRIM(funcs.bairro) +  ;
			" - " + ALLTRIM(funcs.cidade) + " - " +  ;
			ALLTRIM(funcs.uf) + " - " + ALLTRIM(funcs.cep)
	CASE wtipo_ret = 3
		SELECT prof
		SEEK list_ret(rets,2)
		pasta_end = ALLTRIM(prof.end) + " - " + ALLTRIM(prof.bairro) +  ;
			" - " + ALLTRIM(prof.cidade) + " - " +  ;
			ALLTRIM(prof.uf) + " - " + ALLTRIM(prof.cep)
	ENDCASE
	RETURN
	*--

	*--
PROCEDURE busca_clip
	DO CASE
	CASE wtipo_ret = 1
		SELECT fornecod
		SEEK list_ret(rets,2)
		_CLIPTEXT = list_ret(rets,1) + CHR(13) + CHR(10) +  ;
			ALLTRIM(fornecod.end) + CHR(13) + CHR(10) +  ;
			ALLTRIM(fornecod.bairro) + " - " +  ;
			ALLTRIM(fornecod.cidade) + " - " +  ;
			ALLTRIM(fornecod.uf) + CHR(13) + CHR(10) +  ;
			ALLTRIM(fornecod.cep)
	CASE wtipo_ret = 2
		SELECT funcs
		SEEK list_ret(rets,2)
		_CLIPTEXT = list_ret(rets,1) + CHR(13) + CHR(10) +  ;
			ALLTRIM(funcs.end) + CHR(13) + CHR(10) +  ;
			ALLTRIM(funcs.bairro) + " - " +  ;
			ALLTRIM(funcs.cidade) + " - " + ALLTRIM(funcs.uf) +  ;
			CHR(13) + CHR(10) + ALLTRIM(funcs.cep)
	CASE wtipo_ret = 3
		SELECT prof
		SEEK list_ret(rets,2)
		_CLIPTEXT = list_ret(rets,1) + CHR(13) + CHR(10) +  ;
			ALLTRIM(prof.end) + CHR(13) + CHR(10) +  ;
			ALLTRIM(prof.bairro) + " - " +  ;
			ALLTRIM(prof.cidade) + " - " + ALLTRIM(prof.uf) +  ;
			CHR(13) + CHR(10) + ALLTRIM(prof.cep)
	ENDCASE
	DO winalert WITH "AVISO", "DADOS TRANSFERIDOS PARA A ÁREA DE TRANSFERÊNCIA."
	RETURN
	*--

PROCEDURE autoOpname
	PARAMETER argWaarde, ;
		argDatum, ;
		argRekeningSchema, ;
		argModaliteit, ;
		argSoortAanbieder, ;
		argCodeAanbieder, ;
		argZoekDubbele

	STORE '' TO verdereZoek, eersteVereiste
	IF argZoekDubbele > 1
		DO CASE
		CASE argZoekDubbele = 2
			verdereZoek = 'AND busca.codfor == &argCodeAanvieder '
		CASE argZoekDubbele >= 3 AND argZoekDubbele <=6
			hulp = STR(argZoekDubbele-2,1)
			verdereZoek = 'AND busca.log_plano == &hulp '
		ENDCASE
	ENDIF
		
	IF &argWaarde > 0.00
		SELECT busca
		LOCATE FOR ALLTRIM(busca.plano) == ALLTRIM(argRekeningSchema) &verdereZoek
		IF !FOUND()
			ultnum = 0
			SELECT contas
			GOTO BOTTOM
			ultnum = contas.numerolanc
			APPEND BLANK
			REPLACE contas.numerolanc WITH ultnum + 1
			REPLACE contas.situacao WITH "A"
			REPLACE contas.modulo WITH mc.numero
			REPLACE contas.tipo WITH 1
			REPLACE contas.cartao_id WITH 1
			REPLACE contas.datalancam WITH DATE()
			REPLACE contas.forma WITH 5
			REPLACE contas.plano WITH argRekeningSchema
			REPLACE contas.area WITH mc.area
			REPLACE contas.subarea WITH mc.subarea
			REPLACE contas.codigobanc WITH "13"
			REPLACE contas.obs WITH "Lançado pela Logística em " +  ;
				DTOC(DATE()) + " - " + TIME()
			REPLACE contas.tipo_ced WITH argModaliteit
			REPLACE contas.log_id WITH logistic.id
			REPLACE contas.log_auto WITH .T.
			REPLACE contas.log_plano WITH argZoekDubbele-2
		ELSE
			SELE contas
			SEEK busca.numerolanc
		ENDIF
		SELECT &argSoortAanbieder
		SEEK &argCodeAanbieder
		SELECT contas
		REPLACE contas.datavencim WITH &argDatum
		REPLACE contas.valpgtorec WITH &argWaarde
		REPLACE contas.razaosocia WITH &argSoortAanbieder..nome
		REPLACE contas.codfor WITH &argCodeAanbieder
	ELSE
		SELECT busca
		LOCATE FOR ALLTRIM(busca.plano) == ALLTRIM(argRekeningSchema) &verdereZoek
		IF FOUND()
			SELECT contas
			SEEK busca.numerolanc
			IF FOUND()
				DELETE
			ENDIF
		ENDIF
	ENDIF
	RETURN
	*--
	
PROCEDURE auto_conta
	auxlog = logistic.id
	SELECT * ;
		FROM contas ;
		WHERE contas.log_id == auxlog ;
		INTO CURSOR busca

	DO autoOpname WITH 'logistic.local_val', 'logistic.local_data', ;
		'0514', 1, 'fornecod', 'logistic.local_id', 1
	DO autoOpname WITH 'logistic.p1_val', 'mc.dat_ini + IIF(DOW(mc.dat_ini) = 1, 1, 9 - DOW(mc.dat_ini))', ;
		'0398', 3, 'prof', 'logistic.p1_id', 2
	DO autoOpname WITH 'logistic.p1_adia', 'mc.dat_ini + IIF(DOW(mc.dat_ini) = 1, 1, 9 - DOW(mc.dat_ini))', ;
		'0301', 3, 'prof', 'logistic.p1_id', 2
	DO autoOpname WITH 'logistic.p2_val', 'mc.dat_ini + IIF(DOW(mc.dat_ini) = 1, 1, 9 - DOW(mc.dat_ini))', ;
		'0398', 3, 'prof', 'logistic.p2_id', 2
	DO autoOpname WITH 'logistic.p2_adia', 'mc.dat_ini + IIF(DOW(mc.dat_ini) = 1, 1, 9 - DOW(mc.dat_ini))', ;
		'0301',	3, 'prof', 'logistic.p2_id', 2
	DO autoOpname WITH 'logistic.p3_val', 'mc.dat_ini + IIF(DOW(mc.dat_ini) = 1, 1, 9 - DOW(mc.dat_ini))', ;
		'0398', 3, 'prof', 'logistic.p3_id', 2
	DO autoOpname WITH 'logistic.p3_adia', 'mc.dat_ini + IIF(DOW(mc.dat_ini) = 1, 1, 9 - DOW(mc.dat_ini))', ;
		'0301', 3, 'prof', 'logistic.p3_id', 2
	DO autoOpname WITH 'logistic.ds_valor', 'mc.dat_ini + IIF(DOW(mc.dat_ini) = 1, 1, 9 - DOW(mc.dat_ini))', ;
		'0511', 3, 'fornecod', 'logistic.ds_forn', 3
	DO autoOpname WITH 'logistic.nb_valor', 'mc.dat_ini + IIF(DOW(mc.dat_ini) = 1, 1, 9 - DOW(mc.dat_ini))', ;
		'0511', 3, 'fornecod', 'logistic.nb_forn', 4
	DO autoOpname WITH 'logistic.cpu_valor', 'mc.dat_ini + IIF(DOW(mc.dat_ini) = 1, 1, 9 - DOW(mc.dat_ini))', ;
		'0511', 3, 'fornecod', 'logistic.cpu_forn', 5
	DO autoOpname WITH 'logistic.rp_valor', 'mc.dat_ini + IIF(DOW(mc.dat_ini) = 1, 1, 9 - DOW(mc.dat_ini))', ;
		'0511', 3, 'fornecod', 'logistic.rp_forn', 6

	RETURN
	*--


*       *********************************************************
*       *                                                         
*       * _2W50N7588           bt_forn VALID                      
*       *                                                         
*       * Function Origin:                                        
*       *                                                         
*       * From Platform:       Windows                            
*       * From Screen:         LOGISTIC,     Record Number:   57  
*       * Variable:            bt_forn                            
*       * Called By:           VALID Clause                       
*       * Object Type:         Push Button                        
*       * Snippet Number:      1                                  
*       *                                                         
*       *********************************************************
*
FUNCTION _2W50N7588     &&  bt_forn VALID
#REGION 1
bforn = 1
DO Entrada4.SPR
SHOW GETS
*--

*       *********************************************************
*       *                                                         
*       * _2W50N758P           wlocal_end WHEN                    
*       *                                                         
*       * Function Origin:                                        
*       *                                                         
*       * From Platform:       Windows                            
*       * From Screen:         LOGISTIC,     Record Number:   58  
*       * Variable:            wlocal_end                         
*       * Called By:           WHEN Clause                        
*       * Object Type:         Field                              
*       * Snippet Number:      2                                  
*       *                                                         
*       *********************************************************
*
FUNCTION _2W50N758P     &&  wlocal_end WHEN
#REGION 1
aux = wlocal_end
*--

*       *********************************************************
*       *                                                         
*       * _2W50N758Q           wlocal_end VALID                   
*       *                                                         
*       * Function Origin:                                        
*       *                                                         
*       * From Platform:       Windows                            
*       * From Screen:         LOGISTIC,     Record Number:   58  
*       * Variable:            wlocal_end                         
*       * Called By:           VALID Clause                       
*       * Object Type:         Field                              
*       * Snippet Number:      3                                  
*       *                                                         
*       *********************************************************
*
FUNCTION _2W50N758Q     &&  wlocal_end VALID
#REGION 1
wlocal_end = aux
SHOW GETS
*--

*       *********************************************************
*       *                                                         
*       * _2W50N758S           wlocal_ref WHEN                    
*       *                                                         
*       * Function Origin:                                        
*       *                                                         
*       * From Platform:       Windows                            
*       * From Screen:         LOGISTIC,     Record Number:   59  
*       * Variable:            wlocal_ref                         
*       * Called By:           WHEN Clause                        
*       * Object Type:         Field                              
*       * Snippet Number:      4                                  
*       *                                                         
*       *********************************************************
*
FUNCTION _2W50N758S     &&  wlocal_ref WHEN
#REGION 1
aux = wlocal_ref
*--

*       *********************************************************
*       *                                                         
*       * _2W50N758T           wlocal_ref VALID                   
*       *                                                         
*       * Function Origin:                                        
*       *                                                         
*       * From Platform:       Windows                            
*       * From Screen:         LOGISTIC,     Record Number:   59  
*       * Variable:            wlocal_ref                         
*       * Called By:           VALID Clause                       
*       * Object Type:         Field                              
*       * Snippet Number:      5                                  
*       *                                                         
*       *********************************************************
*
FUNCTION _2W50N758T     &&  wlocal_ref VALID
#REGION 1
wlocal_ref = aux
SHOW GETS
*--

*       *********************************************************
*       *                                                         
*       * _2W50N758W           bt_chot VALID                      
*       *                                                         
*       * Function Origin:                                        
*       *                                                         
*       * From Platform:       Windows                            
*       * From Screen:         LOGISTIC,     Record Number:   72  
*       * Variable:            bt_chot                            
*       * Called By:           VALID Clause                       
*       * Object Type:         Push Button                        
*       * Snippet Number:      6                                  
*       *                                                         
*       *********************************************************
*
FUNCTION _2W50N758W     &&  bt_chot VALID
#REGION 1
bforn = 2
DO Entrada4.SPR
SHOW GETS
*--

*       *********************************************************
*       *                                                         
*       * _2W50N758Y           wp_valor VALID                     
*       *                                                         
*       * Function Origin:                                        
*       *                                                         
*       * From Platform:       Windows                            
*       * From Screen:         LOGISTIC,     Record Number:   79  
*       * Variable:            wp_valor                           
*       * Called By:           VALID Clause                       
*       * Object Type:         Field                              
*       * Snippet Number:      7                                  
*       *                                                         
*       *********************************************************
*
FUNCTION _2W50N758Y     &&  wp_valor VALID
#REGION 1
aux = "Wp" + STR(prof_atual, 1) + "_val"
&Aux = Wp_valor
*--

*       *********************************************************
*       *                                                         
*       * _2W50N7592           wp_cart VALID                      
*       *                                                         
*       * Function Origin:                                        
*       *                                                         
*       * From Platform:       Windows                            
*       * From Screen:         LOGISTIC,     Record Number:   80  
*       * Variable:            wp_cart                            
*       * Called By:           VALID Clause                       
*       * Object Type:         Popup                              
*       * Snippet Number:      8                                  
*       *                                                         
*       *********************************************************
*
FUNCTION _2W50N7592     &&  wp_cart VALID
#REGION 1
aux = "Wp" + STR(prof_atual, 1) + "_cart"
&Aux = Wp_cart
*--

*       *********************************************************
*       *                                                         
*       * _2W50N7591           wp_lcart VALID                     
*       *                                                         
*       * Function Origin:                                        
*       *                                                         
*       * From Platform:       Windows                            
*       * From Screen:         LOGISTIC,     Record Number:   81  
*       * Variable:            wp_lcart                           
*       * Called By:           VALID Clause                       
*       * Object Type:         Check Box                          
*       * Snippet Number:      9                                  
*       *                                                         
*       *********************************************************
*
FUNCTION _2W50N7591     &&  wp_lcart VALID
#REGION 1
aux = "Wp" + STR(prof_atual, 1) + "_lcart"
&Aux = Wp_lcart
*--

*       *********************************************************
*       *                                                         
*       * _2W50N75AD           bt_prevpro VALID                   
*       *                                                         
*       * Function Origin:                                        
*       *                                                         
*       * From Platform:       Windows                            
*       * From Screen:         LOGISTIC,     Record Number:   82  
*       * Variable:            bt_prevpro                         
*       * Called By:           VALID Clause                       
*       * Object Type:         Push Button                        
*       * Snippet Number:      10                                 
*       *                                                         
*       *********************************************************
*
FUNCTION _2W50N75AD     &&  bt_prevpro VALID
#REGION 1
IF prof_atual > 1
 prof_atual = prof_atual - 1
 SELECT m_profs
 SKIP -1
 SELECT prof
 SEEK m_profs.id_prof
 wprof = prof.nome
 wp_end = ALLTRIM(prof.cidade) + " - " + prof.uf
 wp_ban = prof.bancario
 nprof = STR(prof_atual, 1) + "/" + STR(prof_quant, 1)
 aux = "Wp" + STR(prof_atual, 1) + "_val"
 IF &Aux > 0 OR !Inc_log
  Wp_valor = &Aux
 ELSE
  wp_valor = prof.honor1
  &Aux = Prof.Honor1
 ENDIF
 aux = "Wp" + STR(prof_atual, 1) + "_adia"
 IF &Aux > 0 OR !Inc_log
  Wp_adiant = &Aux
 ELSE
  wp_adiant = prof.honor2
  &Aux = Prof.Honor2
 ENDIF
 aux = "Wp" + STR(prof_atual, 1) + "_aere"
 Wp_aerea = &Aux
 aux = "Wp" + STR(prof_atual, 1) + "_hot"
 Wp_hot = &Aux
 aux = "Wp" + STR(prof_atual, 1) + "_hosp"
 Wp_hosp = &Aux
 aux = "Wp" + STR(prof_atual, 1) + "_lcart"
 Wp_lcart = &Aux
 aux = "Wp" + STR(prof_atual, 1) + "_cart"
 Wp_cart = &Aux
 aux = "Wp" + STR(prof_atual, 1) + "_padata"
 Wp_padata = &Aux
 aux = "Wp" + STR(prof_atual, 1) + "_hid"
 IF &Aux > 0
  SELECT fornecod
  SEEK &Aux
  IF FOUND()
   wp_hotel = fornecod.nome
  ELSE
   wp_hotel = ""
  ENDIF
 ELSE
  wp_hotel = ""
 ENDIF
 SHOW GETS
ENDIF
*--

*       *********************************************************
*       *                                                         
*       * _2W50N75AA           bt_nextpro VALID                   
*       *                                                         
*       * Function Origin:                                        
*       *                                                         
*       * From Platform:       Windows                            
*       * From Screen:         LOGISTIC,     Record Number:   84  
*       * Variable:            bt_nextpro                         
*       * Called By:           VALID Clause                       
*       * Object Type:         Push Button                        
*       * Snippet Number:      11                                 
*       *                                                         
*       *********************************************************
*
FUNCTION _2W50N75AA     &&  bt_nextpro VALID
#REGION 1
IF prof_atual < prof_quant
 prof_atual = prof_atual + 1
 SELECT m_profs
 SKIP
 SELECT prof
 SEEK m_profs.id_prof
 wprof = prof.nome
 wp_end = ALLTRIM(prof.cidade) + " - " + prof.uf
 wp_ban = prof.bancario
 nprof = STR(prof_atual, 1) + "/" + STR(prof_quant, 1)
 aux = "Wp" + STR(prof_atual, 1) + "_val"
 IF &Aux > 0 OR !Inc_log
  Wp_valor = &Aux
 ELSE
  wp_valor = prof.honor1
  &Aux = Prof.Honor1
 ENDIF
 aux = "Wp" + STR(prof_atual, 1) + "_adia"
 IF &Aux > 0 OR !Inc_log
  Wp_adiant = &Aux
 ELSE
  wp_adiant = prof.honor2
  &Aux = Prof.Honor2
 ENDIF
 aux = "Wp" + STR(prof_atual, 1) + "_aere"
 Wp_aerea = &Aux
 aux = "Wp" + STR(prof_atual, 1) + "_hot"
 Wp_hot = &Aux
 aux = "Wp" + STR(prof_atual, 1) + "_hosp"
 Wp_hosp = &Aux
 aux = "Wp" + STR(prof_atual, 1) + "_lcart"
 Wp_lcart = &Aux
 aux = "Wp" + STR(prof_atual, 1) + "_cart"
 Wp_cart = &Aux
 aux = "Wp" + STR(prof_atual, 1) + "_padata"
 Wp_padata = &Aux
 aux = "Wp" + STR(prof_atual, 1) + "_hid"
 IF &Aux > 0
  SELECT fornecod
  SEEK &Aux
  IF FOUND()
   wp_hotel = fornecod.nome
  ELSE
   wp_hotel = ""
  ENDIF
 ELSE
  wp_hotel = ""
 ENDIF
 SHOW GETS
ENDIF
*--

*       *********************************************************
*       *                                                         
*       * _2W50N758Z           wp_adiant VALID                    
*       *                                                         
*       * Function Origin:                                        
*       *                                                         
*       * From Platform:       Windows                            
*       * From Screen:         LOGISTIC,     Record Number:   85  
*       * Variable:            wp_adiant                          
*       * Called By:           VALID Clause                       
*       * Object Type:         Field                              
*       * Snippet Number:      12                                 
*       *                                                         
*       *********************************************************
*
FUNCTION _2W50N758Z     &&  wp_adiant VALID
#REGION 1
aux = "Wp" + STR(prof_atual, 1) + "_adia"
&Aux = Wp_adiant
*--

*       *********************************************************
*       *                                                         
*       * _2W50N759J           wp_padata VALID                    
*       *                                                         
*       * Function Origin:                                        
*       *                                                         
*       * From Platform:       Windows                            
*       * From Screen:         LOGISTIC,     Record Number:   86  
*       * Variable:            wp_padata                          
*       * Called By:           VALID Clause                       
*       * Object Type:         Field                              
*       * Snippet Number:      13                                 
*       *                                                         
*       *********************************************************
*
FUNCTION _2W50N759J     &&  wp_padata VALID
#REGION 1
aux = "Wp" + STR(prof_atual, 1) + "_padata"
&Aux = Wp_padata
*--

*       *********************************************************
*       *                                                         
*       * _2W50N759M           bt_phot VALID                      
*       *                                                         
*       * Function Origin:                                        
*       *                                                         
*       * From Platform:       Windows                            
*       * From Screen:         LOGISTIC,     Record Number:   88  
*       * Variable:            bt_phot                            
*       * Called By:           VALID Clause                       
*       * Object Type:         Push Button                        
*       * Snippet Number:      14                                 
*       *                                                         
*       *********************************************************
*
FUNCTION _2W50N759M     &&  bt_phot VALID
#REGION 1
bforn = 3
DO Entrada4.SPR
SHOW GETS
*--

*       *********************************************************
*       *                                                         
*       * _2W50N759N           wp_hosp VALID                      
*       *                                                         
*       * Function Origin:                                        
*       *                                                         
*       * From Platform:       Windows                            
*       * From Screen:         LOGISTIC,     Record Number:   89  
*       * Variable:            wp_hosp                            
*       * Called By:           VALID Clause                       
*       * Object Type:         Field                              
*       * Snippet Number:      15                                 
*       *                                                         
*       *********************************************************
*
FUNCTION _2W50N759N     &&  wp_hosp VALID
#REGION 1
aux = "Wp" + STR(prof_atual, 1) + "_hosp"
&Aux = Wp_hosp
*--

*       *********************************************************
*       *                                                         
*       * _2W50N759P           wp_hot VALID                       
*       *                                                         
*       * Function Origin:                                        
*       *                                                         
*       * From Platform:       Windows                            
*       * From Screen:         LOGISTIC,     Record Number:   90  
*       * Variable:            wp_hot                             
*       * Called By:           VALID Clause                       
*       * Object Type:         Field                              
*       * Snippet Number:      16                                 
*       *                                                         
*       *********************************************************
*
FUNCTION _2W50N759P     &&  wp_hot VALID
#REGION 1
aux = "Wp" + STR(prof_atual, 1) + "_hot"
&Aux = Wp_hot
*--

*       *********************************************************
*       *                                                         
*       * _2W50N759K           wp_aerea VALID                     
*       *                                                         
*       * Function Origin:                                        
*       *                                                         
*       * From Platform:       Windows                            
*       * From Screen:         LOGISTIC,     Record Number:   91  
*       * Variable:            wp_aerea                           
*       * Called By:           VALID Clause                       
*       * Object Type:         Field                              
*       * Snippet Number:      17                                 
*       *                                                         
*       *********************************************************
*
FUNCTION _2W50N759K     &&  wp_aerea VALID
#REGION 1
aux = "Wp" + STR(prof_atual, 1) + "_aere"
&Aux = Wp_aerea
*--

*       *********************************************************
*       *                                                         
*       * _2W50N759Q           bt_ds VALID                        
*       *                                                         
*       * Function Origin:                                        
*       *                                                         
*       * From Platform:       Windows                            
*       * From Screen:         LOGISTIC,     Record Number:   93  
*       * Variable:            bt_ds                              
*       * Called By:           VALID Clause                       
*       * Object Type:         Push Button                        
*       * Snippet Number:      18                                 
*       *                                                         
*       *********************************************************
*
FUNCTION _2W50N759Q     &&  bt_ds VALID
#REGION 1
bforn = 4
DO Entrada4.SPR
SHOW GETS
*--

*       *********************************************************
*       *                                                         
*       * _2W50N759S           bt_nb VALID                        
*       *                                                         
*       * Function Origin:                                        
*       *                                                         
*       * From Platform:       Windows                            
*       * From Screen:         LOGISTIC,     Record Number:   99  
*       * Variable:            bt_nb                              
*       * Called By:           VALID Clause                       
*       * Object Type:         Push Button                        
*       * Snippet Number:      19                                 
*       *                                                         
*       *********************************************************
*
FUNCTION _2W50N759S     &&  bt_nb VALID
#REGION 1
bforn = 5
DO Entrada4.SPR
SHOW GETS
*--

*       *********************************************************
*       *                                                         
*       * _2W50N759U           bt_cpu VALID                       
*       *                                                         
*       * Function Origin:                                        
*       *                                                         
*       * From Platform:       Windows                            
*       * From Screen:         LOGISTIC,     Record Number:  105  
*       * Variable:            bt_cpu                             
*       * Called By:           VALID Clause                       
*       * Object Type:         Push Button                        
*       * Snippet Number:      20                                 
*       *                                                         
*       *********************************************************
*
FUNCTION _2W50N759U     &&  bt_cpu VALID
#REGION 1
bforn = 6
DO Entrada4.SPR
SHOW GETS
*--

*       *********************************************************
*       *                                                         
*       * _2W50N759W           bt_rp VALID                        
*       *                                                         
*       * Function Origin:                                        
*       *                                                         
*       * From Platform:       Windows                            
*       * From Screen:         LOGISTIC,     Record Number:  111  
*       * Variable:            bt_rp                              
*       * Called By:           VALID Clause                       
*       * Object Type:         Push Button                        
*       * Snippet Number:      21                                 
*       *                                                         
*       *********************************************************
*
FUNCTION _2W50N759W     &&  bt_rp VALID
#REGION 1
bforn = 7
DO Entrada4.SPR
SHOW GETS
*--

*       *********************************************************
*       *                                                         
*       * _2W50N759Y           bt_env VALID                       
*       *                                                         
*       * Function Origin:                                        
*       *                                                         
*       * From Platform:       Windows                            
*       * From Screen:         LOGISTIC,     Record Number:  117  
*       * Variable:            bt_env                             
*       * Called By:           VALID Clause                       
*       * Object Type:         Push Button                        
*       * Snippet Number:      22                                 
*       *                                                         
*       *********************************************************
*
FUNCTION _2W50N759Y     &&  bt_env VALID
#REGION 1
DO CASE
 CASE wtipo_env = 1
  wtipo_env = 2
  SHOW GET bt_env, 1 PROMPT "FU"
 CASE wtipo_env = 2
  wtipo_env = 3
  SHOW GET bt_env, 1 PROMPT "PR"
 CASE wtipo_env = 3
  wtipo_env = 1
  SHOW GET bt_env, 1 PROMPT "FO"
ENDCASE
DO env_list
SHOW GETS
*--

*       *********************************************************
*       *                                                         
*       * _2W50N75A0           pastae_dat VALID                   
*       *                                                         
*       * Function Origin:                                        
*       *                                                         
*       * From Platform:       Windows                            
*       * From Screen:         LOGISTIC,     Record Number:  119  
*       * Variable:            pastae_dat                         
*       * Called By:           VALID Clause                       
*       * Object Type:         Field                              
*       * Snippet Number:      23                                 
*       *                                                         
*       *********************************************************
*
FUNCTION _2W50N75A0     &&  pastae_dat VALID
#REGION 1
pastae_sem = dia_semana(pastae_dat)
SHOW GETS
*--

*       *********************************************************
*       *                                                         
*       * _2W50N75A1           bt_ret VALID                       
*       *                                                         
*       * Function Origin:                                        
*       *                                                         
*       * From Platform:       Windows                            
*       * From Screen:         LOGISTIC,     Record Number:  122  
*       * Variable:            bt_ret                             
*       * Called By:           VALID Clause                       
*       * Object Type:         Push Button                        
*       * Snippet Number:      24                                 
*       *                                                         
*       *********************************************************
*
FUNCTION _2W50N75A1     &&  bt_ret VALID
#REGION 1
DO CASE
 CASE wtipo_ret = 1
  wtipo_ret = 2
  SHOW GET bt_ret, 1 PROMPT "FU"
 CASE wtipo_ret = 2
  wtipo_ret = 3
  SHOW GET bt_ret, 1 PROMPT "PR"
 CASE wtipo_ret = 3
  wtipo_ret = 1
  SHOW GET bt_ret, 1 PROMPT "FO"
ENDCASE
DO ret_list
SHOW GETS
*--

*       *********************************************************
*       *                                                         
*       * _2W50N75A3           rets VALID                         
*       *                                                         
*       * Function Origin:                                        
*       *                                                         
*       * From Platform:       Windows                            
*       * From Screen:         LOGISTIC,     Record Number:  123  
*       * Variable:            rets                               
*       * Called By:           VALID Clause                       
*       * Object Type:         Popup                              
*       * Snippet Number:      25                                 
*       *                                                         
*       *********************************************************
*
FUNCTION _2W50N75A3     &&  rets VALID
#REGION 1
DO busca_end
SHOW GETS
*--

*       *********************************************************
*       *                                                         
*       * _2W50N75A5           pastar_dat VALID                   
*       *                                                         
*       * Function Origin:                                        
*       *                                                         
*       * From Platform:       Windows                            
*       * From Screen:         LOGISTIC,     Record Number:  124  
*       * Variable:            pastar_dat                         
*       * Called By:           VALID Clause                       
*       * Object Type:         Field                              
*       * Snippet Number:      26                                 
*       *                                                         
*       *********************************************************
*
FUNCTION _2W50N75A5     &&  pastar_dat VALID
#REGION 1
pastar_sem = dia_semana(pastar_dat)
SHOW GETS
*--

*       *********************************************************
*       *                                                         
*       * _2W50N75AH           bt_cli VALID                       
*       *                                                         
*       * Function Origin:                                        
*       *                                                         
*       * From Platform:       Windows                            
*       * From Screen:         LOGISTIC,     Record Number:  127  
*       * Variable:            bt_cli                             
*       * Called By:           VALID Clause                       
*       * Object Type:         Push Button                        
*       * Snippet Number:      27                                 
*       *                                                         
*       *********************************************************
*
FUNCTION _2W50N75AH     &&  bt_cli VALID
#REGION 1
DO busca_clip
*--

*       *********************************************************
*       *                                                         
*       * _2W50N75A8           bt_log VALID                       
*       *                                                         
*       * Function Origin:                                        
*       *                                                         
*       * From Platform:       Windows                            
*       * From Screen:         LOGISTIC,     Record Number:  129  
*       * Variable:            bt_log                             
*       * Called By:           VALID Clause                       
*       * Object Type:         Push Button                        
*       * Snippet Number:      28                                 
*       *                                                         
*       *********************************************************
*
FUNCTION _2W50N75A8     &&  bt_log VALID
#REGION 1
DO CASE
CASE bt_log = 1
	DO grava_log
	CLEAR READ
CASE bt_log = 2
	DO imp_log
CASE bt_log = 3
	IF !inc_log
		CONF = winconf("ATENÇÃO", ;
			"Tem certeza que deseja excluir esta planilha?")
		IF CONF
			hulp = lm.id
			SELECT * ;
				FROM contas c ;
				WHERE c.log_id == hulp ;
					AND c.situacao != 'A' ;
				INTO CURSOR tijde
			SELE tijde
			IF RECCOUNT() > 0
				DO WINALERT WITH 'ATENÇÃO','Esta planilha não pode excluída, pois possui contas associadas liquidadas'
			ELSE
				SELECT contas
				DELETE FOR contas.log_id == hulp		
				SELECT log_prd
				DELETE FOR log_prd.log_id == hulp
				SELECT lm
				DELETE
				CLEAR READ
			ENDIF
		ENDIF
	ENDIF
CASE bt_log = 4
	DO cont_log.spr
CASE bt_log = 5
	DO praktijk.spr
CASE bt_log = 6
	CLEAR READ
ENDCASE
SHOW GETS
*--


*       *********************************************************
*       *                                                         
*       * _2W50N75AJ           Read Level When                    
*       *                                                         
*       * Function Origin:                                        
*       *                                                         
*       *                                                         
*       * From Platform:       Windows                            
*       * From Screen:         LOGISTIC                           
*       * Called By:           READ Statement                     
*       * Snippet Number:      29                                 
*       *                                                         
*       *********************************************************
*
FUNCTION _2W50N75AJ     && Read Level When
*
* When Code from screen: LOGISTIC
*
#REGION 1
IF inc_log
 SHOW GET bt_atu DISABLE
 SHOW GET bt_log, 1 PROMPT "Gravar"
 SHOW GET bt_log, 4 DISABLE
ELSE
 SHOW GET bt_atu ENABLE
 SHOW GET bt_log, 1 PROMPT "Alterar"
 SHOW GET bt_log, 4 ENABLE
ENDIF
DO CASE
 CASE wtipo_env = 1
  SHOW GET bt_env, 1 PROMPT "FO"
 CASE wtipo_env = 2
  SHOW GET bt_env, 1 PROMPT "FU"
 CASE wtipo_env = 3
  SHOW GET bt_env, 1 PROMPT "PR"
ENDCASE
DO CASE
 CASE wtipo_ret = 1
  SHOW GET bt_ret, 1 PROMPT "FO"
 CASE wtipo_ret = 2
  SHOW GET bt_ret, 1 PROMPT "FU"
 CASE wtipo_ret = 3
  SHOW GET bt_ret, 1 PROMPT "PR"
ENDCASE
SHOW GETS
*--

*       *********************************************************
*       *                                                         
*       * _2W50N75AK           Read Level Show                    
*       *                                                         
*       * Function Origin:                                        
*       *                                                         
*       *                                                         
*       * From Platform:       Windows                            
*       * From Screen:         LOGISTIC                           
*       * Called By:           READ Statement                     
*       * Snippet Number:      30                                 
*       *                                                         
*       *********************************************************
*
FUNCTION _2W50N75AK     && Read Level Show
PRIVATE currwind
STORE WOUTPUT() TO currwind
*
* Show Code from screen: LOGISTIC
*
#REGION 1
* PRIVATE currwind
* STORE WOUTPUT() TO currwind
* IF SYS(2016) = "_2W50N7580" .OR. SYS(2016) = "*"
*  ACTIVATE WINDOW SAME _2w50n7580
*  @   3.308 ,  17.200  SAY wlocal FONT "MS Sans Serif", 8 SIZE  ;
*   1.000 , 99.800 , 0.000  COLOR RGB(,,,192,192,192)
*  @  12.077 ,  26.800  SAY wcoord FONT "MS Sans Serif", 8 SIZE  ;
*   1.000 , 44.800 , 0.000  COLOR RGB(,,,192,192,192)
*  @  13.923 ,  26.800  SAY wc_end FONT "MS Sans Serif", 8 SIZE  ;
*   1.000 , 44.800 , 0.000  COLOR RGB(,,,192,192,192)
*  @  23.154 ,  26.800  SAY wc_hotel FONT "MS Sans Serif", 8  ;
*   SIZE 1.000 , 40.000 , 0.000  COLOR RGB(,,,192,192,192)
*  @  10.231 , 106.000  SAY nprof FONT "MS Sans Serif", 8 SIZE  ;
*   1.000 , 4.000 , 0.000  COLOR RGB(,,,255,255,255)
*  @  12.077 ,  77.200  SAY wprof FONT "MS Sans Serif", 8 SIZE  ;
*   1.000 , 44.800 , 0.000  COLOR RGB(,,,192,192,192)
*  @  13.923 ,  77.200  SAY wp_end FONT "MS Sans Serif", 8 SIZE  ;
*   1.000 , 44.800 , 0.000  COLOR RGB(,,,192,192,192)
*  @  23.154 ,  77.200  SAY wp_hotel FONT "MS Sans Serif", 8  ;
*   SIZE 1.000 , 40.000 , 0.000  COLOR RGB(,,,192,192,192)
*  @  29.615 ,  24.400  SAY eds_forn FONT "MS Sans Serif", 8  ;
*   SIZE 2.000 , 18.400 , 0.000  COLOR RGB(,,,192,192,192)
*  @  29.615 ,  49.600  SAY enb_forn FONT "MS Sans Serif", 8  ;
*   SIZE 2.000 , 18.400 , 0.000  COLOR RGB(,,,192,192,192)
*  @  29.615 ,  74.800  SAY ecpu_forn FONT "MS Sans Serif", 8  ;
*   SIZE 2.000 , 18.400 , 0.000  COLOR RGB(,,,192,192,192)
*  @  29.615 , 100.000  SAY erp_forn FONT "MS Sans Serif", 8  ;
*   SIZE 2.000 , 18.400 , 0.000  COLOR RGB(,,,192,192,192)
*  @  16.231 , 161.200  SAY pastae_sem FONT "MS Sans Serif", 8  ;
*   SIZE 1.000 , 15.800 , 0.000  COLOR RGB(0,0,128,192,192,192)
*  @  32.846 , 161.200  SAY pastar_sem FONT "MS Sans Serif", 8  ;
*   SIZE 1.000 , 15.800 , 0.000  COLOR RGB(0,0,128,192,192,192)
*  @   0.538 ,  14.800  SAY subarea.sigla + " " + area.descricao +  ;
*   " (" + ALLTRIM(STR(mc.primario, 10)) + ")" FONT  ;
*   "MS Sans Serif", 8 SIZE 1.000 , 92.800 , 0.000  COLOR RGB(,,, ;
*   192,192,192)
*  @   0.538 , 125.400  SAY mc.numero FONT "MS Sans Serif", 8  ;
*   SIZE 1.000 , 6.200 , 0.000  COLOR RGB(,,,192,192,192)
*  @   0.538 , 173.400  SAY nalu FONT "MS Sans Serif", 8 SIZE  ;
*   1.000 , 6.200 , 0.000  COLOR RGB(,,,192,192,192)
* ENDIF
* IF !EMPTY(currwind)
*  ACTIVATE WINDOW SAME (currwind)
* ENDIF
*--
IF SYS(2016) = "_2W50N7580" OR SYS(2016) = "*"
	ACTIVATE WINDOW _2w50n7580 SAME
	@ 4.692,24.400 SAY subarea.sigla + " " + area.descricao + " (" + ALLTRIM(STR(mc.primario, 10)) + ")" ;
		SIZE 1.000,103.400, 0.000 ;
		FONT "Arial", 8 ;
		COLOR RGB(0,0,0,255,255,255)
	@ 4.692,150.200 SAY mc.numero ;
		SIZE 1.000,13.400, 0.000 ;
		FONT "Arial", 8 ;
		COLOR RGB(0,0,0,255,255,255)
	@ 4.692,188.600 SAY nalu ;
		SIZE 1.000,6.200, 0.000 ;
		FONT "Arial", 8 ;
		COLOR RGB(0,0,0,255,255,255)
	@ 9.308,24.400 SAY wlocal ;
		SIZE 1.000,25.600, 0.000 ;
		FONT "Arial", 8 ;
		COLOR RGB(0,0,0,255,255,255)
	@ 14.231,24.400 SAY wcoord ;
		SIZE 3.000,31.200, 0.000 ;
		FONT "Arial", 8 ;
		COLOR RGB(0,0,0,255,255,255)
	@ 14.231,60.400 SAY wc_end ;
		SIZE 3.000,31.200, 0.000 ;
		FONT "Arial", 8 ;
		COLOR RGB(0,0,0,255,255,255)
	@ 18.538,24.400 SAY wc_hotel ;
		SIZE 1.000,40.000, 0.000 ;
		FONT "Arial", 8 ;
		COLOR RGB(0,0,0,255,255,255)
	@ 21.000,24.400 SAY wprof ;
		SIZE 3.000,31.200, 0.000 ;
		FONT "Arial", 8 ;
		COLOR RGB(0,0,0,255,255,255)
	@ 21.000,96.400 SAY wp_end ;
		SIZE 3.000,31.200, 0.000 ;
		FONT "Arial", 8 ;
		COLOR RGB(0,0,0,255,255,255)
	@ 22.538,9.200 SAY nprof ;
		SIZE 1.000,4.000, 0.000 ;
		FONT "Arial", 8 ;
		COLOR RGB(,,,255,255,255)
	@ 25.308,24.400 SAY wp_hotel ;
		SIZE 1.000,40.000, 0.000 ;
		FONT "Arial", 8 ;
		COLOR RGB(0,128,128,255,255,255)
	@ 30.538,24.400 SAY eds_forn ;
		SIZE 1.000,80.000, 0.000 ;
		FONT "Arial", 8 ;
		COLOR RGB(0,0,0,255,255,255)
	@ 32.692,24.400 SAY enb_forn ;
		SIZE 1.000,80.000, 0.000 ;
		FONT "Arial", 8 ;
		COLOR RGB(0,0,0,255,255,255)
	@ 34.846,24.400 SAY ecpu_forn ;
		SIZE 1.000,80.000, 0.000 ;
		FONT "Arial", 8 ;
		COLOR RGB(0,0,0,255,255,255)
	@ 37.000,24.400 SAY erp_forn ;
		SIZE 1.000,80.000, 0.000 ;
		FONT "Arial", 8 ;
		COLOR RGB(0,0,0,255,255,255)
	@ 41.923,83.600 SAY pastae_sem ;
		SIZE 1.000,15.800, 0.000 ;
		FONT "Arial", 8 ;
		COLOR RGB(0,0,0,255,255,255)
	@ 44.385,83.600 SAY pastar_sem ;
		SIZE 1.000,15.800, 0.000 ;
		FONT "Arial", 8 ;
		COLOR RGB(0,0,0,255,255,255)
ENDIF
IF NOT EMPTY(currwind)
	ACTIVATE WINDOW (currwind) SAME
ENDIF