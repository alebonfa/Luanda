*       *********************************************************
*       *                                                         
*       * 15/10/2013           DESKSMSR.SPR              16:05:37 
*       *                                                         
*       *********************************************************
*       *                                                         
*       * Author's Name                                           
*       *                                                         
*       * Copyright (c) 2013 Company Name                         
*       * Address                                                 
*       * City,     Zip                                           
*       *                                                         
*       * Description:                                            
*       * This program was automatically generated by GENSCRN.    
*       *                                                         
*       *********************************************************


#REGION 0
REGIONAL m.currarea, m.talkstat, m.compstat

IF SET("TALK") = "ON"
	SET TALK OFF
	m.talkstat = "ON"
ELSE
	m.talkstat = "OFF"
ENDIF
m.compstat = SET("COMPATIBLE")
SET COMPATIBLE FOXPLUS

m.rborder = SET("READBORDER")
SET READBORDER ON

m.currarea = SELECT()


*       *********************************************************
*       *                                                         
*       *               Windows Window definitions                
*       *                                                         
*       *********************************************************
*

MODIFY WINDOW SCREEN ;
	AT  0.000, 0.000  ;
	SIZE 34.769,146.600 ;
	TITLE "Exportação para SMSr" ;
	FONT "MS Sans Serif", 8 ;
	NOFLOAT ;
	NOCLOSE ;
	NOMINIMIZE
MOVE WINDOW SCREEN CENTER
CLEAR

*       *********************************************************
*       *                                                         
*       *         DESKSMSR/Windows Setup Code - SECTION 2         
*       *                                                         
*       *********************************************************
*

#REGION 1
SET EXCLUSIVE OFF
SET DELETE ON
SET SAFE OFF
SET SYSMENU OFF
SET TALK ON

USE Setupsms
Subdir  = Setupsms.Drive+sys(2003)
Dircont = Subdir + "\contas"
DirSMSr = ALLTR(Setupsms.Dsms)
USE

DO Abr_cont

SELE 0
USE &dirSMSr\log ORDER TAG id

SELE Log
GO BOTT
lastId = Log.id
APPEND BLANK
REPLACE Log.id WITH lastId + 1
REPLACE Log.di WITH DATE()
REPLACE Log.hi WITH TIME()

DECLARE List_exp[1]
List_exp[1] = ''
Exps = 1


*       *********************************************************
*       *                                                         
*       *             DESKSMSR/Windows Screen Layout              
*       *                                                         
*       *********************************************************
*

#REGION 1
@ 0.000,0.000 TO 3.769,146.600 ;
	PATTERN 1 ;
	PEN 1, 8 ;
	COLOR RGB(192,192,192,0,128,0)
@ 5.615,7.400 GET exps ;
 	PICTURE "@&N" ;
	FROM list_exp ;
	SIZE 25.385,131.800 ;
	DEFAULT 1 ;
	FONT "MS Sans Serif", 8 ;
	COLOR RGB(0,128,0,255,255,255),RGB(0,128,0,255,255,255)
@ 1.077,48.400 SAY "EXPORTAÇÃO PARA SMSr" ;
	PICTURE "@I" ;
	FONT "Arial", 14 ;
	STYLE "BT" ;
	COLOR RGB(255,255,255,,,,)
@ 32.308,7.200 GET bt_sair ;
	PICTURE "@*HT Sair" ;
	SIZE 1.429,132.200,0.800 ;
	DEFAULT 1 ;
	FONT "Arial", 8 ;
	DISABLE



READ CYCLE ;
	WHEN _3wj0yhsi2()

MODIFY WINDOW SCREEN
SELECT (m.currarea)


#REGION 0

SET READBORDER &rborder

IF m.talkstat = "ON"
	SET TALK ON
ENDIF
IF m.compstat = "ON"
	SET COMPATIBLE ON
ENDIF


*       *********************************************************
*       *                                                         
*       * _3WJ0YHSI2           Read Level When                    
*       *                                                         
*       * Function Origin:                                        
*       *                                                         
*       *                                                         
*       * From Platform:       Windows                            
*       * From Screen:         DESKSMSR                           
*       * Called By:           READ Statement                     
*       * Snippet Number:      1                                  
*       *                                                         
*       *********************************************************
*
FUNCTION _3wj0yhsi2     && Read Level When
*
* When Code from screen: DESKSMSR
*
#REGION 1
SHOW GETS

WAIT WINDOW 'Exportando: Colaboradores...' NOWAIT
auxdest = DirSMSr + '\SMS08'
SELECT p.Codigo AS sisquali, ;
		p.nome AS nome, ;
		p.cidade AS cidade, ;
		p.uf AS uf, ;
		p.email AS email, ;
		p.fone AS telefone, ;
		p.celular AS celular, ;
		p.area_id AS polo ;
	FROM Funcs p ;
	WHERE ISBLANK(p.status) ;
		AND !ISBLANK(p.fone) ;
	INTO TABLE &auxdest

Nrec = 0
SELE SMS08
Nrec = RECCOUNT()

DECLARE List_exp[ALEN(List_exp)+1]
List_exp[ALEN(List_exp)] = "Colaboradores - " + ALLT(STR(Nrec,10)) + " registros."
SHOW GETS

WAIT WINDOW 'Exportando: Turmas...' NOWAIT
auxdest = DirSMSr + '\SMS01'
SELECT m.Primario AS sisquali, ;
		m.Area AS polo, ;
		m.Subarea AS curso ;
	FROM Modulos m ;
	WHERE m.Status = 1 ;
	INTO TABLE &auxdest

Nrec = 0
SELE SMS01
Nrec = RECCOUNT()
List_exp[1] = "Turmas - " + ALLT(STR(Nrec,10)) + " registros."
SHOW GETS

WAIT WINDOW 'Exportando: Polos...' NOWAIT
auxdest = DirSMSr + '\SMS02'
SELECT a.Codigo AS sisquali, ;
		a.Descricao AS nome ;
	FROM Area a ;
	WHERE ( a.Codigo IN (SELECT DIST Polo FROM SMS01) OR ;
		a.Codigo IN (SELECT DIST Polo FROM SMS08) ) ;
	INTO TABLE &auxdest

Nrec = 0
SELE SMS02
Nrec = RECCOUNT()

DECLARE List_exp[ALEN(List_exp)+1]
List_exp[ALEN(List_exp)] = "Polos - " + ALLT(STR(Nrec,10)) + " registros."
SHOW GETS

WAIT WINDOW 'Exportando: Cursos...' NOWAIT
auxdest = DirSMSr + '\SMS03'
SELECT s.Codigo AS sisquali, ;
		s.Sigla AS nome ;
	FROM Subarea s ;
	WHERE s.Codigo IN (SELECT DIST Curso FROM SMS01) ;
	INTO TABLE &auxdest

Nrec = 0
SELE SMS03
Nrec = RECCOUNT()

DECLARE List_exp[ALEN(List_exp)+1]
List_exp[ALEN(List_exp)] = "Cursos - " + ALLT(STR(Nrec,10)) + " registros."
SHOW GETS

WAIT WINDOW 'Exportando: Temáticas...' NOWAIT
auxdest = DirSMSr + '\SMS05'
SELECT d.Codigo AS sisquali, ;
		d.Descricao AS nome ;
	FROM Discip d ;
	WHERE !d.terceiros ;
	INTO TABLE &auxdest

Nrec = 0
SELE SMS05
Nrec = RECCOUNT()

DECLARE List_exp[ALEN(List_exp)+1]
List_exp[ALEN(List_exp)] = "Temáticas - " + ALLT(STR(Nrec,10)) + " registros."
SHOW GETS

WAIT WINDOW 'Exportando: Aulas...' NOWAIT
auxdest = DirSMSr + '\SMS07'
SELECT md.primario AS sisquali, ;
		mc.curso_id AS turma, ;
		md.id_prof AS palestra, ;
		md.id_disc AS tematica, ;
		data AS data ;
	FROM Mod_cab mc, Mod_disc md ;
	WHERE md.modulo == mc.primario ;
		AND mc.curso_id IN (SELECT sisquali FROM SMS01) ;
		AND md.data > DATE() - 10 ;
	INTO TABLE &auxdest

Nrec = 0
SELE SMS07
Nrec = RECCOUNT()

DECLARE List_exp[ALEN(List_exp)+1]
List_exp[ALEN(List_exp)] = "Aulas - " + ALLT(STR(Nrec,10)) + " registros."
SHOW GETS

WAIT WINDOW 'Exportando: Palestrantes...' NOWAIT
auxdest = DirSMSr + '\SMS04'
SELECT p.Codigo AS sisquali, ;
		p.nome AS nome, ;
		p.cidade AS cidade, ;
		p.uf AS uf, ;
		p.email AS email, ;
		p.celular1 AS telefone, ;
		p.area_peq, ;
		p.area_grd, ;
		p.area_slv, ;
		p.area_sp ;
	FROM Prof p ;
	WHERE p.codigo IN (SELECT palestra FROM SMS07) ;
		OR (!p.Inativo AND !ISBLANK(p.celular1)) ;
	INTO TABLE &auxdest

Nrec = 0
SELE SMS04
Nrec = RECCOUNT()

DECLARE List_exp[ALEN(List_exp)+1]
List_exp[ALEN(List_exp)] = "Palestrantes - " + ALLT(STR(Nrec,10)) + " registros."
SHOW GETS

WAIT WINDOW 'Exportando: Palestrante X Temática...' NOWAIT
auxdest = DirSMSr + '\SMS06'
SELECT pd.prof_id AS palestra, ;
		pd.disc_id AS tematica ;
	FROM Profdisc pd ;
	WHERE pd.prof_id IN (SELECT sisquali FROM SMS04) ;
		AND pd.disc_id IN (SELECT sisquali FROM SMS05) ;
	INTO TABLE &auxdest

Nrec = 0
SELE SMS06
Nrec = RECCOUNT()

DECLARE List_exp[ALEN(List_exp)+1]
List_exp[ALEN(List_exp)] = "Palestrantes X Temáticas - " + ALLT(STR(Nrec,10)) + " registros."
SHOW GETS

WAIT WINDOW 'Exportando: Alunos x Turmas...' NOWAIT
auxdest = DirSMSr + '\SMS09'
SELECT cc.Codcli AS aluno, ;
		cc.Codarea AS polo, ;
		cc.Codsub AS curso, ;
		cc.situacao AS situacao ;
	FROM Clicurso cc ;
	WHERE cc.Codarea + cc.Codsub IN (SELECT Polo+Curso FROM SMS01) ;
	INTO TABLE &auxdest

Nrec = 0
SELE SMS09
Nrec = RECCOUNT()

DECLARE List_exp[ALEN(List_exp)+1]
List_exp[ALEN(List_exp)] = "Alunos X Turmas - " + ALLT(STR(Nrec,10)) + " registros."
SHOW GETS

WAIT WINDOW 'Exportando: Alunos...' NOWAIT
auxdest = DirSMSr + '\SMS10'
SELECT c.Codigo AS sisquali, ;
		c.nome AS nome, ;
		c.cidade AS cidade, ;
		c.uf AS uf, ;
		c.email AS email, ;
		c.fone2 AS telefone, ;
		{  /  /    } AS atraso ;
	FROM Cliente c ;
	WHERE c.Codigo IN (SELECT aluno FROM SMS09) ;
	INTO TABLE &auxdest

SELECT SMS10
INDEX ON sisquali TAG sisquali


SELECT r.codcli AS sisquali, ;
		MIN(r.datavencim) AS atraso ;
	FROM recebs r, SMS10 s ;
	WHERE r.codcli == s.sisquali ;
		AND r.situacao $ 'AVPC' ;
		AND r.datavencim < DATE() ;
	GROUP BY r.codcli ;
	ORDER BY r.codcli ;
	INTO CURSOR priatraso
	
SELE priatraso


I = 0
SELE priatraso
SCAN
	WAIT WIND STR(I,10) NOWAIT
	I = I + 1
	SELECT SMS10
	SEEK priatraso.sisquali
	REPLACE SMS10.atraso WITH priatraso.atraso
	SELE priatraso
ENDSCAN

SELE SMS10


Nrec = 0
SELE SMS10
Nrec = RECCOUNT()

DECLARE List_exp[ALEN(List_exp)+1]
List_exp[ALEN(List_exp)] = "Alunos - " + ALLT(STR(Nrec,10)) + " registros."
SHOW GETS

SELE Log
REPLACE Log.df WITH DATE()
REPLACE Log.hf WITH TIME()

CLEAR READ
