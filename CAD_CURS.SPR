*       *********************************************************
*       *                                                         
*       * 04/03/2013           CAD_CURS.SPR              09:28:55 
*       *                                                         
*       *********************************************************
*       *                                                         
*       * Author's Name                                           
*       *                                                         
*       * Copyright (c) 2013 Company Name                         
*       * Address                                                 
*       * City,     Zip                                           
*       *                                                         
*       * Description:                                            
*       * This program was automatically generated by GENSCRN.    
*       *                                                         
*       *********************************************************


#REGION 0
REGIONAL m.currarea, m.talkstat, m.compstat

IF SET("TALK") = "ON"
	SET TALK OFF
	m.talkstat = "ON"
ELSE
	m.talkstat = "OFF"
ENDIF
m.compstat = SET("COMPATIBLE")
SET COMPATIBLE FOXPLUS

m.rborder = SET("READBORDER")
SET READBORDER ON

*       *********************************************************
*       *                                                         
*       *               Windows Window definitions                
*       *                                                         
*       *********************************************************
*

IF NOT WEXIST("_2vo0yod21") ;
	OR UPPER(WTITLE("_2VO0YOD21")) == "_2VO0YOD21.PJX" ;
	OR UPPER(WTITLE("_2VO0YOD21")) == "_2VO0YOD21.SCX" ;
	OR UPPER(WTITLE("_2VO0YOD21")) == "_2VO0YOD21.MNX" ;
	OR UPPER(WTITLE("_2VO0YOD21")) == "_2VO0YOD21.PRG" ;
	OR UPPER(WTITLE("_2VO0YOD21")) == "_2VO0YOD21.FRX" ;
	OR UPPER(WTITLE("_2VO0YOD21")) == "_2VO0YOD21.QPR"
	DEFINE WINDOW _2vo0yod21 ;
		AT  0.000, 0.000  ;
		SIZE 51.538,198.000 ;
		TITLE "Cadastro de Cursos" ;
		FONT "MS Sans Serif", 8 ;
		FLOAT ;
		NOCLOSE ;
		MINIMIZE ;
		SYSTEM ;
		COLOR RGB(,,,255,255,255)
	MOVE WINDOW _2vo0yod21 CENTER
ENDIF


*       *********************************************************
*       *                                                         
*       *         CAD_CURS/Windows Setup Code - SECTION 2         
*       *                                                         
*       *********************************************************
*

#REGION 1
STORE .F. TO lcurso, larea, linicio, lfim, lstatus, lempr, lcert, lmodalidade, vis_impr
STORE 1 TO subas, areas, mes_is, mes_fs, stats, emps, wModalidade
STORE INT(VAL(SUBSTR(DTOC(DATE()), 7, 4))) TO ano_is, ano_fs
STORE 0 TO wmods, wparcs
STORE 0.00  TO winvest, lokWaardCoord
wcoord_id = 0
wcoord = ""
DIMENSION list_emp[ 1]
SELECT NOME, id FROM empresas ORDER BY empresas.nome INTO ARRAY  ;
	list_emp
DIMENSION reg_emp[ 1]
SELECT id FROM empresas ORDER BY empresas.nome INTO ARRAY  ;
	reg_emp
DIMENSION list_cer[ 1]
SELECT ALLTRIM(sigla) + " - " + NOME, id FROM certif ORDER BY  ;
	certif.sigla INTO ARRAY list_cer
DIMENSION reg_cer[ 1]
SELECT id FROM certif ORDER BY certif.sigla INTO ARRAY reg_cer
DIMENSION lst_area[ 1]
SELECT descricao, codigo FROM area ORDER BY descricao INTO ARRAY  ;
	lst_area
DIMENSION reg_area[ 1]
SELECT codigo FROM area ORDER BY descricao INTO ARRAY reg_area
DIMENSION lst_suba[ 1]
SELECT sigla, codigo FROM subarea ORDER BY sigla INTO ARRAY  ;
	lst_suba
DIMENSION reg_suba[ 1]
SELECT codigo FROM subarea ORDER BY sigla INTO ARRAY reg_suba
DIMENSION list_mes[ 12]
list_mes[ 01] = "JANEIRO  "
list_mes[ 02] = "FEVEREIRO"
list_mes[ 03] = "MARÇO    "
list_mes[ 04] = "ABRIL    "
list_mes[ 05] = "MAIO     "
list_mes[ 06] = "JUNHO    "
list_mes[ 07] = "JULHO    "
list_mes[ 08] = "AGOSTO   "
list_mes[ 09] = "SETEMBRO "
list_mes[ 10] = "OUTUBRO  "
list_mes[ 11] = "NOVEMBRO "
list_mes[ 12] = "DEZEMBRO "
DIMENSION list_stat[ 4, 2]
list_stat[ 1, 1] = "ATIVO    "
list_stat[ 1, 2] = 1
list_stat[ 2, 1] = "CONCLUÍDO"
list_stat[ 2, 2] = 2
list_stat[ 3, 1] = "LANÇADO  "
list_stat[ 3, 2] = 3
list_stat[ 4, 1] = "ABORTADO "
list_stat[ 4, 2] = 4
DIMENSION lst_curs[ 1]
CURS = 1
inclui = .T.
DIMENSION list_doc[ 9]
list_doc[ 1] = "Diploma de Graduação          "
list_doc[ 2] = "Histórico Escolar de Graduação"
list_doc[ 3] = "RG                            "
list_doc[ 4] = "CPF                           "
list_doc[ 5] = "CRMV                          "
list_doc[ 6] = "Comprovante de Endereço       "
list_doc[ 7] = "Curriculum Vitae              "
list_doc[ 8] = "Certidão de Casamento         "
list_doc[ 9] = "3 Fotos 3x4                   "
totais = ''
STORE {  /  /    } TO di_inicio, df_inicio, di_final, df_final
STORE .F. TO lcur
STORE '' TO auxfilt
DIMENSION list_cur[ 1]
SELECT cursos.sigla, ;
	cursos.id ;
	FROM cursos ;
	ORDER BY cursos.sigla  ;
	INTO ARRAY list_cur

DIMENSION lijWijzi[1]

*       *********************************************************
*       *                                                         
*       *             CAD_CURS/Windows Screen Layout              
*       *                                                         
*       *********************************************************
*

#REGION 1
IF WVISIBLE("_2vo0yod21")
	ACTIVATE WINDOW _2vo0yod21 SAME
ELSE
	ACTIVATE WINDOW _2vo0yod21 NOSHOW
ENDIF
@ 12.692,3.200 SAY "Qde. Módulos" ;
	FONT "Arial", 8 ;
	STYLE "T" ;
	COLOR RGB(128,128,128,,,,)
@ 12.692,65.600 SAY "Investimento" ;
	FONT "Arial", 8 ;
	STYLE "T" ;
	COLOR RGB(128,128,128,,,,)
@ 47.385,0.000 TO 47.385,198.000 ;
	PEN 1, 8 ;
	STYLE "1" ;
	COLOR RGB(0,128,128,0,128,128)
@ 10.231,130.400 SAY "Coordenador" ;
	FONT "Arial", 8 ;
	STYLE "T" ;
	COLOR RGB(128,128,128,0,0,255)
@ 12.692,102.400 SAY "Qde. Parcelas" ;
	FONT "Arial", 8 ;
	STYLE "T" ;
	COLOR RGB(128,128,128,,,,)
@ 0.000,0.000 TO 3.769,198.000 ;
	PATTERN 1 ;
	PEN 1, 8 ;
	COLOR RGB(0,128,128,0,128,128)
@ 0.846,139.200 SAY "CADASTRO DE CURSOS" ;
	FONT "Arial", 18 ;
	STYLE "T" ;
	COLOR RGB(255,255,255,255,255,255)
@ 14.769,0.000 TO 14.769,198.000 ;
	PEN 1, 8 ;
	STYLE "1" ;
	COLOR RGB(0,128,128,0,128,128)
@ 18.154,0.000 TO 18.154,198.000 ;
	PEN 1, 8 ;
	STYLE "1" ;
	COLOR RGB(0,128,128,0,128,128)
@ 7.769,3.200 SAY "Início" ;
	FONT "Arial", 8 ;
	STYLE "T" ;
	COLOR RGB(128,128,128,0,0,255)
@ 7.769,65.600 SAY "Final" ;
	FONT "Arial", 8 ;
	STYLE "T" ;
	COLOR RGB(128,128,128,0,0,255)
@ 16.077,17.600 SAY "Início" ;
	FONT "Arial", 8 ;
	STYLE "T" ;
	COLOR RGB(128,128,128,,,,)
@ 16.077,3.200 SAY "Consulta" ;
	FONT "Arial", 8 ;
	STYLE "BT" ;
	COLOR RGB(128,128,128,,,,)
@ 16.077,67.200 SAY "Final" ;
	FONT "Arial", 8 ;
	STYLE "T" ;
	COLOR RGB(128,128,128,,,,)
@ 12.692,130.400 SAY "Valor Coord" ;
	FONT "Arial", 8 ;
	STYLE "T" ;
	COLOR RGB(128,128,128,0,0,255)
@ 5.231,17.600 GET subas ;
	PICTURE "@^" ;
	FROM lst_suba ;
	SIZE 1.500,45.000 ;
	DEFAULT 1 ;
	FONT "Arial", 8 ;
	VALID _2VO0YOD2W() ;
	COLOR ,,,,,,,,RGB(0,0,0,,,,),RGB(0,0,0,,,,)
@ 5.231,80.000 GET areas ;
	PICTURE "@^" ;
	FROM lst_area ;
	SIZE 1.500,45.800 ;
	DEFAULT 1 ;
	FONT "Arial", 8 ;
	VALID _2VO0YOD2X() ;
	COLOR ,,,,,,,,RGB(0,0,0,,,,),RGB(0,0,0,,,,)
@ 5.308,145.600 GET wmodalidade ;
	PICTURE "@*RVN Presencial;EAD" ;
	SIZE 1.214,14.600,0.286 ;
	DEFAULT 1 ;
	FONT "Arial", 8 ;
	STYLE "T" ;
	VALID _3qa6a2zdh()
@ 5.231,173.800 GET stats ;
	PICTURE "@^" ;
	FROM list_stat ;
	SIZE 1.500,20.800 ;
	DEFAULT 1 ;
	FONT "Arial", 8
@ 7.692,17.600 GET mes_is ;
	PICTURE "@^" ;
	FROM list_mes ;
	SIZE 1.500,29.000 ;
	DEFAULT 1 ;
	FONT "Arial", 8
@ 7.923,50.200 GET ano_is ;
	SPINNER 1.000, 2003, 2020 ;
	PICTURE "@K" ;
	SIZE 0.857, 8.400 ;
	DEFAULT 2003.000 ;
	FONT "Arial", 8 ;
	COLOR ,RGB(,,,255,255,255)
@ 7.692,80.000 GET mes_fs ;
	PICTURE "@^" ;
	FROM list_mes ;
	SIZE 1.500,29.000 ;
	DEFAULT 1 ;
	FONT "Arial", 8
@ 7.923,114.200 GET ano_fs ;
	SPINNER 1.000, 2003, 2020 ;
	PICTURE "@K" ;
	SIZE 0.857, 8.400 ;
	DEFAULT 2003.000 ;
	FONT "Arial", 8 ;
	COLOR ,RGB(,,,255,255,255)
@ 10.231,146.000 GET wcoord_id ;
	SIZE 1.000,8.800 ;
	DEFAULT " " ;
	FONT "Arial", 8 ;
	PICTURE "@K" ;
	VALID _2VO0YOD33() ;
	COLOR ,RGB(0,0,0,255,255,255)
@ 10.154,155.400 GET busccoord ;
	PICTURE "@*HN ..." ;
	SIZE 1.143,3.800,0.800 ;
	DEFAULT 1 ;
	FONT "Arial", 8 ;
	VALID _2VO0YOD38()
@ 10.231,160.600 SAY wcoord ;
	SIZE 1.000,33.400 ;
	FONT "Arial", 8 ;
	COLOR RGB(0,0,0,255,255,255)
@ 10.154,17.600 GET emps ;
	PICTURE "@^" ;
	FROM list_emp ;
	SIZE 1.500,45.000 ;
	DEFAULT 1 ;
	FONT "Arial", 8 ;
	VALID _2VO0YOD31() ;
	COLOR ,,,,,,,,RGB(0,0,0,,,,),RGB(0,0,0,,,,)
@ 10.154,80.000 GET cers ;
	PICTURE "@^" ;
	FROM list_cer ;
	SIZE 1.500,46.600 ;
	DEFAULT 1 ;
	FONT "Arial", 8 ;
	VALID _2VO0YOD32() ;
	COLOR ,,,,,,,,RGB(0,0,0,,,,),RGB(0,0,0,,,,)
@ 12.692,18.000 GET wmods ;
	SIZE 1.000,13.600 ;
	DEFAULT " " ;
	FONT "Arial", 8 ;
	PICTURE "@K" ;
	COLOR ,RGB(,,,255,255,255)
@ 12.692,80.400 GET winvest ;
	SIZE 1.000,13.600 ;
	DEFAULT 0 ;
	FONT "Arial", 8 ;
	PICTURE "@K 99,999.99" ;
	COLOR ,RGB(,,,255,255,255)
@ 12.692,118.800 GET wparcs ;
	SIZE 1.000,6.400 ;
	DEFAULT " " ;
	FONT "Arial", 8 ;
	PICTURE "@K" ;
	COLOR ,RGB(,,,255,255,255)
@ 12.615,182.400 GET men_curso ;
	PICTURE "@*HN Adiciona" ;
	SIZE 1.143,12.200,0.800 ;
	DEFAULT 1 ;
	FONT "Arial", 8 ;
	VALID _2VO0YOD3A()
@ 20.385,2.600 GET Curs ;
 	PICTURE "@&N" ;
	FROM Lst_curs ;
	SIZE 20.571,137.571 ;
	DEFAULT 1 ;
	FONT "Courier New", 8 ;
	VALID _2VO0YOD3B() ;
	COLOR RGB(0,128,128,255,255,255),RGB(0,128,128,255,255,255)
@ 45.308,3.200 GET vis_impr ;
	PICTURE "@*C Visualiza" ;
	SIZE 1.308,13.000 ;
	DEFAULT 0 ;
	FONT "MS Sans Serif", 8 ;
	STYLE "T"
@ 45.538,168.000 GET teste ;
	PICTURE "@*HN Reposições Pendentes" ;
	SIZE 1.154,27.400,0.800 ;
	DEFAULT 1 ;
	FONT "MS Sans Serif", 8 ;
	VALID _2VO0YOD3P()
@ 48.615,1.600 GET m_curso ;
	PICTURE "@*HN Modulos;List. Simples;List. Completa;Exp Disciplinas;Espelho;Doc Pendentes;Excluir;Imprimir;Sair" ;
	SIZE 1.769,21.600,0.000 ;
	DEFAULT 1 ;
	FONT "MS Sans Serif", 8 ;
	VALID _3qa6a2zdq()
@ 5.308,3.200 GET lcurso ;
	PICTURE "@*C Turma" ;
	SIZE 1.214,10.600 ;
	DEFAULT 0 ;
	FONT "Arial", 8 ;
	STYLE "T" ;
	VALID _2VO0YOD3H() ;
	COLOR ,,,,,,,,RGB(128,128,128,,,,),RGB(128,128,128,,,,)
@ 5.308,65.600 GET larea ;
	PICTURE "@*C Área" ;
	SIZE 1.214,9.400 ;
	DEFAULT 0 ;
	FONT "Arial", 8 ;
	STYLE "T" ;
	VALID _2VO0YOD3I() ;
	COLOR ,,,,,,,,RGB(128,128,128,,,,),RGB(128,128,128,,,,)
@ 5.308,130.400 GET lmodalidade ;
	PICTURE "@*C Modalidade" ;
	SIZE 1.214,15.400 ;
	DEFAULT 0 ;
	FONT "Arial", 8 ;
	STYLE "T" ;
	VALID _3qa6a2zdu() ;
	COLOR ,,,,,,,,RGB(128,128,128,,,,),RGB(128,128,128,,,,)
@ 5.308,163.200 GET lstatus ;
	PICTURE "@*C Status" ;
	SIZE 1.214,10.800 ;
	DEFAULT 0 ;
	FONT "Arial", 8 ;
	STYLE "T" ;
	COLOR ,,,,,,,,RGB(128,128,128,,,,),RGB(128,128,128,,,,)
@ 10.231,3.200 GET lempr ;
	PICTURE "@*C Empresa" ;
	SIZE 1.214,13.000 ;
	DEFAULT 0 ;
	FONT "Arial", 8 ;
	STYLE "T" ;
	VALID _2VO0YOD3K() ;
	COLOR ,,,,,,,,RGB(128,128,128,,,,),RGB(128,128,128,,,,)
@ 10.231,65.600 GET lcert ;
	PICTURE "@*C Certifidora" ;
	SIZE 1.214,14.600 ;
	DEFAULT 0 ;
	FONT "Arial", 8 ;
	STYLE "T" ;
	VALID _3qa6a2zed() ;
	COLOR ,,,,,,,,RGB(128,128,128,,,,),RGB(128,128,128,,,,)
@ 42.846,3.000 SAY totais ;
	SIZE 1.000,134.857 ;
	FONT "Courier New", 8 ;
	COLOR RGB(0,0,0,255,255,255)
@ 18.846,3.000 SAY "TURMA       LOCAL                INÍCIO    FINAL     STATUS     CODIGO   ATIVO   BOLSA   INSCR    CONC   TRANC  TRANSF  DESIST   ABAND" ;
	SIZE 1.000,134.857 ;
	FONT "Courier New", 8 ;
	COLOR RGB(0,0,0,255,255,255)
@ 16.077,31.600 GET di_inicio ;
	SIZE 1.000,13.600 ;
	DEFAULT " " ;
	FONT "Arial", 8 ;
	PICTURE "@K" ;
	COLOR ,RGB(,,,255,255,255)
@ 16.077,48.400 GET df_inicio ;
	SIZE 1.000,13.600 ;
	DEFAULT " " ;
	FONT "Arial", 8 ;
	PICTURE "@K" ;
	COLOR ,RGB(,,,255,255,255)
@ 16.077,82.000 GET di_final ;
	SIZE 1.000,13.600 ;
	DEFAULT " " ;
	FONT "Arial", 8 ;
	PICTURE "@K" ;
	COLOR ,RGB(,,,255,255,255)
@ 16.077,98.800 GET df_final ;
	SIZE 1.000,13.600 ;
	DEFAULT " " ;
	FONT "Arial", 8 ;
	PICTURE "@K" ;
	COLOR ,RGB(,,,255,255,255)
@ 16.000,182.400 GET men_curso ;
	PICTURE "@*HN Filtra" ;
	SIZE 1.143,12.200,0.800 ;
	DEFAULT 1 ;
	FONT "Arial", 8 ;
	VALID _3qa6a2zee()
@ 15.846,148.800 GET curs ;
	PICTURE "@^" ;
	FROM list_cur ;
	SIZE 1.500,30.600 ;
	DEFAULT 1 ;
	FONT "Arial", 8 ;
	VALID _2VO0YOD2W() ;
	COLOR ,,,,,,,,RGB(0,0,0,,,,),RGB(0,0,0,,,,)
@ 15.923,133.600 GET lcur ;
	PICTURE "@*C Curso" ;
	SIZE 1.214,10.400 ;
	DEFAULT 0 ;
	FONT "Arial", 8 ;
	STYLE "T" ;
	VALID _2VO0YOD3H() ;
	COLOR ,,,,,,,,RGB(128,128,128,,,,),RGB(128,128,128,,,,)
@ 7.692,173.800 GET men_curso ;
	PICTURE "@*HN Atualização Geral" ;
	SIZE 1.143,20.800,0.800 ;
	DEFAULT 1 ;
	FONT "Arial", 8 ;
	VALID _3qa6a2zeh()
@ 12.692,146.000 GET lokWaardCoord ;
	SIZE 1.000,12.600 ;
	DEFAULT 0 ;
	FONT "Arial", 8 ;
	PICTURE "@K 99,999.99" ;
	COLOR ,RGB(,,,255,255,255)

IF NOT WVISIBLE("_2vo0yod21")
	ACTIVATE WINDOW _2vo0yod21
ENDIF

READ CYCLE ;
	WHEN _2VO0YOD3R() ;
	SHOW _2VO0YOD3S()

RELEASE WINDOW _2vo0yod21

#REGION 0

SET READBORDER &rborder

IF m.talkstat = "ON"
	SET TALK ON
ENDIF
IF m.compstat = "ON"
	SET COMPATIBLE ON
ENDIF



*       *********************************************************
*       *                                                         
*       *  CAD_CURS/Windows Supporting Procedures and Functions   
*       *                                                         
*       *********************************************************
*

#REGION 1
PROCEDURE mudancas
	IF (mes_is + (ano_is * 10)) <= (mes_fs + (ano_fs * 10))
		IF inclui
			SELECT modulos
			SEEK lst_suba(subas,2) + lst_area(areas,2)
			IF !FOUND()
				CALCULATE MAX(primario) TO ult_pri
				APPEND BLANK
				REPLACE modulos.primario WITH ult_pri + 1
				REPLACE modulos.area WITH lst_area(areas,2)
				REPLACE modulos.subarea WITH lst_suba(subas,2)
			ELSE
				DO winalert WITH "AVISO",  ;
					"CURSO JÁ CADASTRADO. ALTERAÇÕES PROCESSADAS."
			ENDIF
		ENDIF
		REPLACE modulos.mes_i WITH mes_is
		REPLACE modulos.ano_i WITH ano_is
		REPLACE modulos.mes_f WITH mes_fs
		REPLACE modulos.ano_f WITH ano_fs
		REPLACE modulos.status WITH list_stat(stats,2)
		REPLACE modulos.modus WITH wmods
		REPLACE modulos.parcs WITH wparcs
		REPLACE modulos.invest WITH winvest
		REPLACE modulos.modalidade WITH wModalidade
		REPLACE modulos.waardCoord WITH lokWaardCoord
		REPLACE modulos.empr_id WITH list_emp(emps,2)
		REPLACE modulos.cert_id WITH list_cer(cers,2)
		REPLACE modulos.coord_id WITH wcoord_id
	ELSE
		DO winalert WITH "AVISO",  ;
			"CURSO NÃO CADASTRADO! PERÍODO INVÁLIDO!"
	ENDIF
	wmods = 0
	wparcs = 0
	winvest = 0.00
	wModalidade = 1
	lokWaardCoord = 0.00
	wcoord_id = 0
	wcoord = ""
	inclui = .T.
	SHOW GET men_curso, 1 PROMPT "Adiciona"
	SHOW GET CURS ENABLE
	DO cur_list
	RETURN
	*--

PROCEDURE filtra
	auxfilt = ""
	IF lcurso
		auxfilt = auxfilt + "AND ALLT(Modulos.Subarea) == ALLT(Lst_suba[Subas,2]) "
	ENDIF
	IF larea
		auxfilt = auxfilt + "AND ALLT(Modulos.Area) == ALLT(Lst_area[Areas,2]) "
	ENDIF
	IF lempr
		auxfilt = auxfilt + "AND Modulos.Empr_id == List_emp[Emps,2] "
	ENDIF
	IF lmodalidade
		auxfilt = auxfilt + "AND Modulos.Modalidade == wModalidade "
	ENDIF
	IF lcert
		auxfilt = auxfilt + "AND Modulos.Cert_id == List_cer[Cers,2] "
	ENDIF
	IF !ISBLANK(di_inicio)
		auxfilt = auxfilt + "AND (STR(Modulos.Ano_i,4) + IIF(Modulos.Mes_i < 10, '0', '') + ALLTRIM(STR(Modulos.Mes_i,2)) + '99') >= DTOS(di_inicio) "
	ENDIF
	IF !ISBLANK(df_inicio)
		auxfilt = auxfilt + "AND (STR(Modulos.Ano_i,4) + IIF(Modulos.Mes_i < 10, '0', '') + ALLTRIM(STR(Modulos.Mes_i,2)) + '00') <= DTOS(df_inicio) "
	ENDIF
	IF !ISBLANK(di_final)
		auxfilt = auxfilt + "AND (STR(Modulos.Ano_f,4) + IIF(Modulos.Mes_f < 10, '0', '') + ALLTRIM(STR(Modulos.Mes_f,2)) + '99') >= DTOS(di_final) "
	ENDIF
	IF !ISBLANK(df_final)
		auxfilt = auxfilt + "AND (STR(Modulos.Ano_f,4) + IIF(Modulos.Mes_f < 10, '0', '') + ALLTRIM(STR(Modulos.Mes_f,2)) + '00') <= DTOS(df_final) "
	ENDIF
	IF lcur
		auxfilt = auxfilt + "AND subarea.curso_id = list_cur[curs,2] "
	ENDIF
	RETURN
	*--

	*--
PROCEDURE cur_list
	DO filtra
	DIMENSION lst_curs[ 1]
	lst_curs[ 1] = "NÃO EXISTEM CURSOS CADASTRADOS NESTE FILTRO..."
	STORE 0 TO tativo, tbolsista, tinscrito, tconcluido, ttrancado, ttransferido, tdesistente, tabandono
	STORE '' TO totais
	SELECT subarea.sigla + '  ' +  ;
		UPPER(area.descricao) + ' ' +;
		STR(modulos.mes_i,3) + '/' + ;
		STR(modulos.ano_i,4) + '  ' +;
		STR(modulos.mes_f,3) + '/' + ;
		STR(modulos.ano_f,4) + '  ' +;
		REPLICATE('*',14) + STR(modulos.status,1) + ' ' + ;
		strzero(modulos.primario,6), ;
		modulos.subarea + modulos.area ;
		FROM modulos, area, subarea ;
		WHERE modulos.area == area.codigo AND modulos.subarea == subarea.codigo ;
		&auxfilt ;
		ORDER BY modulos.ano_i DESC, modulos.mes_i DESC ;
		INTO ARRAY lst_curs
	DO curso_resumo
	IF lst_curs(1,1) <>  "NÃO EXISTEM CURSOS CADASTRADOS NESTE FILTRO..."
		nrec = ALEN(lst_curs) / 2
		FOR i = 1 TO nrec
			lst_curs[ i, 1] = STRTRAN(lst_curs(i,1), " 10", "OUT")
			lst_curs[ i, 1] = STRTRAN(lst_curs(i,1), " 11", "NOV")
			lst_curs[ i, 1] = STRTRAN(lst_curs(i,1), " 12", "DEZ")
			lst_curs[ i, 1] = STRTRAN(lst_curs(i,1), "  1", "JAN")
			lst_curs[ i, 1] = STRTRAN(lst_curs(i,1), "  2", "FEV")
			lst_curs[ i, 1] = STRTRAN(lst_curs(i,1), "  3", "MAR")
			lst_curs[ i, 1] = STRTRAN(lst_curs(i,1), "  4", "ABR")
			lst_curs[ i, 1] = STRTRAN(lst_curs(i,1), "  5", "MAI")
			lst_curs[ i, 1] = STRTRAN(lst_curs(i,1), "  6", "JUN")
			lst_curs[ i, 1] = STRTRAN(lst_curs(i,1), "  7", "JUL")
			lst_curs[ i, 1] = STRTRAN(lst_curs(i,1), "  8", "AGO")
			lst_curs[ i, 1] = STRTRAN(lst_curs(i,1), "  9", "SET")
			lst_curs[ i, 1] = STRTRAN(lst_curs(i,1), REPLICATE('*',14) + "1",  "ATIVO     ")
			lst_curs[ i, 1] = STRTRAN(lst_curs(i,1), REPLICATE('*',14) + "2",  "CONCLUÍDO ")
			lst_curs[ i, 1] = STRTRAN(lst_curs(i,1), REPLICATE('*',14) + "3",  "LANÇADO   ")
			lst_curs[ i, 1] = STRTRAN(lst_curs(i,1), REPLICATE('*',14) + "4",  "ABORTADO  ")
			SELECT alunores
			SEEK lst_curs[ i, 2]
			IF FOUND()
				lst_curs[ i, 1] = lst_curs[ i, 1] + ;
					STR(alunores.ativo,8) + ;
					STR(alunores.bolsista,8) + ;
					STR(alunores.inscrito,8) + ;
					STR(alunores.concluido,8) + ;
					STR(alunores.trancado,8) + ;
					STR(alunores.transferido,8) + ;
					STR(alunores.desistente,8) + ;
					STR(alunores.abandono,8)
				tativo = tativo + alunores.ativo
				tbolsista = tbolsista + alunores.bolsista
				tinscrito = tinscrito + alunores.inscrito
				tconcluido = tconcluido + alunores.concluido
				ttrancado = ttrancado + alunores.trancado
				ttransferido = ttransferido + alunores.transferido
				tdesistente = tdesistente + alunores.desistente
				tabandono = tabandono + alunores.abandono
			ENDIF
		ENDFOR
		totais = 'CURSOS SELECIONADOS: ' + ;
			STR(ALEN(lst_curs)/2,4) + ;
			SPACE(45) + ;
			STR(tativo,8) + ;
			STR(tbolsista,8) + ;
			STR(tinscrito,8) + ;
			STR(tconcluido,8) + ;
			STR(ttrancado,8) + ;
			STR(ttransferido,8) + ;
			STR(tdesistente,8) + ;
			STR(tabandono,8)
	ENDIF
	CURS = 1
	RETURN
	*--

	*--
PROCEDURE kaartStu

	DO filtra

	SELECT subarea.sigla AS bend, ;
		area.descricao AS hoof, ;
		modulos.mes_i, ;
		modulos.ano_i, ;
		modulos.mes_f, ;
		modulos.ano_f, ;
		modulos.status, ;
		modulos.primario, ;
		modulos.subarea, ;
		modulos.area ;
		FROM modulos, area, subarea ;
		WHERE modulos.area == area.codigo AND ;
		modulos.subarea == subarea.codigo ;
		&auxfilt ;
		INTO CURSOR tijBendA

	DO curso_resumo

	CREATE CURSOR tijBendB (hoof C(20), ;
		bend C(10), ;
		periode C(20), ;
		codeSituatie N(1), ;
		situatie C(10), ;
		actief N(6), ;
		geleerde N(6), ;
		geregistreerd N(6), ;
		voltooid N(6), ;
		opslot N(6), ;
		overgedragen N(6), ;
		dropout N(6), ;
		verlatenheid N(6) )
		
	SELE tijBendA
	SCAN
		SELE tijBendB
		APPEND BLANK
		REPLACE tijBendB.hoof WITH tijBendA.hoof
		REPLACE tijBendB.bend WITH tijBendA.bend
		REPLACE tijBendB.periode WITH STRZERO(tijBendA.mes_i,2) + '/' + STR(tijBendA.ano_i,4) + ' A ' + ;
			STRZERO(tijBendA.mes_f,2) + '/' + STR(tijBendA.ano_f,4)
		REPLACE tijBendB.codeSituatie WITH tijBendA.Status
		DO CASE
		CASE tijBendA.status = 1
			REPLACE tijBendB.situatie WITH 'ATIVO'
		CASE tijBendA.status = 2
			REPLACE tijBendB.situatie WITH 'CONCLUÍDO'
		CASE tijBendA.status = 3
			REPLACE tijBendB.situatie WITH 'LANÇADO'
		CASE tijBendA.status = 4
			REPLACE tijBendB.situatie WITH 'ABORTADO'
		ENDCASE

		SELECT alunores
		SEEK tijBendA.subarea + tijBendA.area
		IF FOUND()
			REPLACE tijBendB.actief WITH alunores.ativo
			REPLACE tijBendB.geleerde WITH alunores.bolsista
			REPLACE tijBendB.geregistreerd WITH alunores.inscrito
			REPLACE tijBendB.voltooid WITH alunores.concluido
			REPLACE tijBendB.opslot WITH alunores.trancado
			REPLACE tijBendB.overgedragen WITH alunores.transferido
			REPLACE tijBendB.dropout WITH alunores.desistente
			REPLACE tijBendB.verlatenheid WITH alunores.abandono
		ENDIF
	ENDSCAN

	SELE * ;
		FROM tijBendB ;
		ORDER BY tijBendB.codeSituatie, tijBendB.hoof, tijBendB.bend ;
		INTO CURSOR afdBend
	
	SELE afdBend
	IF vis_impr
		REPORT FORM afdBendA TO PRINTER PREVIEW NOCONSOLE
	ELSE
		REPORT FORM afdBendA TO PRINTER PROMPT NOCONSOLE
	ENDIF
	
	RETURN
	*--

	*--
FUNCTION getstatus
	PARAMETER pstatus
	DO CASE
	CASE pstatus = 1
		rstatus = "ATIVO          "
	CASE pstatus = 2
		rstatus = "CONCLUÍDO      "
	CASE pstatus = 3
		rstatus = "LANÇADO        "
	CASE pstatus = 4
		rstatus = "ABORTADO       "
	OTHERWISE
		rstatus = "               "
	ENDCASE
	RETURN rstatus
	*--

	*--
FUNCTION rotmes
	PARAMETER pmes
	DO CASE
	CASE pmes = 1
		rmes = "JAN"
	CASE pmes = 2
		rmes = "FEV"
	CASE pmes = 3
		rmes = "MAR"
	CASE pmes = 4
		rmes = "ABR"
	CASE pmes = 5
		rmes = "MAI"
	CASE pmes = 6
		rmes = "JUN"
	CASE pmes = 7
		rmes = "JUL"
	CASE pmes = 8
		rmes = "AGO"
	CASE pmes = 9
		rmes = "SET"
	CASE pmes = 10
		rmes = "OUT"
	CASE pmes = 11
		rmes = "NOV"
	CASE pmes = 12
		rmes = "DEZ"
	OTHERWISE
		rmes = "   "
	ENDCASE
	RETURN rmes
	*--

	*--
PROCEDURE consulta
	SELECT modulos
	SEEK lst_suba(subas,2) + lst_area(areas,2)
	IF FOUND()
		inclui = .F.
		SHOW GET men_curso, 1 PROMPT "Altera"
		SHOW GET CURS DISABLE
		mes_is = modulos.mes_i
		ano_is = modulos.ano_i
		mes_fs = modulos.mes_f
		ano_fs = modulos.ano_f
		stats = modulos.status
		wmods = modulos.modus
		wparcs = modulos.parcs
		winvest = modulos.invest
		wModalidade = modulos.modalidade
		lokWaardCoord = modulos.waardCoord
		IF modulos.coord_id > 0
			wcoord_id = modulos.coord_id
			SELECT funcs
			SEEK wcoord_id
			wcoord = funcs.nome
			SELECT modulos
		ENDIF
	ELSE
		inclui = .T.
		SHOW GET men_curso, 1 PROMPT "Adiciona"
		SHOW GET CURS ENABLE
	ENDIF
	RETURN
	*--

	*--
PROCEDURE cons2
	SELECT modulos
	SEEK lst_curs(CURS,2)
	subas = ASCAN(reg_suba, modulos.subarea)
	areas = ASCAN(reg_area, modulos.area)
	emps = ASCAN(reg_emp, modulos.empr_id)
	cers = ASCAN(reg_cer, modulos.cert_id)
	mes_is = modulos.mes_i
	ano_is = modulos.ano_i
	mes_fs = modulos.mes_f
	ano_fs = modulos.ano_f
	stats = modulos.status
	wmods = modulos.modus
	wparcs = modulos.parcs
	winvest = modulos.invest
	wModalidade = modulos.modalidade
	lokWaardCoord = modulos.waardCoord
	IF modulos.coord_id > 0
		wcoord_id = modulos.coord_id
		SELECT funcs
		SEEK wcoord_id
		wcoord = funcs.nome
		SELECT modulos
	ENDIF
	inclui = .F.
	SHOW GET men_curso, 1 PROMPT "Altera"
	SHOW GET CURS DISABLE
	RETURN
	*--

	*--
PROCEDURE imp_cur
	SELECT modulos
	SEEK lst_curs(CURS,2)
	id_mod = modulos.primario
	SELECT subarea.descricao AS subarea, subarea.sigla,  ;
		area.descricao AS area, modulos.primario, modulos.mes_i,  ;
		modulos.ano_i, modulos.mes_f, modulos.ano_f,  ;
		mod_cab.numero, mod_cab.dat_ini, mod_cab.dat_fim,  ;
		prof.nome AS professor, prof.titulo AS titulo,  ;
		discip.descricao AS disciplina, mod_disc.data,  ;
		SUM(mod_disc.carga) AS carga FROM modulos, subarea, area,  ;
		mod_cab, mod_disc, prof, discip WHERE modulos.area ==  ;
		area.codigo AND modulos.subarea == subarea.codigo AND  ;
		modulos.primario == mod_cab.curso_id AND mod_cab.primario ==  ;
		mod_disc.modulo AND mod_disc.id_prof == prof.codigo AND  ;
		mod_disc.id_disc == discip.codigo AND modulos.primario ==  ;
		id_mod GROUP BY modulos.primario, mod_cab.numero,  ;
		mod_disc.disciplina, mod_disc.professor ORDER BY  ;
		modulos.ano_i, area.descricao, subarea.sigla INTO CURSOR  ;
		cur_imp
	SELECT cur_imp
	IF vis_impr
		REPORT FORM cur_mods TO PRINTER PREVIEW
	ELSE
		REPORT FORM cur_mods TO PRINTER PROMPT NOCONSOLE
	ENDIF
	RETURN
	*--

	*--
PROCEDURE imp_simp
	SELECT modulos
	SEEK lst_curs(CURS,2)
	id_mod = modulos.primario
	SELECT subarea.descricao AS subarea, subarea.sigla,  ;
		area.descricao AS area, modulos.primario, modulos.mes_i,  ;
		modulos.ano_i, modulos.mes_f, modulos.ano_f,  ;
		mod_cab.numero, mod_cab.dat_ini, mod_cab.dat_fim,  ;
		prof.nome AS professor, prof.titulo AS titulo,  ;
		discip.descricao AS disciplina, mod_disc.data,  ;
		SUM(mod_disc.carga) AS carga FROM modulos, subarea, area,  ;
		mod_cab, mod_disc, prof, discip WHERE modulos.area ==  ;
		area.codigo AND modulos.subarea == subarea.codigo AND  ;
		modulos.primario == mod_cab.curso_id AND mod_cab.primario ==  ;
		mod_disc.modulo AND mod_disc.id_prof == prof.codigo AND  ;
		mod_disc.id_disc == discip.codigo AND modulos.primario ==  ;
		id_mod GROUP BY modulos.primario, mod_cab.numero,  ;
		mod_disc.disciplina, mod_disc.professor ORDER BY  ;
		modulos.ano_i, area.descricao, subarea.sigla INTO CURSOR  ;
		cur_imp
	SELECT cur_imp
	IF vis_impr
		REPORT FORM cur_mod2 TO PRINTER PREVIEW
	ELSE
		REPORT FORM cur_mod2 TO PRINTER PROMPT NOCONSOLE
	ENDIF
	RETURN
	*--

	*--
PROCEDURE exp_cur
	SELECT modulos
	SEEK lst_curs(CURS,2)
	auxcur = modulos.primario
	SELECT "I" AS tipo, modulos.primario AS turma,  ;
		mod_disc.disciplina, SUM(mod_disc.carga) AS carga FROM  ;
		modulos, subarea, area, mod_cab, mod_disc WHERE  ;
		modulos.area == area.codigo AND modulos.subarea ==  ;
		subarea.codigo AND modulos.primario == mod_cab.curso_id  ;
		AND mod_cab.primario == mod_disc.modulo AND  ;
		modulos.primario == auxcur GROUP BY mod_cab.numero,  ;
		mod_disc.disciplina, mod_disc.professor ORDER BY  ;
		mod_cab.numero INTO CURSOR exp_dis
	IF FILE("C:\DISCIP.XLS")
		DELETE FILE C:\discip.xls
	ENDIF
	file_name = "C:\DISCIP.XLS"
	out_file = PUTFILE("Nome do Arquivo:", file_name, "XLS")
	IF EMPTY(out_file)
		DO winalert WITH "ATENÇÃO", "PLANILHA NÃO GRAVADA."
	ELSE
		SELECT exp_dis
		SET SAFETY OFF
		COPY TO &out_file TYPE XLS
		SET SAFETY ON
		DO winalert WITH "ATENCÃO", "PLANILHA CRIADO COM SUCESSO: "+ ;
			ALLTRIM(out_file)
	ENDIF
	RETURN
	*--

	*--
PROCEDURE lista_docs
	auxsuba = modulos.subarea
	auxarea = modulos.area
	SELECT cliente.nome, cliente.codigo FROM cliente, clicurso WHERE  ;
		cliente.codigo == clicurso.codcli AND clicurso.codarea ==  ;
		auxarea AND clicurso.codsub == auxsuba AND  ;
		ALLTRIM(clicurso.situacao) $ "ATIVO-CONCLUIDO-BOLSISTA"  ;
		ORDER BY cliente.nome INTO CURSOR alus
	CREATE CURSOR falta_doc (NOME C (45), codigo N (6), doc C (30))
	SELECT alus
	SCAN
		SELECT cli_docs
		SEEK alus.codigo
		FOR i = 1 TO 9
			SELECT cli_docs
			auxdoc = "Doc" + STR(i, 1)
			IF !&auxdoc
				SELECT falta_doc
				APPEND BLANK
				REPLACE falta_doc.nome WITH alus.nome
				REPLACE falta_doc.codigo WITH alus.codigo
				REPLACE falta_doc.doc WITH list_doc(i)
			ENDIF
		ENDFOR
		SELECT alus
	ENDSCAN
	SELECT falta_doc
	COUNT TO nrec
	IF nrec > 0
		IF vis_impr
			REPORT FORM faltadoc TO PRINTER PREVIEW NOCONSOLE
		ELSE
			REPORT FORM faltadoc TO PRINTER PROMPT NOCONSOLE
		ENDIF
	ENDIF
	RETURN
	*--

PROCEDURE curso_resumo
	SELECT clicurso.codarea, ;
		clicurso.codsub, ;
		clicurso.situacao, ;
		COUNT(clicurso.primario) AS quant ;
		FROM clicurso;
		GROUP BY clicurso.codarea, clicurso.codsub, clicurso.situacao ;
		ORDER BY clicurso.codarea, clicurso.codsub, clicurso.situacao ;
		INTO CURSOR auxres

	CREATE CURSOR alunores (area_id C(4), ;
		suba_id C(4), ;
		ativo N(3), ;
		bolsista N(3), ;
		inscrito N(3), ;
		concluido N(3), ;
		trancado N(3), ;
		transferido N(3), ;
		desistente N(3), ;
		abandono N(3) )

	SELE alunores
	INDEX ON suba_id + area_id TAG suba

	SELE auxres
	SCAN
		SELE alunores
		SEEK auxres.codsub + auxres.codarea
		IF !FOUND()
			SELE alunores
			APPEND BLANK
			REPLACE alunores.area_id WITH auxres.codarea
			REPLACE alunores.suba_id WITH auxres.codsub
		ENDIF
		auxfield = auxres.situacao
		SELE alunores
		REPLACE &auxfield WITH auxres.quant
		SELE auxres
	ENDSCAN
	RETURN


*       *********************************************************
*       *                                                         
*       * _2VO0YOD2W           subas VALID                        
*       *                                                         
*       * Function Origin:                                        
*       *                                                         
*       * From Platform:       Windows                            
*       * From Screen:         CAD_CURS,     Record Number:   17  
*       * Variable:            subas                              
*       * Called By:           VALID Clause                       
*       * Object Type:         Popup                              
*       * Snippet Number:      1                                  
*       *                                                         
*       *********************************************************
*
FUNCTION _2VO0YOD2W     &&  subas VALID
#REGION 1
DO cur_list
SHOW GETS
*--

*       *********************************************************
*       *                                                         
*       * _2VO0YOD2X           areas VALID                        
*       *                                                         
*       * Function Origin:                                        
*       *                                                         
*       * From Platform:       Windows                            
*       * From Screen:         CAD_CURS,     Record Number:   18  
*       * Variable:            areas                              
*       * Called By:           VALID Clause                       
*       * Object Type:         Popup                              
*       * Snippet Number:      2                                  
*       *                                                         
*       *********************************************************
*
FUNCTION _2VO0YOD2X     &&  areas VALID
#REGION 1
DO cur_list
SHOW GETS
*--

*       *********************************************************
*       *                                                         
*       * _3QA6A2ZDH           wmodalidade VALID                  
*       *                                                         
*       * Function Origin:                                        
*       *                                                         
*       * From Platform:       Windows                            
*       * From Screen:         CAD_CURS,     Record Number:   19  
*       * Variable:            wmodalidade                        
*       * Called By:           VALID Clause                       
*       * Object Type:         Radio Button                       
*       * Snippet Number:      3                                  
*       *                                                         
*       *********************************************************
*
FUNCTION _3qa6a2zdh     &&  wmodalidade VALID
#REGION 1
DO cur_list
SHOW GETS


*       *********************************************************
*       *                                                         
*       * _2VO0YOD33           wcoord_id VALID                    
*       *                                                         
*       * Function Origin:                                        
*       *                                                         
*       * From Platform:       Windows                            
*       * From Screen:         CAD_CURS,     Record Number:   25  
*       * Variable:            wcoord_id                          
*       * Called By:           VALID Clause                       
*       * Object Type:         Field                              
*       * Snippet Number:      4                                  
*       *                                                         
*       *********************************************************
*
FUNCTION _2VO0YOD33     &&  wcoord_id VALID
#REGION 1
IF wcoord_id = 0
 wcoord = ""
ELSE
 SELECT funcs
 SEEK wcoord_id
 IF FOUND()
  IF funcs.setor = "COORDENAÇÃO"
   wcoord = funcs.nome
  ELSE
   wcoord = ""
  ENDIF
 ELSE
  wcoord = ""
 ENDIF
ENDIF
SHOW GETS
*--

*       *********************************************************
*       *                                                         
*       * _2VO0YOD38           busccoord VALID                    
*       *                                                         
*       * Function Origin:                                        
*       *                                                         
*       * From Platform:       Windows                            
*       * From Screen:         CAD_CURS,     Record Number:   26  
*       * Variable:            busccoord                          
*       * Called By:           VALID Clause                       
*       * Object Type:         Push Button                        
*       * Snippet Number:      5                                  
*       *                                                         
*       *********************************************************
*
FUNCTION _2VO0YOD38     &&  busccoord VALID
#REGION 1
DO Entrada3.SPR
SHOW GETS
*--

*       *********************************************************
*       *                                                         
*       * _2VO0YOD31           emps VALID                         
*       *                                                         
*       * Function Origin:                                        
*       *                                                         
*       * From Platform:       Windows                            
*       * From Screen:         CAD_CURS,     Record Number:   28  
*       * Variable:            emps                               
*       * Called By:           VALID Clause                       
*       * Object Type:         Popup                              
*       * Snippet Number:      6                                  
*       *                                                         
*       *********************************************************
*
FUNCTION _2VO0YOD31     &&  emps VALID
#REGION 1
DO cur_list
DO consulta
SHOW GETS
*--

*       *********************************************************
*       *                                                         
*       * _2VO0YOD32           cers VALID                         
*       *                                                         
*       * Function Origin:                                        
*       *                                                         
*       * From Platform:       Windows                            
*       * From Screen:         CAD_CURS,     Record Number:   29  
*       * Variable:            cers                               
*       * Called By:           VALID Clause                       
*       * Object Type:         Popup                              
*       * Snippet Number:      7                                  
*       *                                                         
*       *********************************************************
*
FUNCTION _2VO0YOD32     &&  cers VALID
#REGION 1
DO cur_list
DO consulta
SHOW GETS
*--

*       *********************************************************
*       *                                                         
*       * _2VO0YOD3A           men_curso VALID                    
*       *                                                         
*       * Function Origin:                                        
*       *                                                         
*       * From Platform:       Windows                            
*       * From Screen:         CAD_CURS,     Record Number:   33  
*       * Variable:            men_curso                          
*       * Called By:           VALID Clause                       
*       * Object Type:         Push Button                        
*       * Snippet Number:      8                                  
*       *                                                         
*       *********************************************************
*
FUNCTION _2VO0YOD3A     &&  men_curso VALID
#REGION 1
IF inclui
	ACCESS = veracess(wcoduser,27,"INC")
ELSE
	ACCESS = veracess(wcoduser,27,"ALT")
ENDIF
IF ACCESS
	DO mudancas
	SHOW GETS
ENDIF
*--


*       *********************************************************
*       *                                                         
*       * _2VO0YOD3B           Curs VALID                         
*       *                                                         
*       * Function Origin:                                        
*       *                                                         
*       * From Platform:       Windows                            
*       * From Screen:         CAD_CURS,     Record Number:   34  
*       * Variable:            Curs                               
*       * Called By:           VALID Clause                       
*       * Object Type:         List                               
*       * Snippet Number:      9                                  
*       *                                                         
*       *********************************************************
*
FUNCTION _2VO0YOD3B     &&  Curs VALID
#REGION 1
DO cons2
SHOW GETS
*--

*       *********************************************************
*       *                                                         
*       * _2VO0YOD3P           teste VALID                        
*       *                                                         
*       * Function Origin:                                        
*       *                                                         
*       * From Platform:       Windows                            
*       * From Screen:         CAD_CURS,     Record Number:   36  
*       * Variable:            teste                              
*       * Called By:           VALID Clause                       
*       * Object Type:         Push Button                        
*       * Snippet Number:      10                                 
*       *                                                         
*       *********************************************************
*
FUNCTION _2VO0YOD3P     &&  teste VALID
#REGION 1
DO Reposit.SPR
*--

*       *********************************************************
*       *                                                         
*       * _3QA6A2ZDQ           m_curso VALID                      
*       *                                                         
*       * Function Origin:                                        
*       *                                                         
*       * From Platform:       Windows                            
*       * From Screen:         CAD_CURS,     Record Number:   37  
*       * Variable:            m_curso                            
*       * Called By:           VALID Clause                       
*       * Object Type:         Push Button                        
*       * Snippet Number:      11                                 
*       *                                                         
*       *********************************************************
*
FUNCTION _3qa6a2zdq     &&  m_curso VALID
#REGION 1
DO CASE
CASE m_curso = 1
	ACCESS = veracess(wcoduser,28,"CON")
	IF ACCESS
		SELECT modulos
		SEEK lst_curs(CURS,2)
		DO modulos.spr
	ENDIF
CASE m_curso = 2
	ACCESS = veracess(wcoduser,27,"IMP")
	IF ACCESS
		DO imp_simp
	ENDIF
CASE m_curso = 3
	ACCESS = veracess(wcoduser,27,"IMP")
	IF ACCESS
		DO imp_cur
	ENDIF
CASE m_curso = 4
	ACCESS = veracess(wcoduser,27,"IMP")
	IF ACCESS
		DO exp_cur
	ENDIF
CASE m_curso = 5
	ACCESS = veracess(wcoduser,27,"IMP")
	IF ACCESS
		DO mod_pres
	ENDIF
CASE m_curso = 6
	ACCESS = veracess(wcoduser,35,"IMP")
	IF ACCESS
		SELECT modulos
		SEEK lst_curs(CURS,2)
		DO lista_docs
	ENDIF
CASE m_curso = 7
	ACCESS = veracess(wcoduser,27,"EXC")
	IF ACCESS
		nmods = 0
		SELECT modulos
		SEEK lst_curs(CURS,2)
		SELECT mod_cab
		CALCULATE FOR mod_cab.curso_id = modulos.primario CNT() TO  ;
			nmods
		IF nmods = 0
			CONF = winconf("ATENÇÃO", ;
				"Tem certeza que deseja excluir este Curso?")
			IF CONF
				SELECT modulos
				SEEK lst_curs(CURS,2)
				DELETE
				DO cur_list
			ENDIF
		ELSE
			DO winalert WITH "ATENÇÃO",  ;
				"Este curso não pode ser excluído!"
		ENDIF
	ENDIF
CASE m_curso = 8
	DO kaartStu
CASE m_curso = 9
	CLEAR READ
ENDCASE
SHOW GETS
*--


*       *********************************************************
*       *                                                         
*       * _2VO0YOD3H           lcurso VALID                       
*       *                                                         
*       * Function Origin:                                        
*       *                                                         
*       * From Platform:       Windows                            
*       * From Screen:         CAD_CURS,     Record Number:   38  
*       * Variable:            lcurso                             
*       * Called By:           VALID Clause                       
*       * Object Type:         Check Box                          
*       * Snippet Number:      12                                 
*       *                                                         
*       *********************************************************
*
FUNCTION _2VO0YOD3H     &&  lcurso VALID
#REGION 1
DO cur_list
SHOW GETS
*--

*       *********************************************************
*       *                                                         
*       * _2VO0YOD3I           larea VALID                        
*       *                                                         
*       * Function Origin:                                        
*       *                                                         
*       * From Platform:       Windows                            
*       * From Screen:         CAD_CURS,     Record Number:   39  
*       * Variable:            larea                              
*       * Called By:           VALID Clause                       
*       * Object Type:         Check Box                          
*       * Snippet Number:      13                                 
*       *                                                         
*       *********************************************************
*
FUNCTION _2VO0YOD3I     &&  larea VALID
#REGION 1
DO cur_list
SHOW GETS
*--

*       *********************************************************
*       *                                                         
*       * _3QA6A2ZDU           lmodalidade VALID                  
*       *                                                         
*       * Function Origin:                                        
*       *                                                         
*       * From Platform:       Windows                            
*       * From Screen:         CAD_CURS,     Record Number:   40  
*       * Variable:            lmodalidade                        
*       * Called By:           VALID Clause                       
*       * Object Type:         Check Box                          
*       * Snippet Number:      14                                 
*       *                                                         
*       *********************************************************
*
FUNCTION _3qa6a2zdu     &&  lmodalidade VALID
#REGION 1
DO cur_list
SHOW GETS


*       *********************************************************
*       *                                                         
*       * _2VO0YOD3K           lempr VALID                        
*       *                                                         
*       * Function Origin:                                        
*       *                                                         
*       * From Platform:       Windows                            
*       * From Screen:         CAD_CURS,     Record Number:   42  
*       * Variable:            lempr                              
*       * Called By:           VALID Clause                       
*       * Object Type:         Check Box                          
*       * Snippet Number:      15                                 
*       *                                                         
*       *********************************************************
*
FUNCTION _2VO0YOD3K     &&  lempr VALID
#REGION 1
DO cur_list
SHOW GETS
*--

*       *********************************************************
*       *                                                         
*       * _3QA6A2ZED           lcert VALID                        
*       *                                                         
*       * Function Origin:                                        
*       *                                                         
*       * From Platform:       Windows                            
*       * From Screen:         CAD_CURS,     Record Number:   43  
*       * Variable:            lcert                              
*       * Called By:           VALID Clause                       
*       * Object Type:         Check Box                          
*       * Snippet Number:      16                                 
*       *                                                         
*       *********************************************************
*
FUNCTION _3qa6a2zed     &&  lcert VALID
#REGION 1
DO cur_list
SHOW GETS


*       *********************************************************
*       *                                                         
*       * _3QA6A2ZEE           men_curso VALID                    
*       *                                                         
*       * Function Origin:                                        
*       *                                                         
*       * From Platform:       Windows                            
*       * From Screen:         CAD_CURS,     Record Number:   50  
*       * Variable:            men_curso                          
*       * Called By:           VALID Clause                       
*       * Object Type:         Push Button                        
*       * Snippet Number:      17                                 
*       *                                                         
*       *********************************************************
*
FUNCTION _3qa6a2zee     &&  men_curso VALID
#REGION 1
DO cur_list
SHOW GETS

*       *********************************************************
*       *                                                         
*       * _2VO0YOD2W           curs VALID                         
*       *                                                         
*       * Function Origin:                                        
*       *                                                         
*       * From Platform:       Windows                            
*       * From Screen:         CAD_CURS,     Record Number:   51  
*       * Variable:            curs                               
*       * Called By:           VALID Clause                       
*       * Object Type:         Popup                              
*       * Snippet Number:      18                                 
*       *                                                         
*       *********************************************************
*
FUNCTION _2VO0YOD2W     &&  curs VALID
#REGION 1
DO cur_list
SHOW GETS
*--

*       *********************************************************
*       *                                                         
*       * _2VO0YOD3H           lcur VALID                         
*       *                                                         
*       * Function Origin:                                        
*       *                                                         
*       * From Platform:       Windows                            
*       * From Screen:         CAD_CURS,     Record Number:   52  
*       * Variable:            lcur                               
*       * Called By:           VALID Clause                       
*       * Object Type:         Check Box                          
*       * Snippet Number:      19                                 
*       *                                                         
*       *********************************************************
*
FUNCTION _2VO0YOD3H     &&  lcur VALID
#REGION 1
DO cur_list
SHOW GETS
*--

*       *********************************************************
*       *                                                         
*       * _3QA6A2ZEH           men_curso VALID                    
*       *                                                         
*       * Function Origin:                                        
*       *                                                         
*       * From Platform:       Windows                            
*       * From Screen:         CAD_CURS,     Record Number:   53  
*       * Variable:            men_curso                          
*       * Called By:           VALID Clause                       
*       * Object Type:         Push Button                        
*       * Snippet Number:      20                                 
*       *                                                         
*       *********************************************************
*
FUNCTION _3qa6a2zeh     &&  men_curso VALID
#REGION 1
ACCESS = veracess(wcoduser,27,"ALT")
IF ACCESS
	bevestigt = .F.
	bevestigt = WINCONF('ATENÇÃO','TEM CERTEZA QUE DESEJA EXECUTAR ESTA ROTINA DE ATUALIZAÇÃO?')
	IF bevestigt
		DIMENSION lijWijzi[1]
		lijWijzi[1] = 'Nenhuma atualização necessária no momento...'
		DO wijzistatus
		DO updaten.SPR
	ENDIF
ENDIF


PROCEDURE wijzistatus
	*-- wijzigt de einddatum van de klas, op basis van de datum van afsluiting van de modules

	SELECT mc.curso_id, ;
		MAX(mc.dat_fim) AS laatstedatum ;
		FROM mc ;
		GROUP BY mc.curso_id ;
		ORDER BY mc.curso_id ;
		INTO CURSOR tijmodul

	SELECT tijmodul
	SCAN
		SELECT mp
		SEEK tijmodul.curso_id
		IF FOUND()
			IF (STR(YEAR(tijmodul.laatstedatum),4) + strzero(MONTH(tijmodul.laatstedatum),2)) > ;
					(STR(mp.ano_f,4) + strzero(mp.mes_f,2))
					
				DO voegUpdaten WITH + 'ALTERAÇÃO DE FINAL DE CURSO - DE ' + ;
					strzero(mp.mes_f,2) + '/' + str(mp.ano_f,4) + ' PARA ' + ;
					RIGHT(DTOC(tijmodul.laatstedatum),7), ;
					mp.subarea, ;
					mp.area
					
				SELECT mp
				REPLACE mp.ano_f WITH YEAR(tijmodul.laatstedatum)
				REPLACE mp.mes_f WITH MONTH(tijmodul.laatstedatum)
			ENDIF
		ENDIF
		SELECT tijmodul
	ENDSCAN

	SELECT mp
	SCAN
		DO CASE
		CASE (STR(YEAR(DATE()),4) + strzero(MONTH(DATE()),2)) > ;
				(STR(mp.ano_f,4) + strzero(mp.mes_f,2)) AND ;
				(mp.status = 1)
					
			DO voegUpdaten WITH + 'ALTERAÇÃO DE STATUS - DE ATIVO PARA CONCLUÍDO', ;
				mp.subarea, ;
				mp.area
					
			REPLACE mp.status WITH 2

		CASE (STR(YEAR(DATE()),4) + strzero(MONTH(DATE()),2)) < ;
				(STR(mp.ano_f,4) + strzero(mp.mes_f,2)) AND ;
				(mp.status = 2)
					
			DO voegUpdaten WITH + 'ALTERAÇÃO DE STATUS - DE CONCLUÍDO PARA ATIVO', ;
				mp.subarea, ;
				mp.area
					
			REPLACE mp.status WITH 1
		ENDCASE
	ENDSCAN

	RETURN
	
PROCEDURE voegUpdaten
PARAMETER argLijn, argBend, argHoof
	SELE subarea
	SEEK argBend
	SELE area
	SEEK argHoof
	IF lijWijzi[1] = 'Nenhuma atualização necessária no momento...'
		teg = 1
	ELSE
		teg = ALEN(lijWijzi)+1
	ENDIF
	DIMENSION lijWijzi[teg]
	lijWijzi[teg] = ALLTRIM(subarea.sigla) + ' ' + ALLTRIM(area.descricao) + ': ' + argLijn
RETURN

*       *********************************************************
*       *                                                         
*       * _2VO0YOD3R           Read Level When                    
*       *                                                         
*       * Function Origin:                                        
*       *                                                         
*       *                                                         
*       * From Platform:       Windows                            
*       * From Screen:         CAD_CURS                           
*       * Called By:           READ Statement                     
*       * Snippet Number:      21                                 
*       *                                                         
*       *********************************************************
*
FUNCTION _2VO0YOD3R     && Read Level When
*
* When Code from screen: CAD_CURS
*
#REGION 1
DO cur_list
DO consulta
SHOW GETS
*--

*       *********************************************************
*       *                                                         
*       * _2VO0YOD3S           Read Level Show                    
*       *                                                         
*       * Function Origin:                                        
*       *                                                         
*       *                                                         
*       * From Platform:       Windows                            
*       * From Screen:         CAD_CURS                           
*       * Called By:           READ Statement                     
*       * Snippet Number:      22                                 
*       *                                                         
*       *********************************************************
*
FUNCTION _2VO0YOD3S     && Read Level Show
PRIVATE currwind
STORE WOUTPUT() TO currwind
*
* Show Code from screen: CAD_CURS
*
#REGION 1
* PRIVATE currwind
* STORE WOUTPUT() TO currwind
* IF SYS(2016) = "_2VO0YOD21" .OR. SYS(2016) = "*"
*  ACTIVATE WINDOW SAME _2vo0yod21
*  @  13.462 ,  34.000  SAY wcoord FONT "MS Sans Serif", 8 SIZE  ;
*   1.000 , 92.600 , 0.000  COLOR RGB(0,0,0,,,),
* ENDIF
* IF !EMPTY(currwind)
*  ACTIVATE WINDOW SAME (currwind)
* ENDIF
*--
IF SYS(2016) = "_2VO0YOD21" OR SYS(2016) = "*"
	ACTIVATE WINDOW _2vo0yod21 SAME
	@ 10.231,160.600 SAY wcoord ;
		SIZE 1.000,33.400, 0.000 ;
		FONT "Arial", 8 ;
		COLOR RGB(0,0,0,255,255,255)
	@ 42.846,3.000 SAY totais ;
		SIZE 1.000,134.857, 0.000 ;
		FONT "Courier New", 8 ;
		COLOR RGB(0,0,0,255,255,255)
	@ 18.846,3.000 SAY "TURMA       LOCAL                INÍCIO    FINAL     STATUS     CODIGO   ATIVO   BOLSA   INSCR    CONC   TRANC  TRANSF  DESIST   ABAND" ;
		SIZE 1.000,134.857, 0.000 ;
		FONT "Courier New", 8 ;
		COLOR RGB(0,0,0,255,255,255)
ENDIF
IF NOT EMPTY(currwind)
	ACTIVATE WINDOW (currwind) SAME
ENDIF